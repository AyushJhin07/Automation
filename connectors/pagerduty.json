{
  "id": "pagerduty",
  "name": "PagerDuty",
  "description": "PagerDuty incident response and on-call management platform",
  "category": "Monitoring", 
  "icon": "pagerduty",
  "color": "#06AC38",
  "version": "1.0.0",
  "authentication": {
    "type": "api_key",
    "config": {
      "apiKeyLocation": "header",
      "apiKeyName": "Authorization",
      "apiKeyPrefix": "Token token="
    }
  },
  "baseUrl": "https://api.pagerduty.com",
  "actions": [
    {
      "id": "test_connection",
      "name": "Test Connection",
      "description": "Test the connection to PagerDuty",
      "parameters": {
        "type": "object",
        "properties": {},
        "required": [],
        "additionalProperties": false
      }
    },
    {
      "id": "create_incident",
      "name": "Create Incident",
      "description": "Create a new incident",
      "parameters": {
        "type": "object",
        "properties": {
          "incident": {
            "type": "object",
            "properties": {
              "type": {"type": "string", "default": "incident"},
              "title": {"type": "string"},
              "service": {
                "type": "object",
                "properties": {
                  "id": {"type": "string"},
                  "type": {"type": "string", "default": "service_reference"}
                },
                "required": ["id"]
              },
              "urgency": {"type": "string", "enum": ["high", "low"], "default": "high"},
              "incident_key": {"type": "string"},
              "body": {
                "type": "object",
                "properties": {
                  "type": {"type": "string", "default": "incident_body"},
                  "details": {"type": "string"}
                }
              }
            },
            "required": ["title", "service"],
            "description": "Incident details"
          }
        },
        "required": ["incident"],
        "additionalProperties": false
      }
    },
    {
      "id": "get_incidents",
      "name": "Get Incidents",
      "description": "Get list of incidents",
      "parameters": {
        "type": "object",
        "properties": {
          "since": {
            "type": "string",
            "format": "date-time",
            "description": "Start of date range"
          },
          "until": {
            "type": "string",
            "format": "date-time",
            "description": "End of date range"
          },
          "statuses": {
            "type": "array",
            "items": {"type": "string", "enum": ["triggered", "acknowledged", "resolved"]},
            "description": "Filter by statuses"
          },
          "incident_key": {
            "type": "string",
            "description": "Filter by incident key"
          },
          "service_ids": {
            "type": "array",
            "items": {"type": "string"},
            "description": "Filter by service IDs"
          },
          "team_ids": {
            "type": "array",
            "items": {"type": "string"},
            "description": "Filter by team IDs"
          },
          "user_ids": {
            "type": "array",
            "items": {"type": "string"},
            "description": "Filter by user IDs"
          },
          "urgencies": {
            "type": "array",
            "items": {"type": "string", "enum": ["high", "low"]},
            "description": "Filter by urgencies"
          },
          "time_zone": {
            "type": "string",
            "default": "UTC",
            "description": "Time zone"
          },
          "sort_by": {
            "type": "string",
            "enum": ["incident_number", "created_at", "resolved_at", "urgency"],
            "default": "created_at",
            "description": "Sort field"
          },
          "include": {
            "type": "array",
            "items": {"type": "string", "enum": ["services", "assignments", "acknowledgements", "first_trigger_log_entries", "escalation_policies", "teams"]},
            "description": "Include additional data"
          },
          "limit": {
            "type": "number",
            "minimum": 1,
            "maximum": 100,
            "default": 25,
            "description": "Number of results"
          },
          "offset": {
            "type": "number",
            "minimum": 0,
            "default": 0,
            "description": "Offset for pagination"
          }
        },
        "required": [],
        "additionalProperties": false
      }
    },
    {
      "id": "get_incident",
      "name": "Get Incident",
      "description": "Get incident details",
      "parameters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Incident ID"
          },
          "include": {
            "type": "array",
            "items": {"type": "string"},
            "description": "Include additional data"
          }
        },
        "required": ["id"],
        "additionalProperties": false
      }
    },
    {
      "id": "update_incident",
      "name": "Update Incident",
      "description": "Update an incident",
      "parameters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Incident ID"
          },
          "incident": {
            "type": "object",
            "properties": {
              "type": {"type": "string", "default": "incident"},
              "title": {"type": "string"},
              "status": {"type": "string", "enum": ["acknowledged", "resolved"]},
              "resolution": {"type": "string"},
              "escalation_level": {"type": "number"},
              "assignments": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "assignee": {
                      "type": "object",
                      "properties": {
                        "id": {"type": "string"},
                        "type": {"type": "string"}
                      }
                    }
                  }
                }
              }
            },
            "description": "Incident updates"
          }
        },
        "required": ["id", "incident"],
        "additionalProperties": false
      }
    },
    {
      "id": "get_services",
      "name": "Get Services",
      "description": "Get list of services",
      "parameters": {
        "type": "object",
        "properties": {
          "team_ids": {
            "type": "array",
            "items": {"type": "string"},
            "description": "Filter by team IDs"
          },
          "time_zone": {
            "type": "string",
            "default": "UTC",
            "description": "Time zone"
          },
          "sort_by": {
            "type": "string",
            "enum": ["name", "created_at"],
            "default": "name",
            "description": "Sort field"
          },
          "query": {
            "type": "string",
            "description": "Search query"
          },
          "include": {
            "type": "array",
            "items": {"type": "string", "enum": ["escalation_policies", "teams"]},
            "description": "Include additional data"
          },
          "limit": {
            "type": "number",
            "minimum": 1,
            "maximum": 100,
            "default": 25,
            "description": "Number of results"
          },
          "offset": {
            "type": "number",
            "minimum": 0,
            "default": 0,
            "description": "Offset for pagination"
          }
        },
        "required": [],
        "additionalProperties": false
      }
    },
    {
      "id": "get_users",
      "name": "Get Users",
      "description": "Get list of users",
      "parameters": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "Search query"
          },
          "team_ids": {
            "type": "array",
            "items": {"type": "string"},
            "description": "Filter by team IDs"
          },
          "include": {
            "type": "array",
            "items": {"type": "string", "enum": ["contact_methods", "notification_rules", "coordinated_incidents", "teams"]},
            "description": "Include additional data"
          },
          "limit": {
            "type": "number",
            "minimum": 1,
            "maximum": 100,
            "default": 25,
            "description": "Number of results"
          },
          "offset": {
            "type": "number",
            "minimum": 0,
            "default": 0,
            "description": "Offset for pagination"
          }
        },
        "required": [],
        "additionalProperties": false
      }
    },
    {
      "id": "get_on_calls",
      "name": "Get On-Calls",
      "description": "Get on-call information",
      "parameters": {
        "type": "object",
        "properties": {
          "time_zone": {
            "type": "string",
            "default": "UTC",
            "description": "Time zone"
          },
          "include": {
            "type": "array",
            "items": {"type": "string", "enum": ["users", "escalation_policies", "escalation_policy"]},
            "description": "Include additional data"
          },
          "user_ids": {
            "type": "array",
            "items": {"type": "string"},
            "description": "Filter by user IDs"
          },
          "escalation_policy_ids": {
            "type": "array",
            "items": {"type": "string"},
            "description": "Filter by escalation policy IDs"
          },
          "schedule_ids": {
            "type": "array",
            "items": {"type": "string"},
            "description": "Filter by schedule IDs"
          },
          "since": {
            "type": "string",
            "format": "date-time",
            "description": "Start of date range"
          },
          "until": {
            "type": "string",
            "format": "date-time",
            "description": "End of date range"
          },
          "earliest": {
            "type": "boolean",
            "default": false,
            "description": "Return earliest on-call"
          },
          "limit": {
            "type": "number",
            "minimum": 1,
            "maximum": 100,
            "default": 25,
            "description": "Number of results"
          },
          "offset": {
            "type": "number",
            "minimum": 0,
            "default": 0,
            "description": "Offset for pagination"
          }
        },
        "required": [],
        "additionalProperties": false
      }
    }
  ],
  "triggers": [
    {
      "id": "incident_triggered",
      "name": "Incident Triggered",
      "description": "Triggered when a new incident is created",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "service_ids": {
            "type": "array",
            "items": {"type": "string"},
            "description": "Filter by service IDs"
          },
          "urgencies": {
            "type": "array",
            "items": {"type": "string", "enum": ["high", "low"]},
            "description": "Filter by urgencies"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "id": {"type": "string"},
          "incident_number": {"type": "number"},
          "title": {"type": "string"},
          "description": {"type": "string"},
          "created_at": {"type": "string"},
          "status": {"type": "string"},
          "incident_key": {"type": "string"},
          "service": {"type": "object"},
          "escalation_policy": {"type": "object"},
          "assignments": {"type": "array"},
          "acknowledgements": {"type": "array"},
          "last_status_change_at": {"type": "string"},
          "urgency": {"type": "string"}
        }
      }
    },
    {
      "id": "incident_acknowledged",
      "name": "Incident Acknowledged",
      "description": "Triggered when an incident is acknowledged",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "service_ids": {
            "type": "array",
            "items": {"type": "string"},
            "description": "Filter by service IDs"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "id": {"type": "string"},
          "incident_number": {"type": "number"},
          "title": {"type": "string"},
          "status": {"type": "string"},
          "acknowledged_at": {"type": "string"},
          "acknowledger": {"type": "object"}
        }
      }
    },
    {
      "id": "incident_resolved",
      "name": "Incident Resolved",
      "description": "Triggered when an incident is resolved",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "service_ids": {
            "type": "array",
            "items": {"type": "string"},
            "description": "Filter by service IDs"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "id": {"type": "string"},
          "incident_number": {"type": "number"},
          "title": {"type": "string"},
          "status": {"type": "string"},
          "resolved_at": {"type": "string"},
          "resolver": {"type": "object"}
        }
      }
    }
  ],
  "testConnection": {
    "method": "GET",
    "endpoint": "/users/me"
  }
}