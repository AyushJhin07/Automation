{
  "id": "airtable",
  "name": "Airtable",
  "description": "Airtable cloud-based database platform",
  "category": "Database",
  "icon": "airtable",
  "color": "#18BFFF",
  "availability": "stable",
  "version": "1.0.0",
  "authentication": {
    "type": "api_key",
    "config": {
      "type": "header",
      "name": "Authorization",
      "prefix": "Bearer"
    }
  },
  "baseUrl": "https://api.airtable.com/v0",
  "actions": [
    {
      "id": "test_connection",
      "name": "Test Connection",
      "description": "Test the connection to Airtable",
      "parameters": {
        "type": "object",
        "properties": {},
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "create_record",
      "name": "Create Record",
      "description": "Create a new record in a table",
      "parameters": {
        "type": "object",
        "properties": {
          "baseId": {
            "type": "string",
            "description": "Base ID"
          },
          "tableId": {
            "type": "string",
            "description": "Table ID or name"
          },
          "fields": {
            "type": "object",
            "description": "Record fields as key-value pairs"
          },
          "typecast": {
            "type": "boolean",
            "default": false,
            "description": "Automatically format data"
          }
        },
        "required": [
          "baseId",
          "tableId",
          "fields"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "update_record",
      "name": "Update Record",
      "description": "Update an existing record",
      "parameters": {
        "type": "object",
        "properties": {
          "baseId": {
            "type": "string",
            "description": "Base ID"
          },
          "tableId": {
            "type": "string",
            "description": "Table ID or name"
          },
          "recordId": {
            "type": "string",
            "description": "Record ID"
          },
          "fields": {
            "type": "object",
            "description": "Updated fields"
          },
          "typecast": {
            "type": "boolean",
            "default": false,
            "description": "Automatically format data"
          }
        },
        "required": [
          "baseId",
          "tableId",
          "recordId",
          "fields"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "get_record",
      "name": "Get Record",
      "description": "Retrieve a specific record",
      "parameters": {
        "type": "object",
        "properties": {
          "baseId": {
            "type": "string",
            "description": "Base ID"
          },
          "tableId": {
            "type": "string",
            "description": "Table ID or name"
          },
          "recordId": {
            "type": "string",
            "description": "Record ID"
          }
        },
        "required": [
          "baseId",
          "tableId",
          "recordId"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "list_records",
      "name": "List Records",
      "description": "List records from a table",
      "parameters": {
        "type": "object",
        "properties": {
          "baseId": {
            "type": "string",
            "description": "Base ID"
          },
          "tableId": {
            "type": "string",
            "description": "Table ID or name"
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Fields to include"
          },
          "filterByFormula": {
            "type": "string",
            "description": "Formula to filter records"
          },
          "maxRecords": {
            "type": "number",
            "maximum": 100,
            "description": "Maximum number of records"
          },
          "pageSize": {
            "type": "number",
            "maximum": 100,
            "description": "Page size"
          },
          "sort": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string"
                },
                "direction": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              }
            },
            "description": "Sort configuration"
          },
          "view": {
            "type": "string",
            "description": "View name"
          }
        },
        "required": [
          "baseId",
          "tableId"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "delete_record",
      "name": "Delete Record",
      "description": "Delete a record",
      "parameters": {
        "type": "object",
        "properties": {
          "baseId": {
            "type": "string",
            "description": "Base ID"
          },
          "tableId": {
            "type": "string",
            "description": "Table ID or name"
          },
          "recordId": {
            "type": "string",
            "description": "Record ID"
          }
        },
        "required": [
          "baseId",
          "tableId",
          "recordId"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    }
  ],
  "triggers": [
    {
      "id": "record_created",
      "name": "Record Created",
      "description": "Triggered when a new record is created",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "baseId": {
            "type": "string",
            "description": "Base ID to monitor"
          },
          "tableId": {
            "type": "string",
            "description": "Table ID to monitor"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "fields": {
            "type": "object"
          },
          "createdTime": {
            "type": "string"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "record_updated",
      "name": "Record Updated",
      "description": "Triggered when a record is updated",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "baseId": {
            "type": "string",
            "description": "Base ID to monitor"
          },
          "tableId": {
            "type": "string",
            "description": "Table ID to monitor"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "fields": {
            "type": "object"
          },
          "createdTime": {
            "type": "string"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "sample": {
        "success": true
      }
    }
  ],
  "testConnection": {
    "method": "GET",
    "endpoint": "/meta/bases"
  },
  "release": {
    "semver": "1.0.0",
    "status": "stable",
    "isBeta": false,
    "betaStartedAt": null,
    "deprecationWindow": {
      "startDate": null,
      "sunsetDate": null
    }
  },
  "schemaVersion": "1.0"
}
