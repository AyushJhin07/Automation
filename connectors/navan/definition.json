{
  "id": "navan",
  "name": "Navan",
  "description": "Navan travel and expense management platform",
  "category": "Finance",
  "icon": "navan",
  "color": "#6C5CE7",
  "version": "1.0.0",
  "authentication": {
    "type": "api_key",
    "config": {
      "apiKeyLocation": "header",
      "apiKeyName": "Authorization",
      "apiKeyPrefix": "Bearer"
    }
  },
  "baseUrl": "https://api.navan.com/v1",
  "actions": [
    {
      "id": "test_connection",
      "name": "Test Connection",
      "description": "Test the connection to Navan",
      "parameters": {
        "type": "object",
        "properties": {},
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "get_expenses",
      "name": "Get Expenses",
      "description": "Get list of expenses",
      "parameters": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "description": "Number of expenses to return"
          },
          "offset": {
            "type": "number",
            "minimum": 0,
            "default": 0,
            "description": "Number of expenses to skip"
          },
          "user_id": {
            "type": "string",
            "description": "Filter by user ID"
          },
          "status": {
            "type": "string",
            "enum": [
              "DRAFT",
              "SUBMITTED",
              "APPROVED",
              "REJECTED",
              "PAID"
            ],
            "description": "Filter by expense status"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "description": "Filter expenses from this date"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "description": "Filter expenses until this date"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "create_expense",
      "name": "Create Expense",
      "description": "Create a new expense",
      "parameters": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "description": "User ID"
          },
          "amount": {
            "type": "number",
            "minimum": 0,
            "description": "Expense amount"
          },
          "currency": {
            "type": "string",
            "description": "Currency code"
          },
          "merchant": {
            "type": "string",
            "description": "Merchant name"
          },
          "category": {
            "type": "string",
            "description": "Expense category"
          },
          "description": {
            "type": "string",
            "description": "Expense description"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Expense date"
          },
          "receipt_url": {
            "type": "string",
            "description": "Receipt image URL"
          }
        },
        "required": [
          "user_id",
          "amount",
          "currency",
          "merchant",
          "category"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "get_trips",
      "name": "Get Trips",
      "description": "Get list of trips",
      "parameters": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "description": "Number of trips to return"
          },
          "offset": {
            "type": "number",
            "minimum": 0,
            "default": 0,
            "description": "Number of trips to skip"
          },
          "user_id": {
            "type": "string",
            "description": "Filter by user ID"
          },
          "status": {
            "type": "string",
            "enum": [
              "REQUESTED",
              "APPROVED",
              "IN_PROGRESS",
              "COMPLETED",
              "CANCELLED"
            ],
            "description": "Filter by trip status"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "create_trip",
      "name": "Create Trip",
      "description": "Create a new trip",
      "parameters": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "description": "User ID"
          },
          "title": {
            "type": "string",
            "description": "Trip title"
          },
          "purpose": {
            "type": "string",
            "description": "Trip purpose"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "description": "Trip start date"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "description": "Trip end date"
          },
          "destination": {
            "type": "string",
            "description": "Trip destination"
          }
        },
        "required": [
          "user_id",
          "title",
          "start_date",
          "end_date"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "get_users",
      "name": "Get Users",
      "description": "Get list of users",
      "parameters": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "description": "Number of users to return"
          },
          "offset": {
            "type": "number",
            "minimum": 0,
            "default": 0,
            "description": "Number of users to skip"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    }
  ],
  "triggers": [
    {
      "id": "expense_submitted",
      "name": "Expense Submitted",
      "description": "Triggered when an expense is submitted",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "description": "Filter by user ID"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "sample": {
        "success": true
      }
    }
  ],
  "testConnection": {
    "method": "GET",
    "endpoint": "/users/me"
  },
  "release": {
    "semver": "1.0.0",
    "status": "stable",
    "isBeta": false,
    "betaStartedAt": null,
    "deprecationWindow": {
      "startDate": null,
      "sunsetDate": null
    }
  },
  "schemaVersion": "1.0"
}
