{
  "id": "notion",
  "name": "Notion",
  "description": "Notion workspace platform for notes, databases, pages, and collaboration",
  "category": "Productivity",
  "icon": "notion",
  "color": "#000000",
  "availability": "stable",
  "version": "1.0.0",
  "authentication": {
    "type": "oauth2",
    "config": {
      "authUrl": "https://api.notion.com/v1/oauth/authorize",
      "tokenUrl": "https://api.notion.com/v1/oauth/token",
      "scopes": [
        "read_content",
        "update_content",
        "insert_content"
      ]
    }
  },
  "baseUrl": "https://api.notion.com/v1",
  "rateLimits": {
    "requestsPerSecond": 3,
    "requestsPerMinute": 100
  },
  "actions": [
    {
      "id": "test_connection",
      "name": "Test Connection",
      "description": "Test the connection to Notion and verify authentication",
      "parameters": {
        "type": "object",
        "properties": {},
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "create_page",
      "name": "Create Page",
      "description": "Create a new page in Notion",
      "parameters": {
        "type": "object",
        "properties": {
          "parent": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "database_id",
                  "page_id",
                  "workspace"
                ],
                "description": "Type of parent"
              },
              "database_id": {
                "type": "string",
                "description": "Database ID (if parent type is database_id)"
              },
              "page_id": {
                "type": "string",
                "description": "Page ID (if parent type is page_id)"
              }
            },
            "description": "Parent page, database, or workspace"
          },
          "properties": {
            "type": "object",
            "description": "Page properties (varies by database schema)"
          },
          "children": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Array of block objects for page content"
          },
          "icon": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "emoji",
                  "external",
                  "file"
                ]
              },
              "emoji": {
                "type": "string"
              },
              "external": {
                "type": "object"
              },
              "file": {
                "type": "object"
              }
            },
            "description": "Page icon"
          },
          "cover": {
            "type": "object",
            "description": "Page cover image"
          }
        },
        "required": [
          "parent"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "update_page",
      "name": "Update Page",
      "description": "Update an existing page's properties",
      "parameters": {
        "type": "object",
        "properties": {
          "page_id": {
            "type": "string",
            "description": "ID of the page to update"
          },
          "properties": {
            "type": "object",
            "description": "Updated page properties"
          },
          "archived": {
            "type": "boolean",
            "description": "Whether to archive the page"
          },
          "icon": {
            "type": "object",
            "description": "Updated page icon"
          },
          "cover": {
            "type": "object",
            "description": "Updated page cover"
          }
        },
        "required": [
          "page_id"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "get_page",
      "name": "Get Page",
      "description": "Retrieve a page by ID",
      "parameters": {
        "type": "object",
        "properties": {
          "page_id": {
            "type": "string",
            "description": "ID of the page to retrieve"
          },
          "filter_properties": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Specific properties to retrieve"
          }
        },
        "required": [
          "page_id"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "create_database_entry",
      "name": "Create Database Entry",
      "description": "Create a new entry in a Notion database",
      "parameters": {
        "type": "object",
        "properties": {
          "database_id": {
            "type": "string",
            "description": "ID of the database"
          },
          "properties": {
            "type": "object",
            "description": "Entry properties matching database schema"
          },
          "children": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Array of block objects for entry content"
          }
        },
        "required": [
          "database_id",
          "properties"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "query_database",
      "name": "Query Database",
      "description": "Query a Notion database with filters and sorts",
      "parameters": {
        "type": "object",
        "properties": {
          "database_id": {
            "type": "string",
            "description": "ID of the database to query"
          },
          "filter": {
            "type": "object",
            "description": "Filter conditions for the query"
          },
          "sorts": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Sort conditions for the query"
          },
          "start_cursor": {
            "type": "string",
            "description": "Pagination cursor"
          },
          "page_size": {
            "type": "number",
            "minimum": 1,
            "maximum": 100,
            "default": 100,
            "description": "Number of results to return"
          }
        },
        "required": [
          "database_id"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "append_block_children",
      "name": "Append Block Children",
      "description": "Append blocks to a page or block",
      "parameters": {
        "type": "object",
        "properties": {
          "block_id": {
            "type": "string",
            "description": "ID of the parent block or page"
          },
          "children": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Array of block objects to append"
          }
        },
        "required": [
          "block_id",
          "children"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "update_block",
      "name": "Update Block",
      "description": "Update a block's content",
      "parameters": {
        "type": "object",
        "properties": {
          "block_id": {
            "type": "string",
            "description": "ID of the block to update"
          },
          "archived": {
            "type": "boolean",
            "description": "Whether to archive the block"
          }
        },
        "required": [
          "block_id"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "get_block_children",
      "name": "Get Block Children",
      "description": "Retrieve children of a block",
      "parameters": {
        "type": "object",
        "properties": {
          "block_id": {
            "type": "string",
            "description": "ID of the parent block"
          },
          "start_cursor": {
            "type": "string",
            "description": "Pagination cursor"
          },
          "page_size": {
            "type": "number",
            "minimum": 1,
            "maximum": 100,
            "default": 100,
            "description": "Number of results to return"
          }
        },
        "required": [
          "block_id"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "search",
      "name": "Search",
      "description": "Search pages and databases",
      "parameters": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "Search query text"
          },
          "filter": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "enum": [
                  "page",
                  "database"
                ],
                "description": "Filter by object type"
              },
              "property": {
                "type": "string",
                "enum": [
                  "object"
                ],
                "description": "Property to filter on"
              }
            },
            "description": "Filter for search results"
          },
          "sort": {
            "type": "object",
            "properties": {
              "direction": {
                "type": "string",
                "enum": [
                  "ascending",
                  "descending"
                ],
                "description": "Sort direction"
              },
              "timestamp": {
                "type": "string",
                "enum": [
                  "last_edited_time"
                ],
                "description": "Sort by timestamp"
              }
            },
            "description": "Sort configuration"
          },
          "start_cursor": {
            "type": "string",
            "description": "Pagination cursor"
          },
          "page_size": {
            "type": "number",
            "minimum": 1,
            "maximum": 100,
            "default": 100,
            "description": "Number of results to return"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    }
  ],
  "triggers": [
    {
      "id": "page_created",
      "name": "Page Created",
      "description": "Triggered when a new page is created",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "database_id": {
            "type": "string",
            "description": "Filter by specific database"
          },
          "parent_page_id": {
            "type": "string",
            "description": "Filter by parent page"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "created_time": {
            "type": "string"
          },
          "last_edited_time": {
            "type": "string"
          },
          "properties": {
            "type": "object"
          },
          "parent": {
            "type": "object"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "page_updated",
      "name": "Page Updated",
      "description": "Triggered when a page is updated",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "database_id": {
            "type": "string",
            "description": "Filter by specific database"
          },
          "properties": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Specific properties to watch for changes"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "last_edited_time": {
            "type": "string"
          },
          "properties": {
            "type": "object"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "database_entry_created",
      "name": "Database Entry Created",
      "description": "Triggered when a new entry is added to a database",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "database_id": {
            "type": "string",
            "description": "Specific database to monitor"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "created_time": {
            "type": "string"
          },
          "properties": {
            "type": "object"
          },
          "parent": {
            "type": "object"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "sample": {
        "success": true
      }
    }
  ],
  "testConnection": {
    "method": "GET",
    "endpoint": "/users/me"
  },
  "release": {
    "semver": "1.0.0",
    "status": "stable",
    "isBeta": false,
    "betaStartedAt": null,
    "deprecationWindow": {
      "startDate": null,
      "sunsetDate": null
    }
  },
  "schemaVersion": "1.0"
}
