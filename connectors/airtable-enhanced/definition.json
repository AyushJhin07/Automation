{
  "id": "airtable-enhanced",
  "name": "Airtable Enhanced",
  "description": "Enhanced Airtable database platform with advanced features",
  "category": "Database",
  "icon": "airtable",
  "color": "#FCB400",
  "version": "2.0.0",
  "authentication": {
    "type": "api_key",
    "config": {
      "type": "header",
      "name": "Authorization",
      "prefix": "Bearer"
    }
  },
  "baseUrl": "https://api.airtable.com/v0",
  "actions": [
    {
      "id": "test_connection",
      "name": "Test Connection",
      "description": "Test the connection to Airtable",
      "parameters": {
        "type": "object",
        "properties": {},
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "list_records",
      "name": "List Records",
      "description": "List records from a table",
      "parameters": {
        "type": "object",
        "properties": {
          "baseId": {
            "type": "string",
            "description": "Airtable base ID"
          },
          "tableId": {
            "type": "string",
            "description": "Table name or ID"
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Fields to retrieve"
          },
          "filterByFormula": {
            "type": "string",
            "description": "Formula to filter records"
          },
          "maxRecords": {
            "type": "number",
            "minimum": 1,
            "maximum": 100,
            "default": 100,
            "description": "Maximum records to return"
          },
          "pageSize": {
            "type": "number",
            "minimum": 1,
            "maximum": 100,
            "default": 100,
            "description": "Page size"
          },
          "sort": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string"
                },
                "direction": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              }
            },
            "description": "Sort configuration"
          },
          "view": {
            "type": "string",
            "description": "View name"
          },
          "cellFormat": {
            "type": "string",
            "enum": [
              "json",
              "string"
            ],
            "default": "json",
            "description": "Cell format"
          },
          "timeZone": {
            "type": "string",
            "description": "Timezone for date fields"
          },
          "userLocale": {
            "type": "string",
            "description": "User locale"
          }
        },
        "required": [
          "baseId",
          "tableId"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "get_record",
      "name": "Get Record",
      "description": "Get a specific record",
      "parameters": {
        "type": "object",
        "properties": {
          "baseId": {
            "type": "string",
            "description": "Airtable base ID"
          },
          "tableId": {
            "type": "string",
            "description": "Table name or ID"
          },
          "recordId": {
            "type": "string",
            "description": "Record ID"
          }
        },
        "required": [
          "baseId",
          "tableId",
          "recordId"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "create_record",
      "name": "Create Record",
      "description": "Create a new record",
      "parameters": {
        "type": "object",
        "properties": {
          "baseId": {
            "type": "string",
            "description": "Airtable base ID"
          },
          "tableId": {
            "type": "string",
            "description": "Table name or ID"
          },
          "fields": {
            "type": "object",
            "description": "Record fields"
          },
          "typecast": {
            "type": "boolean",
            "default": false,
            "description": "Automatically typecast field values"
          }
        },
        "required": [
          "baseId",
          "tableId",
          "fields"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "update_record",
      "name": "Update Record",
      "description": "Update an existing record",
      "parameters": {
        "type": "object",
        "properties": {
          "baseId": {
            "type": "string",
            "description": "Airtable base ID"
          },
          "tableId": {
            "type": "string",
            "description": "Table name or ID"
          },
          "recordId": {
            "type": "string",
            "description": "Record ID"
          },
          "fields": {
            "type": "object",
            "description": "Updated fields"
          },
          "typecast": {
            "type": "boolean",
            "default": false,
            "description": "Automatically typecast field values"
          }
        },
        "required": [
          "baseId",
          "tableId",
          "recordId",
          "fields"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "delete_record",
      "name": "Delete Record",
      "description": "Delete a record",
      "parameters": {
        "type": "object",
        "properties": {
          "baseId": {
            "type": "string",
            "description": "Airtable base ID"
          },
          "tableId": {
            "type": "string",
            "description": "Table name or ID"
          },
          "recordId": {
            "type": "string",
            "description": "Record ID"
          }
        },
        "required": [
          "baseId",
          "tableId",
          "recordId"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "batch_create",
      "name": "Batch Create Records",
      "description": "Create multiple records at once",
      "parameters": {
        "type": "object",
        "properties": {
          "baseId": {
            "type": "string",
            "description": "Airtable base ID"
          },
          "tableId": {
            "type": "string",
            "description": "Table name or ID"
          },
          "records": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "fields": {
                  "type": "object"
                }
              }
            },
            "maxItems": 10,
            "description": "Records to create"
          },
          "typecast": {
            "type": "boolean",
            "default": false,
            "description": "Automatically typecast field values"
          }
        },
        "required": [
          "baseId",
          "tableId",
          "records"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "batch_update",
      "name": "Batch Update Records",
      "description": "Update multiple records at once",
      "parameters": {
        "type": "object",
        "properties": {
          "baseId": {
            "type": "string",
            "description": "Airtable base ID"
          },
          "tableId": {
            "type": "string",
            "description": "Table name or ID"
          },
          "records": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "fields": {
                  "type": "object"
                }
              }
            },
            "maxItems": 10,
            "description": "Records to update"
          },
          "typecast": {
            "type": "boolean",
            "default": false,
            "description": "Automatically typecast field values"
          }
        },
        "required": [
          "baseId",
          "tableId",
          "records"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    }
  ],
  "triggers": [
    {
      "id": "record_created",
      "name": "Record Created",
      "description": "Triggered when a new record is created",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "baseId": {
            "type": "string",
            "description": "Filter by base"
          },
          "tableId": {
            "type": "string",
            "description": "Filter by table"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "fields": {
            "type": "object"
          },
          "createdTime": {
            "type": "string"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "sample": {
        "success": true
      },
      "dedupe": {
        "strategy": "id",
        "path": "id"
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "record_updated",
      "name": "Record Updated",
      "description": "Triggered when a record is updated",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "baseId": {
            "type": "string",
            "description": "Filter by base"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "fields": {
            "type": "object"
          },
          "createdTime": {
            "type": "string"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "sample": {
        "success": true
      },
      "dedupe": {
        "strategy": "id",
        "path": "id"
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    }
  ],
  "testConnection": {
    "method": "GET",
    "endpoint": "/meta/bases"
  },
  "release": {
    "semver": "2.0.0",
    "status": "stable",
    "isBeta": false,
    "betaStartedAt": null,
    "deprecationWindow": {
      "startDate": null,
      "sunsetDate": null
    }
  },
  "schemaVersion": "1.0"
}
