{
  "id": "jira",
  "name": "Jira",
  "description": "Connect to Atlassian Jira for project management, issue tracking, and agile workflow automation",
  "category": "Project Management",
  "icon": "jira",
  "color": "#0052CC",
  "authentication": {
    "type": "oauth2",
    "authUrl": "https://auth.atlassian.com/authorize",
    "tokenUrl": "https://auth.atlassian.com/oauth/token",
    "scopes": ["read:jira-work", "write:jira-work", "manage:jira-project", "manage:jira-configuration"],
    "clientIdRequired": true,
    "clientSecretRequired": true,
    "additionalParams": {
      "audience": "api.atlassian.com",
      "state": "your-random-string"
    }
  },
  "baseUrl": "https://api.atlassian.com/ex/jira/{cloudid}",
  "rateLimits": {
    "requestsPerSecond": 10,
    "requestsPerMinute": 300,
    "burstAllowed": 20
  },
  "actions": [
    {
      "id": "create_issue",
      "name": "Create Issue",
      "description": "Create a new issue in Jira",
      "endpoint": "/rest/api/3/issue",
      "method": "POST",
      "params": {
        "projectKey": {
          "type": "string",
          "required": true,
          "description": "Project key (e.g., PROJ)"
        },
        "summary": {
          "type": "string",
          "required": true,
          "description": "Issue summary/title"
        },
        "description": {
          "type": "string",
          "required": false,
          "description": "Issue description"
        },
        "issueType": {
          "type": "string",
          "required": true,
          "enum": ["Bug", "Task", "Story", "Epic", "Subtask"],
          "description": "Type of issue to create"
        },
        "priority": {
          "type": "string",
          "required": false,
          "enum": ["Highest", "High", "Medium", "Low", "Lowest"],
          "default": "Medium",
          "description": "Issue priority"
        },
        "assignee": {
          "type": "string",
          "required": false,
          "description": "Assignee account ID or email"
        },
        "reporter": {
          "type": "string",
          "required": false,
          "description": "Reporter account ID or email"
        },
        "labels": {
          "type": "array",
          "required": false,
          "items": {
            "type": "string"
          },
          "description": "Array of labels to add to the issue"
        },
        "components": {
          "type": "array",
          "required": false,
          "items": {
            "type": "string"
          },
          "description": "Array of component names"
        },
        "fixVersions": {
          "type": "array",
          "required": false,
          "items": {
            "type": "string"
          },
          "description": "Array of fix version names"
        },
        "dueDate": {
          "type": "string",
          "required": false,
          "format": "date",
          "description": "Due date (YYYY-MM-DD)"
        }
      },
      "responseFields": ["id", "key", "self"],
      "requiredScopes": ["write:jira-work"]
    },
    {
      "id": "update_issue",
      "name": "Update Issue",
      "description": "Update an existing issue in Jira",
      "endpoint": "/rest/api/3/issue/{issueIdOrKey}",
      "method": "PUT",
      "params": {
        "issueIdOrKey": {
          "type": "string",
          "required": true,
          "description": "Issue ID or key (e.g., PROJ-123)"
        },
        "summary": {
          "type": "string",
          "required": false,
          "description": "Issue summary/title"
        },
        "description": {
          "type": "string",
          "required": false,
          "description": "Issue description"
        },
        "assignee": {
          "type": "string",
          "required": false,
          "description": "Assignee account ID or email"
        },
        "priority": {
          "type": "string",
          "required": false,
          "enum": ["Highest", "High", "Medium", "Low", "Lowest"],
          "description": "Issue priority"
        },
        "labels": {
          "type": "array",
          "required": false,
          "items": {
            "type": "string"
          },
          "description": "Array of labels"
        },
        "dueDate": {
          "type": "string",
          "required": false,
          "format": "date",
          "description": "Due date (YYYY-MM-DD)"
        }
      },
      "responseFields": ["id", "key", "self"],
      "requiredScopes": ["write:jira-work"]
    },
    {
      "id": "transition_issue",
      "name": "Transition Issue",
      "description": "Transition an issue to a different status",
      "endpoint": "/rest/api/3/issue/{issueIdOrKey}/transitions",
      "method": "POST",
      "params": {
        "issueIdOrKey": {
          "type": "string",
          "required": true,
          "description": "Issue ID or key (e.g., PROJ-123)"
        },
        "transitionId": {
          "type": "string",
          "required": true,
          "description": "ID of the transition to perform"
        },
        "comment": {
          "type": "string",
          "required": false,
          "description": "Comment to add during transition"
        },
        "assignee": {
          "type": "string",
          "required": false,
          "description": "New assignee account ID"
        },
        "resolution": {
          "type": "string",
          "required": false,
          "enum": ["Fixed", "Won't Fix", "Duplicate", "Incomplete", "Cannot Reproduce", "Done"],
          "description": "Resolution when closing issue"
        }
      },
      "responseFields": ["transition"],
      "requiredScopes": ["write:jira-work"]
    },
    {
      "id": "add_comment",
      "name": "Add Comment",
      "description": "Add a comment to an issue",
      "endpoint": "/rest/api/3/issue/{issueIdOrKey}/comment",
      "method": "POST",
      "params": {
        "issueIdOrKey": {
          "type": "string",
          "required": true,
          "description": "Issue ID or key (e.g., PROJ-123)"
        },
        "body": {
          "type": "string",
          "required": true,
          "description": "Comment text"
        },
        "visibility": {
          "type": "string",
          "required": false,
          "enum": ["all", "internal"],
          "default": "all",
          "description": "Comment visibility"
        }
      },
      "responseFields": ["id", "self", "body", "created"],
      "requiredScopes": ["write:jira-work"]
    },
    {
      "id": "create_project",
      "name": "Create Project",
      "description": "Create a new project in Jira",
      "endpoint": "/rest/api/3/project",
      "method": "POST",
      "params": {
        "key": {
          "type": "string",
          "required": true,
          "pattern": "^[A-Z][A-Z0-9_]*$",
          "description": "Project key (uppercase letters, numbers, underscores)"
        },
        "name": {
          "type": "string",
          "required": true,
          "description": "Project name"
        },
        "projectTypeKey": {
          "type": "string",
          "required": true,
          "enum": ["software", "service_desk", "business"],
          "description": "Type of project"
        },
        "projectTemplateKey": {
          "type": "string",
          "required": false,
          "enum": ["com.pyxis.greenhopper.jira:gh-simplified-agility-kanban", "com.pyxis.greenhopper.jira:gh-simplified-agility-scrum", "com.atlassian.servicedesk:simplified-it-service-desk"],
          "description": "Project template"
        },
        "description": {
          "type": "string",
          "required": false,
          "description": "Project description"
        },
        "leadAccountId": {
          "type": "string",
          "required": true,
          "description": "Account ID of the project lead"
        },
        "url": {
          "type": "string",
          "required": false,
          "format": "url",
          "description": "Project URL"
        },
        "assigneeType": {
          "type": "string",
          "required": false,
          "enum": ["PROJECT_LEAD", "UNASSIGNED"],
          "default": "PROJECT_LEAD",
          "description": "Default assignee for new issues"
        }
      },
      "responseFields": ["id", "key", "self"],
      "requiredScopes": ["manage:jira-project"]
    },
    {
      "id": "search_issues",
      "name": "Search Issues",
      "description": "Search for issues using JQL (Jira Query Language)",
      "endpoint": "/rest/api/3/search",
      "method": "GET",
      "params": {
        "jql": {
          "type": "string",
          "required": true,
          "description": "JQL query string (e.g., 'project = PROJ AND status = Open')"
        },
        "maxResults": {
          "type": "number",
          "required": false,
          "default": 50,
          "minimum": 1,
          "maximum": 100,
          "description": "Maximum number of results to return"
        },
        "startAt": {
          "type": "number",
          "required": false,
          "default": 0,
          "description": "Starting index for pagination"
        },
        "fields": {
          "type": "array",
          "required": false,
          "items": {
            "type": "string"
          },
          "description": "Specific fields to return"
        }
      },
      "responseFields": ["issues", "total", "maxResults", "startAt"],
      "requiredScopes": ["read:jira-work"]
    }
  ],
  "triggers": [
    {
      "id": "issue_created",
      "name": "Issue Created",
      "description": "Triggered when a new issue is created",
      "type": "webhook",
      "eventType": "jira:issue_created",
      "params": {
        "projectKey": {
          "type": "string",
          "required": false,
          "description": "Specific project to monitor"
        },
        "issueType": {
          "type": "string",
          "required": false,
          "description": "Specific issue type to monitor"
        }
      },
      "outputFields": ["issue", "user", "timestamp"],
      "requiredScopes": ["read:jira-work"]
    },
    {
      "id": "issue_updated",
      "name": "Issue Updated",
      "description": "Triggered when an issue is updated",
      "type": "webhook",
      "eventType": "jira:issue_updated",
      "params": {
        "projectKey": {
          "type": "string",
          "required": false,
          "description": "Specific project to monitor"
        },
        "fieldChanged": {
          "type": "string",
          "required": false,
          "description": "Specific field to monitor for changes"
        }
      },
      "outputFields": ["issue", "user", "changelog", "timestamp"],
      "requiredScopes": ["read:jira-work"]
    },
    {
      "id": "issue_transitioned",
      "name": "Issue Status Changed",
      "description": "Triggered when an issue status changes",
      "type": "webhook",
      "eventType": "jira:issue_updated",
      "params": {
        "projectKey": {
          "type": "string",
          "required": false,
          "description": "Specific project to monitor"
        },
        "fromStatus": {
          "type": "string",
          "required": false,
          "description": "Previous status to monitor"
        },
        "toStatus": {
          "type": "string",
          "required": false,
          "description": "New status to monitor"
        }
      },
      "outputFields": ["issue", "user", "fromStatus", "toStatus", "timestamp"],
      "requiredScopes": ["read:jira-work"]
    },
    {
      "id": "comment_added",
      "name": "Comment Added",
      "description": "Triggered when a comment is added to an issue",
      "type": "webhook",
      "eventType": "comment_created",
      "params": {
        "projectKey": {
          "type": "string",
          "required": false,
          "description": "Specific project to monitor"
        }
      },
      "outputFields": ["issue", "comment", "user", "timestamp"],
      "requiredScopes": ["read:jira-work"]
    }
  ],
  "testConnection": {
    "endpoint": "/rest/api/3/myself",
    "method": "GET",
    "expectedResponse": {
      "accountId": "string",
      "active": true
    }
  },
  "documentation": "https://developer.atlassian.com/cloud/jira/platform/rest/v3/",
  "supportContact": "https://community.developer.atlassian.com/"
}