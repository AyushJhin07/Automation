{
  "id": "slack",
  "name": "Slack",
  "description": "Connect to Slack workspace for messaging, notifications, and collaboration automation",
  "category": "Communication",
  "icon": "slack",
  "color": "#4A154B",
  "availability": "stable",
  "authentication": {
    "type": "oauth2",
    "authUrl": "https://slack.com/oauth/v2/authorize",
    "tokenUrl": "https://slack.com/api/oauth.v2.access",
    "scopes": [
      "chat:write",
      "channels:read",
      "users:read",
      "files:write",
      "reactions:write"
    ],
    "clientIdRequired": true,
    "clientSecretRequired": true
  },
  "baseUrl": "https://slack.com/api",
  "rateLimits": {
    "requestsPerSecond": 1,
    "requestsPerMinute": 50,
    "burstAllowed": 3
  },
  "actions": [
    {
      "id": "test_connection",
      "name": "Test Connection",
      "description": "Test the connection to Slack and verify authentication",
      "endpoint": "/auth.test",
      "method": "GET",
      "parameters": {
        "type": "object",
        "properties": {},
        "required": [],
        "additionalProperties": false
      },
      "requiredScopes": [
        "users:read"
      ],
      "rateLimits": {
        "requests": 10,
        "period": "1m",
        "scope": "user"
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          },
          "team": {
            "type": "string"
          },
          "team_id": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "success",
          "team",
          "team_id",
          "user",
          "user_id"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "team": "Acme Workspace",
        "team_id": "T12345678",
        "user": "automation.bot",
        "user_id": "U23456789",
        "url": "https://acme.slack.com/"
      }
    },
    {
      "id": "send_message",
      "name": "Send Message",
      "description": "Send a message to a Slack channel or user",
      "endpoint": "/chat.postMessage",
      "method": "POST",
      "parameters": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string",
            "description": "Channel ID or user ID to send message to",
            "x-dynamicOptions": {
              "handler": "list_channels",
              "labelField": "name",
              "valueField": "id",
              "searchParam": "search",
              "cache": {
                "ttlMs": 300000
              }
            }
          },
          "text": {
            "type": "string",
            "description": "Message text content"
          },
          "username": {
            "type": "string",
            "description": "Bot username override"
          },
          "icon_emoji": {
            "type": "string",
            "description": "Emoji icon for the message"
          },
          "thread_ts": {
            "type": "string",
            "description": "Timestamp of parent message to reply in thread"
          },
          "blocks": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Rich message blocks for formatting"
          }
        },
        "required": [
          "channel",
          "text"
        ],
        "additionalProperties": false
      },
      "responseFields": [
        "ts",
        "channel",
        "message"
      ],
      "errorCodes": {
        "channel_not_found": "The specified channel does not exist",
        "not_in_channel": "Bot is not a member of the channel",
        "msg_too_long": "Message text is too long"
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          },
          "channel": {
            "type": "string"
          },
          "ts": {
            "type": "string"
          },
          "message": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "text": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "bot_id": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "ts": {
                "type": "string"
              }
            },
            "required": [
              "type",
              "text",
              "ts"
            ],
            "additionalProperties": true
          }
        },
        "required": [
          "success",
          "channel",
          "ts"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "channel": "C024BE7LT",
        "ts": "1733756457.000200",
        "message": {
          "type": "message",
          "text": "Deployment complete :rocket:",
          "user": "U23456789",
          "bot_id": "B98XYZ12",
          "username": "automation-bot",
          "ts": "1733756457.000200"
        }
      }
    },
    {
      "id": "create_channel",
      "name": "Create Channel",
      "description": "Create a new Slack channel",
      "endpoint": "/conversations.create",
      "method": "POST",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Channel name (without #)"
          },
          "is_private": {
            "type": "boolean",
            "default": false,
            "description": "Create a private channel"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          },
          "channel": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "is_channel": {
                "type": "boolean"
              },
              "is_private": {
                "type": "boolean"
              },
              "creator": {
                "type": "string"
              },
              "created": {
                "type": "integer"
              },
              "num_members": {
                "type": "integer"
              }
            },
            "required": [
              "id",
              "name"
            ],
            "additionalProperties": true
          }
        },
        "required": [
          "success",
          "channel"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "channel": {
          "id": "C08S3A1Q2",
          "name": "product-launch",
          "is_channel": true,
          "is_private": false,
          "creator": "U024BE7LH",
          "created": 1733756000,
          "num_members": 1
        }
      }
    },
    {
      "id": "invite_to_channel",
      "name": "Invite to Channel",
      "description": "Invite users to a Slack channel",
      "endpoint": "/conversations.invite",
      "method": "POST",
      "parameters": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string",
            "description": "Channel ID to invite users to",
            "x-dynamicOptions": {
              "handler": "list_channels",
              "labelField": "name",
              "valueField": "id",
              "searchParam": "search",
              "cache": {
                "ttlMs": 300000
              }
            }
          },
          "users": {
            "type": "string",
            "description": "Comma-separated list of user IDs",
            "x-dynamicOptions": {
              "handler": "list_users",
              "labelField": "real_name",
              "valueField": "id",
              "searchParam": "search",
              "cache": {
                "ttlMs": 300000
              }
            }
          }
        },
        "required": [
          "channel",
          "users"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          },
          "channel": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "is_channel": {
                "type": "boolean"
              },
              "is_private": {
                "type": "boolean"
              },
              "members": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "num_members": {
                "type": "integer"
              }
            },
            "required": [
              "id",
              "name"
            ],
            "additionalProperties": true
          }
        },
        "required": [
          "success",
          "channel"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "channel": {
          "id": "C08S3A1Q2",
          "name": "product-launch",
          "is_channel": true,
          "is_private": false,
          "members": [
            "U024BE7LH",
            "U061F1EUR",
            "U0G9QF9C6"
          ],
          "num_members": 3
        }
      }
    },
    {
      "id": "upload_file",
      "name": "Upload File",
      "description": "Upload a file to a Slack channel",
      "endpoint": "/files.upload",
      "method": "POST",
      "parameters": {
        "type": "object",
        "properties": {
          "channels": {
            "type": "string",
            "description": "Channel IDs to share the file to"
          },
          "content": {
            "type": "string",
            "description": "File content"
          },
          "filename": {
            "type": "string",
            "description": "Name of the file"
          },
          "filetype": {
            "type": "string",
            "description": "File type/extension"
          },
          "initial_comment": {
            "type": "string",
            "description": "Comment to add with the file"
          },
          "title": {
            "type": "string",
            "description": "Title of the file"
          }
        },
        "required": [
          "content",
          "filename"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          },
          "file": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "mimetype": {
                "type": "string"
              },
              "filetype": {
                "type": "string"
              },
              "size": {
                "type": "integer"
              },
              "url_private": {
                "type": "string",
                "format": "uri"
              },
              "permalink": {
                "type": "string",
                "format": "uri"
              },
              "created": {
                "type": "integer"
              },
              "user": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name",
              "mimetype",
              "size"
            ],
            "additionalProperties": true
          }
        },
        "required": [
          "success",
          "file"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "file": {
          "id": "F04567ABCD",
          "name": "launch-checklist.xlsx",
          "title": "Launch Checklist",
          "mimetype": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "filetype": "spreadsheet",
          "size": 284512,
          "url_private": "https://files.slack.com/files-pri/T12345-F04567ABCD/launch-checklist.xlsx",
          "permalink": "https://acme.slack.com/files/U024BE7LH/F04567ABCD",
          "created": 1733756123,
          "user": "U024BE7LH"
        }
      }
    },
    {
      "id": "get_channel_info",
      "name": "Get Channel Info",
      "description": "Get information about a Slack channel",
      "endpoint": "/conversations.info",
      "method": "GET",
      "parameters": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string",
            "description": "Channel ID to get info for",
            "x-dynamicOptions": {
              "handler": "list_channels",
              "labelField": "name",
              "valueField": "id",
              "searchParam": "search",
              "cache": {
                "ttlMs": 300000
              }
            }
          }
        },
        "required": [
          "channel"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          },
          "channel": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "topic": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string"
                  },
                  "creator": {
                    "type": "string"
                  },
                  "last_set": {
                    "type": "integer"
                  }
                },
                "required": [
                  "value"
                ],
                "additionalProperties": true
              },
              "purpose": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string"
                  },
                  "creator": {
                    "type": "string"
                  },
                  "last_set": {
                    "type": "integer"
                  }
                },
                "required": [
                  "value"
                ],
                "additionalProperties": true
              },
              "is_channel": {
                "type": "boolean"
              },
              "is_private": {
                "type": "boolean"
              },
              "num_members": {
                "type": "integer"
              }
            },
            "required": [
              "id",
              "name"
            ],
            "additionalProperties": true
          }
        },
        "required": [
          "success",
          "channel"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "channel": {
          "id": "C08S3A1Q2",
          "name": "product-launch",
          "topic": {
            "value": "Coordinate the winter launch rollout",
            "creator": "U024BE7LH",
            "last_set": 1733756150
          },
          "purpose": {
            "value": "Central hub for launch team",
            "creator": "U024BE7LH",
            "last_set": 1733756100
          },
          "is_channel": true,
          "is_private": false,
          "num_members": 42
        }
      }
    },
    {
      "id": "list_channels",
      "name": "List Channels",
      "description": "List all channels in the workspace",
      "endpoint": "/conversations.list",
      "method": "GET",
      "parameters": {
        "type": "object",
        "properties": {
          "types": {
            "type": "string",
            "default": "public_channel",
            "description": "Channel types to include (public_channel, private_channel, mpim, im)"
          },
          "limit": {
            "type": "number",
            "default": 100,
            "description": "Maximum number of channels to return"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          },
          "channels": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "is_channel": {
                  "type": "boolean"
                },
                "is_private": {
                  "type": "boolean"
                },
                "num_members": {
                  "type": "integer"
                }
              },
              "required": [
                "id",
                "name"
              ],
              "additionalProperties": true
            }
          },
          "response_metadata": {
            "type": "object",
            "properties": {
              "next_cursor": {
                "type": "string"
              }
            },
            "additionalProperties": true
          }
        },
        "required": [
          "success",
          "channels"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "channels": [
          {
            "id": "C024BE7LT",
            "name": "general",
            "is_channel": true,
            "is_private": false,
            "num_members": 128
          },
          {
            "id": "C08S3A1Q2",
            "name": "product-launch",
            "is_channel": true,
            "is_private": false,
            "num_members": 42
          }
        ],
        "response_metadata": {
          "next_cursor": "dXNlcjpVMDI0QkU3TEg="
        }
      }
    },
    {
      "id": "get_user_info",
      "name": "Get User Info",
      "description": "Get information about a Slack user",
      "endpoint": "/users.info",
      "method": "GET",
      "parameters": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "description": "User ID to get info for"
          }
        },
        "required": [
          "user"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "team_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "real_name": {
                "type": "string"
              },
              "profile": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "display_name": {
                    "type": "string"
                  },
                  "image_72": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "email"
                ],
                "additionalProperties": true
              }
            },
            "required": [
              "id",
              "name"
            ],
            "additionalProperties": true
          }
        },
        "required": [
          "success",
          "user"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "user": {
          "id": "U024BE7LH",
          "team_id": "T12345678",
          "name": "olivia",
          "real_name": "Olivia Chen",
          "profile": {
            "email": "olivia@example.com",
            "display_name": "Olivia",
            "image_72": "https://secure.gravatar.com/avatar/abc123?s=72"
          }
        }
      }
    },
    {
      "id": "list_users",
      "name": "List Users",
      "description": "List all users in the workspace",
      "endpoint": "/users.list",
      "method": "GET",
      "parameters": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 100,
            "description": "Maximum number of users to return"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          },
          "members": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "real_name": {
                  "type": "string"
                },
                "profile": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "display_name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "email"
                  ],
                  "additionalProperties": true
                }
              },
              "required": [
                "id",
                "name"
              ],
              "additionalProperties": true
            }
          },
          "response_metadata": {
            "type": "object",
            "properties": {
              "next_cursor": {
                "type": "string"
              }
            },
            "additionalProperties": true
          }
        },
        "required": [
          "success",
          "members"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "members": [
          {
            "id": "U024BE7LH",
            "name": "olivia",
            "real_name": "Olivia Chen",
            "profile": {
              "email": "olivia@example.com",
              "display_name": "Olivia"
            }
          },
          {
            "id": "U061F7AUR",
            "name": "liam",
            "real_name": "Liam Patel",
            "profile": {
              "email": "liam@example.com",
              "display_name": "Liam"
            }
          }
        ],
        "response_metadata": {
          "next_cursor": ""
        }
      }
    },
    {
      "id": "add_reaction",
      "name": "Add Reaction",
      "description": "Add an emoji reaction to a message",
      "endpoint": "/reactions.add",
      "method": "POST",
      "parameters": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string",
            "description": "Channel containing the message",
            "x-dynamicOptions": {
              "handler": "list_channels",
              "labelField": "name",
              "valueField": "id",
              "searchParam": "search",
              "cache": {
                "ttlMs": 300000
              }
            }
          },
          "timestamp": {
            "type": "string",
            "description": "Timestamp of the message"
          },
          "name": {
            "type": "string",
            "description": "Emoji name (without colons)"
          }
        },
        "required": [
          "channel",
          "timestamp",
          "name"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          },
          "channel": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "reaction": {
            "type": "string"
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "channel": "C024BE7LT",
        "timestamp": "1733756457.000200",
        "reaction": "thumbsup"
      }
    },
    {
      "id": "schedule_message",
      "name": "Schedule Message",
      "description": "Schedule a message to be sent later",
      "endpoint": "/chat.scheduleMessage",
      "method": "POST",
      "parameters": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string",
            "description": "Channel ID to send message to",
            "x-dynamicOptions": {
              "handler": "list_channels",
              "labelField": "name",
              "valueField": "id",
              "searchParam": "search",
              "cache": {
                "ttlMs": 300000
              }
            }
          },
          "text": {
            "type": "string",
            "description": "Message text content"
          },
          "post_at": {
            "type": "number",
            "description": "Unix timestamp for when to send the message"
          }
        },
        "required": [
          "channel",
          "text",
          "post_at"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          },
          "channel": {
            "type": "string"
          },
          "scheduled_message_id": {
            "type": "string"
          },
          "post_at": {
            "type": "integer"
          },
          "message": {
            "type": "object",
            "properties": {
              "text": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "user": {
                "type": "string"
              }
            },
            "required": [
              "text"
            ],
            "additionalProperties": true
          }
        },
        "required": [
          "success",
          "channel",
          "scheduled_message_id",
          "post_at"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "channel": "C08S3A1Q2",
        "scheduled_message_id": "Q1298394025",
        "post_at": 1733790000,
        "message": {
          "text": "Daily standup starts in 10 minutes",
          "type": "message",
          "user": "U024BE7LH"
        }
      }
    },
    {
      "id": "list_files",
      "name": "List Files",
      "description": "List files in the workspace",
      "endpoint": "/files.list",
      "method": "GET",
      "parameters": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string"
          },
          "channel": {
            "type": "string"
          },
          "ts_from": {
            "type": "number"
          },
          "ts_to": {
            "type": "number"
          },
          "count": {
            "type": "number",
            "default": 100
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          },
          "files": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "mimetype": {
                  "type": "string"
                },
                "filetype": {
                  "type": "string"
                },
                "size": {
                  "type": "integer"
                },
                "created": {
                  "type": "integer"
                },
                "url_private": {
                  "type": "string",
                  "format": "uri"
                },
                "permalink": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "id",
                "name"
              ],
              "additionalProperties": true
            }
          },
          "paging": {
            "type": "object",
            "properties": {
              "count": {
                "type": "integer"
              },
              "total": {
                "type": "integer"
              },
              "page": {
                "type": "integer"
              },
              "pages": {
                "type": "integer"
              }
            },
            "additionalProperties": true
          }
        },
        "required": [
          "success",
          "files"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "files": [
          {
            "id": "F04567ABCD",
            "name": "launch-checklist.xlsx",
            "mimetype": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
            "filetype": "spreadsheet",
            "size": 284512,
            "created": 1733756123,
            "url_private": "https://files.slack.com/files-pri/T12345-F04567ABCD/launch-checklist.xlsx",
            "permalink": "https://acme.slack.com/files/U024BE7LH/F04567ABCD"
          }
        ],
        "paging": {
          "count": 20,
          "total": 57,
          "page": 1,
          "pages": 3
        }
      }
    },
    {
      "id": "conversations_history",
      "name": "Conversations History",
      "description": "Fetch conversation history",
      "endpoint": "/conversations.history",
      "method": "GET",
      "parameters": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string"
          },
          "latest": {
            "type": "string"
          },
          "oldest": {
            "type": "string"
          },
          "inclusive": {
            "type": "boolean"
          },
          "limit": {
            "type": "number",
            "default": 100
          }
        },
        "required": [
          "channel"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          },
          "channel": {
            "type": "string"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "user": {
                  "type": "string"
                },
                "text": {
                  "type": "string"
                },
                "ts": {
                  "type": "string"
                },
                "thread_ts": {
                  "type": "string"
                }
              },
              "required": [
                "type",
                "text",
                "ts"
              ],
              "additionalProperties": true
            }
          },
          "has_more": {
            "type": "boolean"
          },
          "pin_count": {
            "type": "integer"
          },
          "response_metadata": {
            "type": "object",
            "properties": {
              "next_cursor": {
                "type": "string"
              }
            },
            "additionalProperties": true
          }
        },
        "required": [
          "success",
          "messages",
          "has_more"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "channel": "C024BE7LT",
        "messages": [
          {
            "type": "message",
            "user": "U024BE7LH",
            "text": "Morning team!",
            "ts": "1733756000.000100"
          },
          {
            "type": "message",
            "user": "U061F7AUR",
            "text": "Standup notes posted",
            "ts": "1733756030.000200",
            "thread_ts": "1733756000.000100"
          }
        ],
        "has_more": false,
        "pin_count": 1,
        "response_metadata": {
          "next_cursor": ""
        }
      }
    }
  ],
  "triggers": [
    {
      "id": "message_received",
      "name": "Message Received",
      "description": "Triggered when a new message is posted",
      "type": "webhook",
      "metadata": {
        "signatureVerification": {
          "templateId": "slack.default",
          "required": true
        },
        "replayWindowSeconds": 300
      },
      "parameters": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string",
            "description": "Channel ID to monitor (optional, monitors all if empty)",
            "x-dynamicOptions": {
              "handler": "list_channels",
              "labelField": "name",
              "valueField": "id",
              "searchParam": "search",
              "cache": {
                "ttlMs": 300000
              }
            }
          },
          "user": {
            "type": "string",
            "description": "User ID to monitor (optional, monitors all if empty)"
          },
          "keywords": {
            "type": "string",
            "description": "Keywords to watch for in messages"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "event_id": {
            "type": "string",
            "description": "Unique identifier for the Slack event"
          },
          "event_ts": {
            "type": "string",
            "description": "Slack-provided timestamp used for deduplication"
          },
          "team_id": {
            "type": "string",
            "description": "Workspace identifier"
          },
          "api_app_id": {
            "type": "string",
            "description": "Slack application identifier"
          },
          "type": {
            "type": "string",
            "description": "Event envelope type",
            "const": "event_callback"
          },
          "event": {
            "type": "object",
            "description": "Normalized Slack event payload",
            "properties": {
              "type": {
                "type": "string",
                "description": "Event subtype"
              },
              "channel": {
                "type": "string",
                "description": "Channel identifier"
              },
              "channel_type": {
                "type": "string",
                "description": "Channel classification (channel, group, im, mpim)"
              },
              "user": {
                "type": "string",
                "description": "User identifier for the actor"
              },
              "text": {
                "type": "string",
                "description": "Message body rendered as plain text"
              },
              "ts": {
                "type": "string",
                "description": "Message timestamp in Slack format"
              },
              "thread_ts": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Parent thread timestamp when applicable"
              },
              "team": {
                "type": "string",
                "description": "Team identifier associated with the message"
              }
            },
            "required": [
              "type",
              "channel",
              "user",
              "text",
              "ts"
            ],
            "additionalProperties": true
          },
          "authorizations": {
            "type": "array",
            "description": "Authorized installations for the event",
            "items": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "eventTime": {
            "type": "string",
            "format": "date-time",
            "description": "Event timestamp converted to ISO 8601"
          },
          "_meta": {
            "type": "object",
            "description": "Connector metadata including the raw Slack payload",
            "properties": {
              "raw": {
                "type": "object",
                "description": "Original Slack Events API payload",
                "additionalProperties": true
              }
            },
            "additionalProperties": true
          }
        },
        "required": [
          "event_id",
          "event_ts",
          "team_id",
          "event"
        ],
        "additionalProperties": true
      },
      "sample": {
        "event_id": "Ev04ABCDEF",
        "event_ts": "1733757001.000400",
        "team_id": "T12345678",
        "api_app_id": "A0ABCDE12",
        "type": "event_callback",
        "event": {
          "type": "message",
          "channel": "C08S3A1Q2",
          "channel_type": "channel",
          "user": "U061F7AUR",
          "text": "Reminder: customer demo at 2pm",
          "ts": "1733757001.000400",
          "thread_ts": "1733756457.000200",
          "team": "T12345678"
        },
        "authorizations": [
          {
            "enterprise_id": null,
            "team_id": "T12345678",
            "user_id": "U0DemoBot",
            "is_bot": true
          }
        ],
        "eventTime": "2024-12-09T18:30:01Z",
        "_meta": {
          "raw": {
            "token": "verification-token",
            "team_id": "T12345678",
            "api_app_id": "A0ABCDE12",
            "event": {
              "type": "message",
              "channel": "C08S3A1Q2",
              "user": "U061F7AUR",
              "text": "Reminder: customer demo at 2pm",
              "ts": "1733757001.000400",
              "channel_type": "channel",
              "event_ts": "1733757001.000400"
            },
            "type": "event_callback",
            "event_id": "Ev04ABCDEF",
            "event_time": 1733757001
          }
        }
      },
      "dedupe": {
        "strategy": "primaryKey",
        "primaryKey": "event_ts"
      },
      "dedupeKey": "event_ts"
    },
    {
      "id": "reaction_added",
      "name": "Reaction Added",
      "description": "Triggered when a reaction is added to a message",
      "type": "webhook",
      "metadata": {
        "signatureVerification": {
          "templateId": "slack.default",
          "required": true
        },
        "replayWindowSeconds": 300
      },
      "parameters": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string",
            "description": "Channel ID to monitor",
            "x-dynamicOptions": {
              "handler": "list_channels",
              "labelField": "name",
              "valueField": "id",
              "searchParam": "search",
              "cache": {
                "ttlMs": 300000
              }
            }
          },
          "emoji": {
            "type": "string",
            "description": "Specific emoji to watch for"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "event_id": {
            "type": "string",
            "description": "Unique identifier for the Slack event"
          },
          "event_ts": {
            "type": "string",
            "description": "Slack event timestamp used for deduplication"
          },
          "team_id": {
            "type": "string",
            "description": "Workspace identifier"
          },
          "api_app_id": {
            "type": "string",
            "description": "Slack application identifier"
          },
          "type": {
            "type": "string",
            "const": "event_callback",
            "description": "Event envelope type"
          },
          "event": {
            "type": "object",
            "description": "Normalized Slack reaction payload",
            "properties": {
              "type": {
                "type": "string",
                "description": "Event subtype"
              },
              "user": {
                "type": "string",
                "description": "User who added the reaction"
              },
              "reaction": {
                "type": "string",
                "description": "Name of the emoji reaction"
              },
              "item": {
                "type": "object",
                "description": "Item the reaction was added to",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type of item (e.g., message)"
                  },
                  "channel": {
                    "type": "string",
                    "description": "Channel identifier containing the item"
                  },
                  "ts": {
                    "type": "string",
                    "description": "Timestamp for the target item"
                  }
                },
                "required": [
                  "type",
                  "channel",
                  "ts"
                ],
                "additionalProperties": true
              },
              "item_user": {
                "type": "string",
                "description": "Owner of the item that received the reaction"
              }
            },
            "required": [
              "type",
              "user",
              "reaction",
              "item"
            ],
            "additionalProperties": true
          },
          "eventTime": {
            "type": "string",
            "format": "date-time",
            "description": "Event timestamp converted to ISO 8601"
          },
          "_meta": {
            "type": "object",
            "description": "Connector metadata including the raw Slack payload",
            "properties": {
              "raw": {
                "type": "object",
                "description": "Original Slack Events API payload",
                "additionalProperties": true
              }
            },
            "additionalProperties": true
          }
        },
        "required": [
          "event_id",
          "event_ts",
          "team_id",
          "event"
        ],
        "additionalProperties": true
      },
      "sample": {
        "event_id": "Ev04GHJKLM",
        "event_ts": "1733757040.000500",
        "team_id": "T12345678",
        "api_app_id": "A0ABCDE12",
        "type": "event_callback",
        "event": {
          "type": "reaction_added",
          "user": "U024BE7LH",
          "reaction": "white_check_mark",
          "item": {
            "type": "message",
            "channel": "C024BE7LT",
            "ts": "1733756030.000200"
          },
          "item_user": "U061F7AUR"
        },
        "eventTime": "2024-12-09T18:30:40Z",
        "_meta": {
          "raw": {
            "team_id": "T12345678",
            "api_app_id": "A0ABCDE12",
            "event": {
              "type": "reaction_added",
              "user": "U024BE7LH",
              "reaction": "white_check_mark",
              "item": {
                "type": "message",
                "channel": "C024BE7LT",
                "ts": "1733756030.000200"
              },
              "item_user": "U061F7AUR",
              "event_ts": "1733757040.000500"
            },
            "type": "event_callback",
            "event_id": "Ev04GHJKLM",
            "event_time": 1733757040
          }
        }
      },
      "dedupe": {
        "strategy": "primaryKey",
        "primaryKey": "event_ts"
      },
      "dedupeKey": "event_ts"
    },
    {
      "id": "user_joined_channel",
      "name": "User Joined Channel",
      "description": "Triggered when a user joins a channel",
      "type": "webhook",
      "metadata": {
        "signatureVerification": {
          "templateId": "slack.default",
          "required": true
        },
        "replayWindowSeconds": 300
      },
      "parameters": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string",
            "description": "Channel ID to monitor",
            "x-dynamicOptions": {
              "handler": "list_channels",
              "labelField": "name",
              "valueField": "id",
              "searchParam": "search",
              "cache": {
                "ttlMs": 300000
              }
            }
          }
        },
        "required": [
          "channel"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "event_id": {
            "type": "string",
            "description": "Unique identifier for the Slack event"
          },
          "event_ts": {
            "type": "string",
            "description": "Slack event timestamp used for deduplication"
          },
          "team_id": {
            "type": "string",
            "description": "Workspace identifier"
          },
          "api_app_id": {
            "type": "string",
            "description": "Slack application identifier"
          },
          "type": {
            "type": "string",
            "const": "event_callback",
            "description": "Event envelope type"
          },
          "event": {
            "type": "object",
            "description": "Normalized channel membership payload",
            "properties": {
              "type": {
                "type": "string",
                "description": "Event subtype"
              },
              "user": {
                "type": "string",
                "description": "User who joined the channel"
              },
              "channel": {
                "type": "string",
                "description": "Channel identifier"
              },
              "channel_type": {
                "type": "string",
                "description": "Channel classification"
              },
              "team": {
                "type": "string",
                "description": "Workspace identifier"
              },
              "inviter": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "User who invited the member"
              }
            },
            "required": [
              "type",
              "user",
              "channel"
            ],
            "additionalProperties": true
          },
          "eventTime": {
            "type": "string",
            "format": "date-time",
            "description": "Event timestamp converted to ISO 8601"
          },
          "_meta": {
            "type": "object",
            "description": "Connector metadata including the raw Slack payload",
            "properties": {
              "raw": {
                "type": "object",
                "description": "Original Slack Events API payload",
                "additionalProperties": true
              }
            },
            "additionalProperties": true
          }
        },
        "required": [
          "event_id",
          "event_ts",
          "team_id",
          "event"
        ],
        "additionalProperties": true
      },
      "sample": {
        "event_id": "Ev04MEMJOIN",
        "event_ts": "1733757205.000600",
        "team_id": "T12345678",
        "api_app_id": "A0ABCDE12",
        "type": "event_callback",
        "event": {
          "type": "member_joined_channel",
          "user": "U0G9QF9C6",
          "channel": "C08S3A1Q2",
          "channel_type": "C",
          "team": "T12345678",
          "inviter": "U024BE7LH"
        },
        "eventTime": "2024-12-09T18:33:25Z",
        "_meta": {
          "raw": {
            "team_id": "T12345678",
            "api_app_id": "A0ABCDE12",
            "event": {
              "type": "member_joined_channel",
              "user": "U0G9QF9C6",
              "channel": "C08S3A1Q2",
              "channel_type": "C",
              "team": "T12345678",
              "inviter": "U024BE7LH",
              "event_ts": "1733757205.000600"
            },
            "type": "event_callback",
            "event_id": "Ev04MEMJOIN",
            "event_time": 1733757205
          }
        }
      },
      "dedupe": {
        "strategy": "primaryKey",
        "primaryKey": "event_ts"
      },
      "dedupeKey": "event_ts"
    }
  ],
  "testConnection": {
    "endpoint": "/auth.test",
    "method": "GET",
    "expectedResponse": {
      "ok": true
    }
  },
  "documentation": "https://api.slack.com/web",
  "supportContact": "https://slack.com/help/contact",
  "version": "1.0.0",
  "release": {
    "semver": "1.0.0",
    "status": "stable",
    "isBeta": false,
    "betaStartedAt": null,
    "deprecationWindow": {
      "startDate": null,
      "sunsetDate": null
    }
  },
  "schemaVersion": "1.0"
}
