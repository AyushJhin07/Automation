{
  "id": "slack",
  "name": "Slack",
  "description": "Connect to Slack workspace for messaging, notifications, and collaboration automation",
  "category": "Communication",
  "icon": "slack",
  "color": "#4A154B",
  "availability": "stable",
  "authentication": {
    "type": "oauth2",
    "authUrl": "https://slack.com/oauth/v2/authorize",
    "tokenUrl": "https://slack.com/api/oauth.v2.access",
    "scopes": [
      "chat:write",
      "channels:read",
      "users:read",
      "files:write",
      "reactions:write"
    ],
    "clientIdRequired": true,
    "clientSecretRequired": true
  },
  "baseUrl": "https://slack.com/api",
  "rateLimits": {
    "requestsPerSecond": 1,
    "requestsPerMinute": 50,
    "burstAllowed": 3
  },
  "actions": [
    {
      "id": "test_connection",
      "name": "Test Connection",
      "description": "Test the connection to Slack and verify authentication",
      "endpoint": "/auth.test",
      "method": "GET",
      "parameters": {
        "type": "object",
        "properties": {},
        "required": [],
        "additionalProperties": false
      },
      "requiredScopes": [
        "users:read"
      ],
      "rateLimits": {
        "requests": 10,
        "period": "1m",
        "scope": "user"
      }
    },
    {
      "id": "send_message",
      "name": "Send Message",
      "description": "Send a message to a Slack channel or user",
      "endpoint": "/chat.postMessage",
      "method": "POST",
      "parameters": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string",
            "description": "Channel ID or user ID to send message to",
            "x-dynamicOptions": {
              "handler": "list_channels",
              "labelField": "name",
              "valueField": "id",
              "searchParam": "search",
              "cache": {
                "ttlMs": 300000
              }
            }
          },
          "text": {
            "type": "string",
            "description": "Message text content"
          },
          "username": {
            "type": "string",
            "description": "Bot username override"
          },
          "icon_emoji": {
            "type": "string",
            "description": "Emoji icon for the message"
          },
          "thread_ts": {
            "type": "string",
            "description": "Timestamp of parent message to reply in thread"
          },
          "blocks": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Rich message blocks for formatting"
          }
        },
        "required": [
          "channel",
          "text"
        ],
        "additionalProperties": false
      },
      "responseFields": [
        "ts",
        "channel",
        "message"
      ],
      "errorCodes": {
        "channel_not_found": "The specified channel does not exist",
        "not_in_channel": "Bot is not a member of the channel",
        "msg_too_long": "Message text is too long"
      }
    },
    {
      "id": "create_channel",
      "name": "Create Channel",
      "description": "Create a new Slack channel",
      "endpoint": "/conversations.create",
      "method": "POST",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Channel name (without #)"
          },
          "is_private": {
            "type": "boolean",
            "default": false,
            "description": "Create a private channel"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false
      }
    },
    {
      "id": "invite_to_channel",
      "name": "Invite to Channel",
      "description": "Invite users to a Slack channel",
      "endpoint": "/conversations.invite",
      "method": "POST",
      "parameters": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string",
            "description": "Channel ID to invite users to",
            "x-dynamicOptions": {
              "handler": "list_channels",
              "labelField": "name",
              "valueField": "id",
              "searchParam": "search",
              "cache": {
                "ttlMs": 300000
              }
            }
          },
          "users": {
            "type": "string",
            "description": "Comma-separated list of user IDs",
            "x-dynamicOptions": {
              "handler": "list_users",
              "labelField": "real_name",
              "valueField": "id",
              "searchParam": "search",
              "cache": {
                "ttlMs": 300000
              }
            }
          }
        },
        "required": [
          "channel",
          "users"
        ],
        "additionalProperties": false
      }
    },
    {
      "id": "upload_file",
      "name": "Upload File",
      "description": "Upload a file to a Slack channel",
      "endpoint": "/files.upload",
      "method": "POST",
      "parameters": {
        "type": "object",
        "properties": {
          "channels": {
            "type": "string",
            "description": "Channel IDs to share the file to"
          },
          "content": {
            "type": "string",
            "description": "File content"
          },
          "filename": {
            "type": "string",
            "description": "Name of the file"
          },
          "filetype": {
            "type": "string",
            "description": "File type/extension"
          },
          "initial_comment": {
            "type": "string",
            "description": "Comment to add with the file"
          },
          "title": {
            "type": "string",
            "description": "Title of the file"
          }
        },
        "required": [
          "content",
          "filename"
        ],
        "additionalProperties": false
      }
    },
    {
      "id": "get_channel_info",
      "name": "Get Channel Info",
      "description": "Get information about a Slack channel",
      "endpoint": "/conversations.info",
      "method": "GET",
      "parameters": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string",
            "description": "Channel ID to get info for",
            "x-dynamicOptions": {
              "handler": "list_channels",
              "labelField": "name",
              "valueField": "id",
              "searchParam": "search",
              "cache": {
                "ttlMs": 300000
              }
            }
          }
        },
        "required": [
          "channel"
        ],
        "additionalProperties": false
      }
    },
    {
      "id": "list_channels",
      "name": "List Channels",
      "description": "List all channels in the workspace",
      "endpoint": "/conversations.list",
      "method": "GET",
      "parameters": {
        "type": "object",
        "properties": {
          "types": {
            "type": "string",
            "default": "public_channel",
            "description": "Channel types to include (public_channel, private_channel, mpim, im)"
          },
          "limit": {
            "type": "number",
            "default": 100,
            "description": "Maximum number of channels to return"
          }
        },
        "required": [],
        "additionalProperties": false
      }
    },
    {
      "id": "get_user_info",
      "name": "Get User Info",
      "description": "Get information about a Slack user",
      "endpoint": "/users.info",
      "method": "GET",
      "parameters": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "description": "User ID to get info for"
          }
        },
        "required": [
          "user"
        ],
        "additionalProperties": false
      }
    },
    {
      "id": "list_users",
      "name": "List Users",
      "description": "List all users in the workspace",
      "endpoint": "/users.list",
      "method": "GET",
      "parameters": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 100,
            "description": "Maximum number of users to return"
          }
        },
        "required": [],
        "additionalProperties": false
      }
    },
    {
      "id": "add_reaction",
      "name": "Add Reaction",
      "description": "Add an emoji reaction to a message",
      "endpoint": "/reactions.add",
      "method": "POST",
      "parameters": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string",
            "description": "Channel containing the message",
            "x-dynamicOptions": {
              "handler": "list_channels",
              "labelField": "name",
              "valueField": "id",
              "searchParam": "search",
              "cache": {
                "ttlMs": 300000
              }
            }
          },
          "timestamp": {
            "type": "string",
            "description": "Timestamp of the message"
          },
          "name": {
            "type": "string",
            "description": "Emoji name (without colons)"
          }
        },
        "required": [
          "channel",
          "timestamp",
          "name"
        ],
        "additionalProperties": false
      }
    },
    {
      "id": "schedule_message",
      "name": "Schedule Message",
      "description": "Schedule a message to be sent later",
      "endpoint": "/chat.scheduleMessage",
      "method": "POST",
      "parameters": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string",
            "description": "Channel ID to send message to",
            "x-dynamicOptions": {
              "handler": "list_channels",
              "labelField": "name",
              "valueField": "id",
              "searchParam": "search",
              "cache": {
                "ttlMs": 300000
              }
            }
          },
          "text": {
            "type": "string",
            "description": "Message text content"
          },
          "post_at": {
            "type": "number",
            "description": "Unix timestamp for when to send the message"
          }
        },
        "required": [
          "channel",
          "text",
          "post_at"
        ],
        "additionalProperties": false
      }
    },
    {
      "id": "list_files",
      "name": "List Files",
      "description": "List files in the workspace",
      "endpoint": "/files.list",
      "method": "GET",
      "parameters": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string"
          },
          "channel": {
            "type": "string"
          },
          "ts_from": {
            "type": "number"
          },
          "ts_to": {
            "type": "number"
          },
          "count": {
            "type": "number",
            "default": 100
          }
        },
        "required": [],
        "additionalProperties": false
      }
    },
    {
      "id": "conversations_history",
      "name": "Conversations History",
      "description": "Fetch conversation history",
      "endpoint": "/conversations.history",
      "method": "GET",
      "parameters": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string"
          },
          "latest": {
            "type": "string"
          },
          "oldest": {
            "type": "string"
          },
          "inclusive": {
            "type": "boolean"
          },
          "limit": {
            "type": "number",
            "default": 100
          }
        },
        "required": [
          "channel"
        ],
        "additionalProperties": false
      }
    }
  ],
  "triggers": [
    {
      "id": "message_received",
      "name": "Message Received",
      "description": "Triggered when a new message is posted",
      "type": "webhook",
      "metadata": {
        "signatureVerification": {
          "templateId": "slack.default",
          "required": true
        },
        "replayWindowSeconds": 300
      },
      "parameters": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string",
            "description": "Channel ID to monitor (optional, monitors all if empty)",
            "x-dynamicOptions": {
              "handler": "list_channels",
              "labelField": "name",
              "valueField": "id",
              "searchParam": "search",
              "cache": {
                "ttlMs": 300000
              }
            }
          },
          "user": {
            "type": "string",
            "description": "User ID to monitor (optional, monitors all if empty)"
          },
          "keywords": {
            "type": "string",
            "description": "Keywords to watch for in messages"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "thread_ts": {
            "type": "string"
          }
        }
      }
    },
    {
      "id": "reaction_added",
      "name": "Reaction Added",
      "description": "Triggered when a reaction is added to a message",
      "type": "webhook",
      "metadata": {
        "signatureVerification": {
          "templateId": "slack.default",
          "required": true
        },
        "replayWindowSeconds": 300
      },
      "parameters": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string",
            "description": "Channel ID to monitor",
            "x-dynamicOptions": {
              "handler": "list_channels",
              "labelField": "name",
              "valueField": "id",
              "searchParam": "search",
              "cache": {
                "ttlMs": 300000
              }
            }
          },
          "emoji": {
            "type": "string",
            "description": "Specific emoji to watch for"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "reaction": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          }
        }
      }
    },
    {
      "id": "user_joined_channel",
      "name": "User Joined Channel",
      "description": "Triggered when a user joins a channel",
      "type": "webhook",
      "metadata": {
        "signatureVerification": {
          "templateId": "slack.default",
          "required": true
        },
        "replayWindowSeconds": 300
      },
      "parameters": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string",
            "description": "Channel ID to monitor",
            "x-dynamicOptions": {
              "handler": "list_channels",
              "labelField": "name",
              "valueField": "id",
              "searchParam": "search",
              "cache": {
                "ttlMs": 300000
              }
            }
          }
        },
        "required": [
          "channel"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          }
        }
      }
    }
  ],
  "testConnection": {
    "endpoint": "/auth.test",
    "method": "GET",
    "expectedResponse": {
      "ok": true
    }
  },
  "documentation": "https://api.slack.com/web",
  "supportContact": "https://slack.com/help/contact",
  "version": "1.0.0",
  "release": {
    "semver": "1.0.0",
    "status": "stable",
    "isBeta": false,
    "betaStartedAt": null,
    "deprecationWindow": {
      "startDate": null,
      "sunsetDate": null
    }
  }
}
