{
  "id": "bitbucket",
  "name": "Bitbucket",
  "description": "Bitbucket Git repository hosting and collaboration platform",
  "category": "Development",
  "icon": "bitbucket",
  "color": "#0052CC",
  "version": "1.0.0",
  "authentication": {
    "type": "oauth2",
    "config": {
      "authUrl": "https://bitbucket.org/site/oauth2/authorize",
      "tokenUrl": "https://bitbucket.org/site/oauth2/access_token",
      "scopes": [
        "repositories",
        "issues",
        "pullrequests"
      ]
    }
  },
  "baseUrl": "https://api.bitbucket.org/2.0",
  "actions": [
    {
      "id": "test_connection",
      "name": "Test Connection",
      "description": "Test the connection to Bitbucket",
      "parameters": {
        "type": "object",
        "properties": {},
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "create_issue",
      "name": "Create Issue",
      "description": "Create a new issue",
      "parameters": {
        "type": "object",
        "properties": {
          "workspace": {
            "type": "string",
            "description": "Workspace name"
          },
          "repo_slug": {
            "type": "string",
            "description": "Repository slug"
          },
          "title": {
            "type": "string",
            "description": "Issue title"
          },
          "content": {
            "type": "object",
            "properties": {
              "raw": {
                "type": "string"
              },
              "markup": {
                "type": "string",
                "enum": [
                  "markdown",
                  "creole",
                  "plaintext"
                ]
              }
            },
            "description": "Issue content"
          },
          "kind": {
            "type": "string",
            "enum": [
              "bug",
              "enhancement",
              "proposal",
              "task"
            ],
            "description": "Issue kind"
          },
          "priority": {
            "type": "string",
            "enum": [
              "trivial",
              "minor",
              "major",
              "critical",
              "blocker"
            ],
            "description": "Issue priority"
          },
          "assignee": {
            "type": "object",
            "properties": {
              "account_id": {
                "type": "string"
              }
            },
            "description": "Issue assignee"
          }
        },
        "required": [
          "workspace",
          "repo_slug",
          "title"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "create_pull_request",
      "name": "Create Pull Request",
      "description": "Create a new pull request",
      "parameters": {
        "type": "object",
        "properties": {
          "workspace": {
            "type": "string",
            "description": "Workspace name"
          },
          "repo_slug": {
            "type": "string",
            "description": "Repository slug"
          },
          "title": {
            "type": "string",
            "description": "Pull request title"
          },
          "description": {
            "type": "string",
            "description": "Pull request description"
          },
          "source": {
            "type": "object",
            "properties": {
              "branch": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Source branch"
          },
          "destination": {
            "type": "object",
            "properties": {
              "branch": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Destination branch"
          },
          "reviewers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "account_id": {
                  "type": "string"
                }
              }
            },
            "description": "Pull request reviewers"
          },
          "close_source_branch": {
            "type": "boolean",
            "description": "Close source branch after merge"
          }
        },
        "required": [
          "workspace",
          "repo_slug",
          "title",
          "source",
          "destination"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "get_repository",
      "name": "Get Repository",
      "description": "Get repository information",
      "parameters": {
        "type": "object",
        "properties": {
          "workspace": {
            "type": "string",
            "description": "Workspace name"
          },
          "repo_slug": {
            "type": "string",
            "description": "Repository slug"
          }
        },
        "required": [
          "workspace",
          "repo_slug"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "list_repositories",
      "name": "List Repositories",
      "description": "List repositories for a workspace",
      "parameters": {
        "type": "object",
        "properties": {
          "workspace": {
            "type": "string",
            "description": "Workspace name"
          },
          "role": {
            "type": "string",
            "enum": [
              "owner",
              "admin",
              "contributor",
              "member"
            ],
            "description": "Filter by role"
          },
          "q": {
            "type": "string",
            "description": "Search query"
          },
          "sort": {
            "type": "string",
            "enum": [
              "created_on",
              "updated_on",
              "name"
            ],
            "description": "Sort field"
          }
        },
        "required": [
          "workspace"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "create_webhook",
      "name": "Create Webhook",
      "description": "Create a repository webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "workspace": {
            "type": "string",
            "description": "Workspace name"
          },
          "repo_slug": {
            "type": "string",
            "description": "Repository slug"
          },
          "description": {
            "type": "string",
            "description": "Webhook description"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "Webhook URL"
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "Whether webhook is active"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Events to trigger webhook"
          }
        },
        "required": [
          "workspace",
          "repo_slug",
          "url",
          "events"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    }
  ],
  "triggers": [
    {
      "id": "push",
      "name": "Push",
      "description": "Triggered when code is pushed to repository",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "workspace": {
            "type": "string",
            "description": "Filter by workspace"
          },
          "repository": {
            "type": "string",
            "description": "Filter by repository"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "repository": {
            "type": "object"
          },
          "push": {
            "type": "object"
          },
          "actor": {
            "type": "object"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "sample": {
        "success": true
      },
      "dedupe": {
        "strategy": "id",
        "path": "id"
      }
    },
    {
      "id": "pull_request_created",
      "name": "Pull Request Created",
      "description": "Triggered when a pull request is created",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "workspace": {
            "type": "string",
            "description": "Filter by workspace"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "pullrequest": {
            "type": "object"
          },
          "repository": {
            "type": "object"
          },
          "actor": {
            "type": "object"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "sample": {
        "success": true
      },
      "dedupe": {
        "strategy": "id",
        "path": "id"
      }
    }
  ],
  "testConnection": {
    "method": "GET",
    "endpoint": "/user"
  },
  "release": {
    "semver": "1.0.0",
    "status": "stable",
    "isBeta": false,
    "betaStartedAt": null,
    "deprecationWindow": {
      "startDate": null,
      "sunsetDate": null
    }
  },
  "schemaVersion": "1.0"
}
