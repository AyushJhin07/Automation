{
  "id": "stripe",
  "name": "Stripe",
  "description": "Stripe payment processing platform with comprehensive financial operations",
  "category": "Payments",
  "icon": "stripe",
  "color": "#635BFF",
  "version": "1.0.0",
  "authentication": {
    "type": "api_key",
    "config": {
      "type": "header",
      "name": "Authorization",
      "prefix": "Bearer"
    }
  },
  "baseUrl": "https://api.stripe.com/v1",
  "rateLimits": {
    "requestsPerSecond": 100,
    "requestsPerMinute": 6000
  },
  "actions": [
    {
      "id": "test_connection",
      "name": "Test Connection",
      "description": "Test the connection to Stripe and verify API key",
      "parameters": {
        "type": "object",
        "properties": {},
        "required": [],
        "additionalProperties": false
      }
    },
    {
      "id": "create_customer",
      "name": "Create Customer",
      "description": "Create a new customer in Stripe",
      "endpoint": "/customers",
      "method": "POST",
      "parameters": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "Customer email address"
          },
          "name": {
            "type": "string",
            "description": "Customer full name"
          },
          "phone": {
            "type": "string",
            "description": "Customer phone number"
          },
          "description": {
            "type": "string",
            "description": "Customer description"
          },
          "address": {
            "type": "object",
            "properties": {
              "line1": {"type": "string"},
              "line2": {"type": "string"},
              "city": {"type": "string"},
              "state": {"type": "string"},
              "postal_code": {"type": "string"},
              "country": {"type": "string"}
            },
            "description": "Customer address"
          },
          "shipping": {
            "type": "object",
            "properties": {
              "name": {"type": "string"},
              "address": {"type": "object"}
            },
            "description": "Customer shipping information"
          },
          "metadata": {
            "type": "object",
            "description": "Custom metadata key-value pairs"
          },
          "payment_method": {
            "type": "string",
            "description": "Default payment method ID"
          },
          "balance": {
            "type": "number",
            "description": "Customer account balance in cents"
          },
          "tax_exempt": {
            "type": "string",
            "enum": ["none", "exempt", "reverse"],
            "description": "Customer tax exemption status"
          }
        },
        "required": [],
        "additionalProperties": false
      }
    },
    {
      "id": "create_payment_intent",
      "name": "Create Payment Intent",
      "description": "Create a payment intent for processing payments",
      "endpoint": "/payment_intents",
      "method": "POST",
      "parameters": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "minimum": 1,
            "description": "Payment amount in smallest currency unit (e.g., cents)"
          },
          "currency": {
            "type": "string",
            "description": "Three-letter ISO currency code (e.g., usd, eur)"
          },
          "customer": {
            "type": "string",
            "description": "Customer ID"
          },
          "description": {
            "type": "string",
            "description": "Payment description"
          },
          "payment_method": {
            "type": "string",
            "description": "Payment method ID"
          },
          "payment_method_types": {
            "type": "array",
            "items": {"type": "string"},
            "default": ["card"],
            "description": "Allowed payment method types"
          },
          "confirm": {
            "type": "boolean",
            "default": false,
            "description": "Whether to confirm the payment intent immediately"
          },
          "receipt_email": {
            "type": "string",
            "format": "email",
            "description": "Email address for receipt"
          },
          "setup_future_usage": {
            "type": "string",
            "enum": ["on_session", "off_session"],
            "description": "Setup for future usage"
          },
          "shipping": {
            "type": "object",
            "description": "Shipping information"
          },
          "statement_descriptor": {
            "type": "string",
            "description": "Statement descriptor"
          },
          "metadata": {
            "type": "object",
            "description": "Custom metadata"
          }
        },
        "required": ["amount", "currency"],
        "additionalProperties": false
      }
    },
    {
      "id": "update_subscription",
      "name": "Update Subscription",
      "description": "Update a subscription",
      "endpoint": "/subscriptions/{subscription}",
      "method": "POST",
      "parameters": {
        "type": "object",
        "properties": {
          "subscription": { "type": "string", "description": "Subscription ID" },
          "cancel_at_period_end": { "type": "boolean" },
          "proration_behavior": { "type": "string", "enum": ["create_prorations","none","always_invoice"] }
        },
        "required": ["subscription"],
        "additionalProperties": false
      }
    },
    {
      "id": "create_refund",
      "name": "Create Refund",
      "description": "Create a refund for a charge or payment intent",
      "endpoint": "/refunds",
      "method": "POST",
      "parameters": {
        "type": "object",
        "properties": {
          "charge": { "type": "string" },
          "payment_intent": { "type": "string" },
          "amount": { "type": "number" }
        },
        "required": [],
        "additionalProperties": false
      }
    }
    {
      "id": "create_subscription",
      "name": "Create Subscription",
      "description": "Create a recurring subscription for a customer",
      "parameters": {
        "type": "object",
        "properties": {
          "customer": {
            "type": "string",
            "description": "Customer ID"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "price": {"type": "string"},
                "quantity": {"type": "number"}
              }
            },
            "description": "Subscription items with prices and quantities"
          },
          "trial_period_days": {
            "type": "number",
            "description": "Number of trial days"
          },
          "default_payment_method": {
            "type": "string",
            "description": "Default payment method ID"
          },
          "collection_method": {
            "type": "string",
            "enum": ["charge_automatically", "send_invoice"],
            "default": "charge_automatically",
            "description": "Collection method"
          },
          "days_until_due": {
            "type": "number",
            "description": "Days until invoice is due (for send_invoice)"
          },
          "metadata": {
            "type": "object",
            "description": "Custom metadata"
          },
          "proration_behavior": {
            "type": "string",
            "enum": ["create_prorations", "none", "always_invoice"],
            "description": "Proration behavior"
          },
          "coupon": {
            "type": "string",
            "description": "Coupon ID to apply"
          }
        },
        "required": ["customer", "items"],
        "additionalProperties": false
      }
    },
    {
      "id": "create_refund",
      "name": "Create Refund",
      "description": "Create a refund for a payment",
      "parameters": {
        "type": "object",
        "properties": {
          "payment_intent": {
            "type": "string",
            "description": "Payment Intent ID to refund"
          },
          "charge": {
            "type": "string",
            "description": "Charge ID to refund (alternative to payment_intent)"
          },
          "amount": {
            "type": "number",
            "description": "Refund amount in cents (omit for full refund)"
          },
          "reason": {
            "type": "string",
            "enum": ["duplicate", "fraudulent", "requested_by_customer"],
            "description": "Reason for the refund"
          },
          "refund_application_fee": {
            "type": "boolean",
            "description": "Whether to refund the application fee"
          },
          "reverse_transfer": {
            "type": "boolean",
            "description": "Whether to reverse the transfer"
          },
          "metadata": {
            "type": "object",
            "description": "Custom metadata"
          }
        },
        "required": [],
        "additionalProperties": false
      }
    },
    {
      "id": "retrieve_customer",
      "name": "Retrieve Customer",
      "description": "Retrieve a customer by ID",
      "parameters": {
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string",
            "description": "Customer ID"
          }
        },
        "required": ["customer_id"],
        "additionalProperties": false
      }
    },
    {
      "id": "list_payment_intents",
      "name": "List Payment Intents",
      "description": "List payment intents with optional filtering",
      "parameters": {
        "type": "object",
        "properties": {
          "customer": {
            "type": "string",
            "description": "Filter by customer ID"
          },
          "limit": {
            "type": "number",
            "minimum": 1,
            "maximum": 100,
            "default": 10,
            "description": "Number of results to return"
          },
          "starting_after": {
            "type": "string",
            "description": "Cursor for pagination"
          },
          "ending_before": {
            "type": "string",
            "description": "Cursor for pagination"
          },
          "created": {
            "type": "object",
            "description": "Filter by creation date"
          }
        },
        "required": [],
        "additionalProperties": false
      }
    },
    {
      "id": "update_subscription",
      "name": "Update Subscription",
      "description": "Update an existing subscription",
      "parameters": {
        "type": "object",
        "properties": {
          "subscription_id": {
            "type": "string",
            "description": "Subscription ID"
          },
          "items": {
            "type": "array",
            "items": {"type": "object"},
            "description": "Updated subscription items"
          },
          "default_payment_method": {
            "type": "string",
            "description": "Updated default payment method"
          },
          "metadata": {
            "type": "object",
            "description": "Updated metadata"
          },
          "proration_behavior": {
            "type": "string",
            "enum": ["create_prorations", "none", "always_invoice"],
            "description": "Proration behavior"
          }
        },
        "required": ["subscription_id"],
        "additionalProperties": false
      }
    }
  ],
  "triggers": [
    {
      "id": "payment_succeeded",
      "name": "Payment Succeeded",
      "description": "Triggered when a payment is successfully processed",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string",
            "description": "Filter by specific customer"
          },
          "amount_threshold": {
            "type": "number",
            "description": "Minimum payment amount to trigger"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "id": {"type": "string"},
          "object": {"type": "string"},
          "amount": {"type": "number"},
          "currency": {"type": "string"},
          "customer": {"type": "string"},
          "description": {"type": "string"},
          "status": {"type": "string"}
        }
      }
    },
    {
      "id": "payment_failed",
      "name": "Payment Failed",
      "description": "Triggered when a payment fails",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string",
            "description": "Filter by specific customer"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "id": {"type": "string"},
          "object": {"type": "string"},
          "amount": {"type": "number"},
          "currency": {"type": "string"},
          "customer": {"type": "string"},
          "last_payment_error": {"type": "object"}
        }
      }
    },
    {
      "id": "subscription_created",
      "name": "Subscription Created",
      "description": "Triggered when a new subscription is created",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string",
            "description": "Filter by specific customer"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "id": {"type": "string"},
          "object": {"type": "string"},
          "customer": {"type": "string"},
          "status": {"type": "string"},
          "items": {"type": "object"},
          "current_period_start": {"type": "number"},
          "current_period_end": {"type": "number"}
        }
      }
    },
    {
      "id": "invoice_payment_succeeded",
      "name": "Invoice Payment Succeeded",
      "description": "Triggered when an invoice payment succeeds",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string",
            "description": "Filter by specific customer"
          },
          "subscription_id": {
            "type": "string",
            "description": "Filter by specific subscription"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "id": {"type": "string"},
          "object": {"type": "string"},
          "customer": {"type": "string"},
          "subscription": {"type": "string"},
          "amount_paid": {"type": "number"},
          "currency": {"type": "string"}
        }
      }
    }
  ],
  "testConnection": {
    "method": "GET",
    "endpoint": "/account"
  }
}
    {
      "id": "list_payment_intents",
      "name": "List Payment Intents",
      "description": "List payment intents",
      "endpoint": "/payment_intents",
      "method": "GET",
      "parameters": {
        "type": "object",
        "properties": {
          "limit": { "type": "number", "default": 10, "maximum": 100 },
          "customer": { "type": "string" },
          "starting_after": { "type": "string" }
        },
        "required": [],
        "additionalProperties": false
      }
    },
    {
      "id": "retrieve_customer",
      "name": "Retrieve Customer",
      "description": "Get a customer by ID",
      "endpoint": "/customers/{customer}",
      "method": "GET",
      "parameters": {
        "type": "object",
        "properties": {
          "customer": { "type": "string", "description": "Customer ID" }
        },
        "required": ["customer"],
        "additionalProperties": false
      }
    },
    {
      "id": "list_charges",
      "name": "List Charges",
      "description": "List charges",
      "endpoint": "/charges",
      "method": "GET",
      "parameters": {
        "type": "object",
        "properties": {
          "limit": { "type": "number", "default": 10, "maximum": 100 },
          "customer": { "type": "string" },
          "starting_after": { "type": "string" }
        },
        "required": [],
        "additionalProperties": false
      }
    }
    {
      "id": "retrieve_charge",
      "name": "Retrieve Charge",
      "description": "Get a charge by ID",
      "endpoint": "/charges/{charge}",
      "method": "GET",
      "parameters": {
        "type": "object",
        "properties": { "charge": { "type": "string" } },
        "required": ["charge"],
        "additionalProperties": false
      }
    },
    {
      "id": "list_customers",
      "name": "List Customers",
      "description": "List customers",
      "endpoint": "/customers",
      "method": "GET",
      "parameters": {
        "type": "object",
        "properties": { "limit": { "type": "number", "default": 10, "maximum": 100 }, "starting_after": { "type": "string" } },
        "required": [],
        "additionalProperties": false
      }
    }
