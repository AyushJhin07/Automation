{
  "id": "calendly",
  "name": "Calendly",
  "description": "Calendly scheduling automation platform",
  "category": "Scheduling",
  "icon": "calendly",
  "color": "#006BFF",
  "version": "1.0.0",
  "authentication": {
    "type": "oauth2",
    "config": {
      "authUrl": "https://auth.calendly.com/oauth/authorize",
      "tokenUrl": "https://auth.calendly.com/oauth/token",
      "scopes": [
        "default"
      ]
    }
  },
  "baseUrl": "https://api.calendly.com",
  "actions": [
    {
      "id": "test_connection",
      "name": "Test Connection",
      "description": "Test the connection to Calendly",
      "parameters": {
        "type": "object",
        "properties": {},
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "get_scheduled_events",
      "name": "Get Scheduled Events",
      "description": "Retrieve scheduled events",
      "parameters": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "description": "User URI"
          },
          "organization": {
            "type": "string",
            "description": "Organization URI"
          },
          "count": {
            "type": "number",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "description": "Number of events to return"
          },
          "page_token": {
            "type": "string",
            "description": "Pagination token"
          },
          "sort": {
            "type": "string",
            "enum": [
              "start_time:asc",
              "start_time:desc"
            ],
            "description": "Sort order"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "canceled"
            ],
            "description": "Event status filter"
          },
          "min_start_time": {
            "type": "string",
            "format": "date-time",
            "description": "Minimum start time filter"
          },
          "max_start_time": {
            "type": "string",
            "format": "date-time",
            "description": "Maximum start time filter"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "get_event_invitees",
      "name": "Get Event Invitees",
      "description": "Get invitees for a scheduled event",
      "parameters": {
        "type": "object",
        "properties": {
          "event_uuid": {
            "type": "string",
            "description": "Event UUID"
          },
          "count": {
            "type": "number",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "description": "Number of invitees to return"
          },
          "page_token": {
            "type": "string",
            "description": "Pagination token"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Filter by email"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "canceled"
            ],
            "description": "Invitee status filter"
          },
          "sort": {
            "type": "string",
            "enum": [
              "created_at:asc",
              "created_at:desc"
            ],
            "description": "Sort order"
          }
        },
        "required": [
          "event_uuid"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "get_user_info",
      "name": "Get User Info",
      "description": "Get user information",
      "parameters": {
        "type": "object",
        "properties": {
          "user_uuid": {
            "type": "string",
            "description": "User UUID"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "get_event_types",
      "name": "Get Event Types",
      "description": "Get user's event types",
      "parameters": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "description": "User URI"
          },
          "organization": {
            "type": "string",
            "description": "Organization URI"
          },
          "count": {
            "type": "number",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "description": "Number of event types to return"
          },
          "page_token": {
            "type": "string",
            "description": "Pagination token"
          },
          "sort": {
            "type": "string",
            "enum": [
              "name:asc",
              "name:desc"
            ],
            "description": "Sort order"
          },
          "active": {
            "type": "boolean",
            "description": "Filter by active status"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "cancel_scheduled_event",
      "name": "Cancel Scheduled Event",
      "description": "Cancel a scheduled event",
      "parameters": {
        "type": "object",
        "properties": {
          "event_uuid": {
            "type": "string",
            "description": "Event UUID to cancel"
          },
          "reason": {
            "type": "string",
            "description": "Cancellation reason"
          }
        },
        "required": [
          "event_uuid"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    }
  ],
  "triggers": [
    {
      "id": "invitee_created",
      "name": "Invitee Created",
      "description": "Triggered when someone schedules a meeting",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "description": "Filter by user URI"
          },
          "organization": {
            "type": "string",
            "description": "Filter by organization URI"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "event": {
            "type": "string"
          },
          "time": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "payload": {
            "type": "object"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "sample": {
        "success": true
      },
      "dedupe": {
        "strategy": "id",
        "path": "id"
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "invitee_canceled",
      "name": "Invitee Canceled",
      "description": "Triggered when a meeting is canceled",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "description": "Filter by user URI"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "event": {
            "type": "string"
          },
          "time": {
            "type": "string"
          },
          "payload": {
            "type": "object"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "sample": {
        "success": true
      },
      "dedupe": {
        "strategy": "id",
        "path": "id"
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    }
  ],
  "testConnection": {
    "method": "GET",
    "endpoint": "/users/me"
  },
  "release": {
    "semver": "1.0.0",
    "status": "stable",
    "isBeta": false,
    "betaStartedAt": null,
    "deprecationWindow": {
      "startDate": null,
      "sunsetDate": null
    }
  },
  "schemaVersion": "1.0"
}
