{
  "id": "powerbi-enhanced",
  "name": "Power BI Enhanced",
  "description": "Enhanced Microsoft Power BI business analytics and reporting platform",
  "category": "Analytics",
  "icon": "powerbi",
  "color": "#F2C811",
  "version": "1.0.0",
  "authentication": {
    "type": "oauth2",
    "config": {
      "authUrl": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
      "tokenUrl": "https://login.microsoftonline.com/common/oauth2/v2.0/token",
      "scopes": [
        "https://analysis.windows.net/powerbi/api/.default"
      ]
    }
  },
  "baseUrl": "https://api.powerbi.com/v1.0/myorg",
  "actions": [
    {
      "id": "test_connection",
      "name": "Test Connection",
      "description": "Test the connection to Power BI",
      "parameters": {
        "type": "object",
        "properties": {},
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "get_groups",
      "name": "Get Groups",
      "description": "Get list of workspaces (groups)",
      "parameters": {
        "type": "object",
        "properties": {
          "$top": {
            "type": "number",
            "minimum": 1,
            "maximum": 5000,
            "description": "Number of groups to return"
          },
          "$skip": {
            "type": "number",
            "minimum": 0,
            "description": "Number of groups to skip"
          },
          "$filter": {
            "type": "string",
            "description": "OData filter expression"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "get_group",
      "name": "Get Group",
      "description": "Get workspace details",
      "parameters": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "description": "Workspace ID"
          }
        },
        "required": [
          "groupId"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "create_group",
      "name": "Create Group",
      "description": "Create a new workspace",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Workspace name"
          },
          "workspaceV2": {
            "type": "boolean",
            "default": true,
            "description": "Create as workspace v2"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "get_datasets",
      "name": "Get Datasets",
      "description": "Get list of datasets",
      "parameters": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "description": "Workspace ID (optional, defaults to My Workspace)"
          },
          "$top": {
            "type": "number",
            "minimum": 1,
            "maximum": 5000,
            "description": "Number of datasets to return"
          },
          "$skip": {
            "type": "number",
            "minimum": 0,
            "description": "Number of datasets to skip"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "get_dataset",
      "name": "Get Dataset",
      "description": "Get dataset details",
      "parameters": {
        "type": "object",
        "properties": {
          "datasetId": {
            "type": "string",
            "description": "Dataset ID"
          },
          "groupId": {
            "type": "string",
            "description": "Workspace ID (optional)"
          }
        },
        "required": [
          "datasetId"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "refresh_dataset",
      "name": "Refresh Dataset",
      "description": "Trigger dataset refresh",
      "parameters": {
        "type": "object",
        "properties": {
          "datasetId": {
            "type": "string",
            "description": "Dataset ID"
          },
          "groupId": {
            "type": "string",
            "description": "Workspace ID (optional)"
          },
          "notifyOption": {
            "type": "string",
            "enum": [
              "MailOnCompletion",
              "MailOnFailure",
              "NoNotification"
            ],
            "default": "NoNotification",
            "description": "Notification option"
          },
          "retryCount": {
            "type": "number",
            "minimum": 0,
            "maximum": 3,
            "description": "Number of retry attempts"
          },
          "type": {
            "type": "string",
            "enum": [
              "Full",
              "ClearValues",
              "Calculate",
              "DataOnly",
              "Automatic",
              "Add",
              "Defragment"
            ],
            "default": "Full",
            "description": "Refresh type"
          },
          "commitMode": {
            "type": "string",
            "enum": [
              "Transactional",
              "PartialBatch"
            ],
            "description": "Commit mode"
          },
          "maxParallelism": {
            "type": "number",
            "minimum": 1,
            "description": "Maximum parallelism"
          },
          "objects": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "table": {
                  "type": "string"
                },
                "partition": {
                  "type": "string"
                }
              }
            },
            "description": "Specific objects to refresh"
          }
        },
        "required": [
          "datasetId"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "get_refresh_history",
      "name": "Get Refresh History",
      "description": "Get dataset refresh history",
      "parameters": {
        "type": "object",
        "properties": {
          "datasetId": {
            "type": "string",
            "description": "Dataset ID"
          },
          "groupId": {
            "type": "string",
            "description": "Workspace ID (optional)"
          },
          "$top": {
            "type": "number",
            "minimum": 1,
            "maximum": 60,
            "default": 60,
            "description": "Number of refresh entries to return"
          }
        },
        "required": [
          "datasetId"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "get_reports",
      "name": "Get Reports",
      "description": "Get list of reports",
      "parameters": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "description": "Workspace ID (optional)"
          },
          "$top": {
            "type": "number",
            "minimum": 1,
            "maximum": 5000,
            "description": "Number of reports to return"
          },
          "$skip": {
            "type": "number",
            "minimum": 0,
            "description": "Number of reports to skip"
          },
          "$filter": {
            "type": "string",
            "description": "OData filter expression"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "get_report",
      "name": "Get Report",
      "description": "Get report details",
      "parameters": {
        "type": "object",
        "properties": {
          "reportId": {
            "type": "string",
            "description": "Report ID"
          },
          "groupId": {
            "type": "string",
            "description": "Workspace ID (optional)"
          }
        },
        "required": [
          "reportId"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "clone_report",
      "name": "Clone Report",
      "description": "Clone an existing report",
      "parameters": {
        "type": "object",
        "properties": {
          "reportId": {
            "type": "string",
            "description": "Source report ID"
          },
          "groupId": {
            "type": "string",
            "description": "Source workspace ID (optional)"
          },
          "name": {
            "type": "string",
            "description": "New report name"
          },
          "targetModelId": {
            "type": "string",
            "description": "Target dataset ID"
          },
          "targetWorkspaceId": {
            "type": "string",
            "description": "Target workspace ID"
          }
        },
        "required": [
          "reportId",
          "name"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "export_report",
      "name": "Export Report",
      "description": "Export report to file",
      "parameters": {
        "type": "object",
        "properties": {
          "reportId": {
            "type": "string",
            "description": "Report ID"
          },
          "groupId": {
            "type": "string",
            "description": "Workspace ID (optional)"
          },
          "format": {
            "type": "string",
            "enum": [
              "PDF",
              "PNG",
              "PPTX",
              "XLSX",
              "XML",
              "CSV"
            ],
            "description": "Export format"
          },
          "pages": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "pageName": {
                  "type": "string"
                },
                "bookmark": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Specific pages to export"
          },
          "powerBIReportConfiguration": {
            "type": "object",
            "properties": {
              "settings": {
                "type": "object",
                "properties": {
                  "includeHiddenPages": {
                    "type": "boolean"
                  },
                  "locale": {
                    "type": "string"
                  }
                }
              },
              "identities": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string"
                    },
                    "datasets": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "description": "Export configuration"
          }
        },
        "required": [
          "reportId",
          "format"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "get_dashboards",
      "name": "Get Dashboards",
      "description": "Get list of dashboards",
      "parameters": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "description": "Workspace ID (optional)"
          },
          "$top": {
            "type": "number",
            "minimum": 1,
            "maximum": 5000,
            "description": "Number of dashboards to return"
          },
          "$skip": {
            "type": "number",
            "minimum": 0,
            "description": "Number of dashboards to skip"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "get_dashboard",
      "name": "Get Dashboard",
      "description": "Get dashboard details",
      "parameters": {
        "type": "object",
        "properties": {
          "dashboardId": {
            "type": "string",
            "description": "Dashboard ID"
          },
          "groupId": {
            "type": "string",
            "description": "Workspace ID (optional)"
          }
        },
        "required": [
          "dashboardId"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "get_tiles",
      "name": "Get Tiles",
      "description": "Get dashboard tiles",
      "parameters": {
        "type": "object",
        "properties": {
          "dashboardId": {
            "type": "string",
            "description": "Dashboard ID"
          },
          "groupId": {
            "type": "string",
            "description": "Workspace ID (optional)"
          }
        },
        "required": [
          "dashboardId"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "generate_token",
      "name": "Generate Embed Token",
      "description": "Generate embed token for reports/dashboards",
      "parameters": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "description": "Workspace ID (optional)"
          },
          "reports": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "allowEdit": {
                  "type": "boolean"
                }
              },
              "required": [
                "id"
              ]
            },
            "description": "Reports to include in token"
          },
          "datasets": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ]
            },
            "description": "Datasets to include in token"
          },
          "targetWorkspaces": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ]
            },
            "description": "Target workspaces"
          },
          "identities": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string"
                },
                "datasets": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "username"
              ]
            },
            "description": "Row-level security identities"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "execute_dax",
      "name": "Execute DAX Query",
      "description": "Execute DAX query against dataset",
      "parameters": {
        "type": "object",
        "properties": {
          "datasetId": {
            "type": "string",
            "description": "Dataset ID"
          },
          "groupId": {
            "type": "string",
            "description": "Workspace ID (optional)"
          },
          "query": {
            "type": "string",
            "description": "DAX query"
          },
          "serializerSettings": {
            "type": "object",
            "properties": {
              "includeNulls": {
                "type": "boolean"
              }
            },
            "description": "Serializer settings"
          },
          "impersonatedUserName": {
            "type": "string",
            "description": "Impersonated user name for RLS"
          }
        },
        "required": [
          "datasetId",
          "query"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "get_dataflows",
      "name": "Get Dataflows",
      "description": "Get list of dataflows",
      "parameters": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "description": "Workspace ID (optional)"
          },
          "$top": {
            "type": "number",
            "minimum": 1,
            "maximum": 5000,
            "description": "Number of dataflows to return"
          },
          "$skip": {
            "type": "number",
            "minimum": 0,
            "description": "Number of dataflows to skip"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "refresh_dataflow",
      "name": "Refresh Dataflow",
      "description": "Trigger dataflow refresh",
      "parameters": {
        "type": "object",
        "properties": {
          "dataflowId": {
            "type": "string",
            "description": "Dataflow ID"
          },
          "groupId": {
            "type": "string",
            "description": "Workspace ID (optional)"
          },
          "notifyOption": {
            "type": "string",
            "enum": [
              "MailOnCompletion",
              "MailOnFailure",
              "NoNotification"
            ],
            "default": "NoNotification",
            "description": "Notification option"
          }
        },
        "required": [
          "dataflowId"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    }
  ],
  "triggers": [
    {
      "id": "dataset_refreshed",
      "name": "Dataset Refreshed",
      "description": "Triggered when a dataset refresh completes",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "description": "Filter by workspace ID"
          },
          "datasetId": {
            "type": "string",
            "description": "Filter by dataset ID"
          },
          "refreshStatus": {
            "type": "string",
            "enum": [
              "Completed",
              "Failed",
              "Disabled"
            ],
            "description": "Filter by refresh status"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "datasetId": {
            "type": "string"
          },
          "datasetName": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "refreshId": {
            "type": "string"
          },
          "refreshType": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "serviceExceptionJson": {
            "type": "string"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "sample": {
        "success": true
      },
      "dedupe": {
        "strategy": "primaryKey",
        "primaryKey": "refreshId",
        "cursor": "endTime"
      }
    },
    {
      "id": "report_created",
      "name": "Report Created",
      "description": "Triggered when a new report is created",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "description": "Filter by workspace ID"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "reportId": {
            "type": "string"
          },
          "reportName": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "datasetId": {
            "type": "string"
          },
          "createdDateTime": {
            "type": "string"
          },
          "modifiedDateTime": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "sample": {
        "success": true
      },
      "dedupe": {
        "strategy": "primaryKey",
        "primaryKey": "reportId",
        "cursor": "createdDateTime"
      }
    },
    {
      "id": "dataflow_refreshed",
      "name": "Dataflow Refreshed",
      "description": "Triggered when a dataflow refresh completes",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "description": "Filter by workspace ID"
          },
          "dataflowId": {
            "type": "string",
            "description": "Filter by dataflow ID"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "dataflowId": {
            "type": "string"
          },
          "dataflowName": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "refreshId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "sample": {
        "success": true
      },
      "dedupe": {
        "strategy": "primaryKey",
        "primaryKey": "refreshId",
        "cursor": "endTime"
      }
    }
  ],
  "testConnection": {
    "method": "GET",
    "endpoint": "/groups"
  },
  "release": {
    "semver": "1.0.0",
    "status": "stable",
    "isBeta": false,
    "betaStartedAt": null,
    "deprecationWindow": {
      "startDate": null,
      "sunsetDate": null
    }
  },
  "schemaVersion": "1.0"
}
