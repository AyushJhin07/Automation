{
  "id": "netsuite",
  "name": "NetSuite",
  "description": "Oracle NetSuite cloud-based ERP and business management suite",
  "category": "ERP",
  "icon": "netsuite",
  "color": "#F80000",
  "version": "1.0.0",
  "authentication": {
    "type": "oauth2",
    "config": {
      "authUrl": "https://system.netsuite.com/app/login/oauth2/authorize.nl",
      "tokenUrl": "https://system.netsuite.com/app/login/oauth2/token.nl",
      "scopes": [
        "restlets",
        "rest_webservices"
      ]
    }
  },
  "baseUrl": "https://{account}.suitetalk.api.netsuite.com/services/rest",
  "actions": [
    {
      "id": "test_connection",
      "name": "Test Connection",
      "description": "Test the connection to NetSuite",
      "parameters": {
        "type": "object",
        "properties": {},
        "required": [],
        "additionalProperties": false
      }
    },
    {
      "id": "get_customers",
      "name": "Get Customers",
      "description": "Get list of customers",
      "parameters": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "minimum": 1,
            "maximum": 1000,
            "default": 100,
            "description": "Number of customers to return"
          },
          "offset": {
            "type": "number",
            "minimum": 0,
            "default": 0,
            "description": "Number of customers to skip"
          },
          "q": {
            "type": "string",
            "description": "Search query"
          }
        },
        "required": [],
        "additionalProperties": false
      }
    },
    {
      "id": "create_customer",
      "name": "Create Customer",
      "description": "Create a new customer",
      "parameters": {
        "type": "object",
        "properties": {
          "companyName": {
            "type": "string",
            "description": "Company name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address"
          },
          "phone": {
            "type": "string",
            "description": "Phone number"
          },
          "subsidiary": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            },
            "description": "Subsidiary reference"
          },
          "currency": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            },
            "description": "Currency reference"
          }
        },
        "required": [
          "companyName"
        ],
        "additionalProperties": false
      }
    },
    {
      "id": "get_items",
      "name": "Get Items",
      "description": "Get list of items",
      "parameters": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "minimum": 1,
            "maximum": 1000,
            "default": 100,
            "description": "Number of items to return"
          },
          "offset": {
            "type": "number",
            "minimum": 0,
            "default": 0,
            "description": "Number of items to skip"
          },
          "q": {
            "type": "string",
            "description": "Search query"
          }
        },
        "required": [],
        "additionalProperties": false
      }
    },
    {
      "id": "create_sales_order",
      "name": "Create Sales Order",
      "description": "Create a new sales order",
      "parameters": {
        "type": "object",
        "properties": {
          "entity": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            },
            "description": "Customer reference"
          },
          "tranDate": {
            "type": "string",
            "format": "date",
            "description": "Transaction date"
          },
          "item": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "item": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "quantity": {
                  "type": "number"
                },
                "rate": {
                  "type": "number"
                }
              }
            },
            "description": "Line items"
          }
        },
        "required": [
          "entity"
        ],
        "additionalProperties": false
      }
    },
    {
      "id": "get_invoices",
      "name": "Get Invoices",
      "description": "Get list of invoices",
      "parameters": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "minimum": 1,
            "maximum": 1000,
            "default": 100,
            "description": "Number of invoices to return"
          },
          "offset": {
            "type": "number",
            "minimum": 0,
            "default": 0,
            "description": "Number of invoices to skip"
          },
          "q": {
            "type": "string",
            "description": "Search query"
          }
        },
        "required": [],
        "additionalProperties": false
      }
    }
  ],
  "triggers": [
    {
      "id": "customer_created",
      "name": "Customer Created",
      "description": "Triggered when a new customer is created",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {},
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      }
    }
  ],
  "testConnection": {
    "method": "GET",
    "endpoint": "/record/v1/customer"
  },
  "versionInfo": {
    "semantic": "1.0.0",
    "releaseDate": null,
    "notes": "Initial release"
  },
  "lifecycle": {
    "status": "planning",
    "beta": {
      "enabled": false,
      "startDate": null,
      "endDate": null
    },
    "deprecation": {
      "startDate": null,
      "endDate": null
    },
    "sunsetDate": null
  }
}
