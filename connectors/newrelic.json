{
  "id": "newrelic",
  "name": "New Relic",
  "description": "New Relic application performance monitoring and observability platform",
  "category": "Monitoring",
  "icon": "newrelic",
  "color": "#008C99",
  "version": "1.0.0",
  "authentication": {
    "type": "api_key",
    "config": {
      "apiKeyLocation": "header",
      "apiKeyName": "X-Api-Key"
    }
  },
  "baseUrl": "https://api.newrelic.com/v2",
  "actions": [
    {
      "id": "test_connection",
      "name": "Test Connection",
      "description": "Test the connection to New Relic",
      "parameters": {
        "type": "object",
        "properties": {},
        "required": [],
        "additionalProperties": false
      }
    },
    {
      "id": "get_applications",
      "name": "Get Applications",
      "description": "Get list of applications",
      "parameters": {
        "type": "object",
        "properties": {
          "filter": {
            "type": "object",
            "properties": {
              "name": {"type": "string"},
              "host": {"type": "string"},
              "language": {"type": "string"},
              "ids": {"type": "array", "items": {"type": "number"}}
            },
            "description": "Filter criteria"
          },
          "page": {
            "type": "number",
            "minimum": 1,
            "description": "Page number"
          }
        },
        "required": [],
        "additionalProperties": false
      }
    },
    {
      "id": "get_application_metrics",
      "name": "Get Application Metrics", 
      "description": "Get metrics for an application",
      "parameters": {
        "type": "object",
        "properties": {
          "application_id": {
            "type": "number",
            "description": "Application ID"
          },
          "names": {
            "type": "array",
            "items": {"type": "string"},
            "description": "Metric names to retrieve"
          },
          "values": {
            "type": "array",
            "items": {"type": "string"},
            "description": "Metric values to retrieve"
          },
          "from": {
            "type": "string",
            "format": "date-time",
            "description": "Start time"
          },
          "to": {
            "type": "string",
            "format": "date-time",
            "description": "End time"
          },
          "period": {
            "type": "number",
            "description": "Period in seconds"
          }
        },
        "required": ["application_id"],
        "additionalProperties": false
      }
    },
    {
      "id": "get_alerts",
      "name": "Get Alerts",
      "description": "Get list of alert policies",
      "parameters": {
        "type": "object",
        "properties": {
          "filter": {
            "type": "object",
            "properties": {
              "name": {"type": "string"},
              "enabled": {"type": "boolean"},
              "ids": {"type": "array", "items": {"type": "number"}}
            },
            "description": "Filter criteria"
          },
          "page": {
            "type": "number",
            "minimum": 1,
            "description": "Page number"
          }
        },
        "required": [],
        "additionalProperties": false
      }
    },
    {
      "id": "create_alert_policy",
      "name": "Create Alert Policy",
      "description": "Create a new alert policy",
      "parameters": {
        "type": "object",
        "properties": {
          "policy": {
            "type": "object",
            "properties": {
              "name": {"type": "string"},
              "incident_preference": {"type": "string", "enum": ["PER_POLICY", "PER_CONDITION", "PER_CONDITION_AND_TARGET"]}
            },
            "required": ["name"],
            "description": "Alert policy details"
          }
        },
        "required": ["policy"],
        "additionalProperties": false
      }
    },
    {
      "id": "get_violations",
      "name": "Get Violations",
      "description": "Get list of violations",
      "parameters": {
        "type": "object",
        "properties": {
          "filter": {
            "type": "object",
            "properties": {
              "start_date": {"type": "string", "format": "date-time"},
              "end_date": {"type": "string", "format": "date-time"},
              "only_open": {"type": "boolean"}
            },
            "description": "Filter criteria"
          },
          "page": {
            "type": "number",
            "minimum": 1,
            "description": "Page number"
          }
        },
        "required": [],
        "additionalProperties": false
      }
    },
    {
      "id": "execute_nrql",
      "name": "Execute NRQL Query",
      "description": "Execute a NRQL query",
      "parameters": {
        "type": "object",
        "properties": {
          "nrql": {
            "type": "string",
            "description": "NRQL query string"
          },
          "timeout": {
            "type": "number",
            "minimum": 1,
            "maximum": 120,
            "default": 10,
            "description": "Query timeout in seconds"
          }
        },
        "required": ["nrql"],
        "additionalProperties": false
      }
    }
  ],
  "triggers": [
    {
      "id": "alert_triggered",
      "name": "Alert Triggered",
      "description": "Triggered when an alert condition is violated",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "policy_id": {
            "type": "number",
            "description": "Filter by policy ID"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "account_id": {"type": "number"},
          "policy_name": {"type": "string"},
          "condition_name": {"type": "string"},
          "incident_url": {"type": "string"},
          "severity": {"type": "string"}
        }
      }
    }
  ],
  "testConnection": {
    "method": "GET",
    "endpoint": "/applications.json"
  }
}