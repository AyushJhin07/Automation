{
  "id": "gmail",
  "name": "Gmail",
  "description": "Google Gmail email service for sending, receiving, and managing emails",
  "category": "Communication",
  "icon": "mail",
  "color": "#EA4335",
  "availability": "stable",
  "version": "1.0.0",
  "authentication": {
    "type": "oauth2",
    "config": {
      "authUrl": "https://accounts.google.com/o/oauth2/auth",
      "tokenUrl": "https://oauth2.googleapis.com/token",
      "scopes": [
        "https://www.googleapis.com/auth/gmail.readonly",
        "https://www.googleapis.com/auth/gmail.send",
        "https://www.googleapis.com/auth/gmail.compose",
        "https://www.googleapis.com/auth/gmail.modify",
        "openid",
        "email",
        "profile"
      ]
    }
  },
  "baseUrl": "https://www.googleapis.com/gmail/v1",
  "rateLimits": {
    "requestsPerSecond": 5,
    "requestsPerMinute": 250,
    "dailyLimit": 1000000000
  },
  "actions": [
    {
      "id": "test_connection",
      "name": "Test Connection",
      "description": "Test the connection to Gmail and verify authentication",
      "parameters": {
        "type": "object",
        "properties": {},
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          },
          "emailAddress": {
            "type": "string",
            "format": "email"
          },
          "messagesTotal": {
            "type": "integer"
          },
          "threadsTotal": {
            "type": "integer"
          },
          "historyId": {
            "type": "string"
          }
        },
        "required": [
          "success",
          "emailAddress"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "emailAddress": "user@example.com",
        "messagesTotal": 2531,
        "threadsTotal": 842,
        "historyId": "9876543210"
      },
      "runtimes": [
        "node",
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "send_email",
      "name": "Send Email",
      "description": "Send an email message",
      "parameters": {
        "type": "object",
        "properties": {
          "to": {
            "type": "string",
            "description": "Recipient email address"
          },
          "subject": {
            "type": "string",
            "description": "Email subject"
          },
          "body": {
            "type": "string",
            "description": "Email body content"
          },
          "cc": {
            "type": "string",
            "description": "CC email addresses (comma-separated)"
          },
          "bcc": {
            "type": "string",
            "description": "BCC email addresses (comma-separated)"
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "filename": {
                  "type": "string"
                },
                "content": {
                  "type": "string"
                }
              }
            },
            "description": "Email attachments"
          }
        },
        "required": [
          "to",
          "subject",
          "body"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "threadId": {
            "type": "string"
          },
          "labelIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "success",
          "id",
          "threadId"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "id": "188c9a8c5f7f1a2b",
        "threadId": "188c9a8c5f7f1a2b",
        "labelIds": [
          "SENT"
        ]
      },
      "runtimes": [
        "node",
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "search_emails",
      "name": "Search Emails",
      "description": "Search for emails matching specified criteria",
      "parameters": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "Gmail search query (e.g., 'from:example@gmail.com', 'is:unread')"
          },
          "maxResults": {
            "type": "number",
            "default": 10,
            "minimum": 1,
            "maximum": 500,
            "description": "Maximum number of emails to return"
          },
          "includeSpamTrash": {
            "type": "boolean",
            "default": false,
            "description": "Include emails from spam and trash"
          }
        },
        "required": [
          "query"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "threadId": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "threadId"
              ],
              "additionalProperties": true
            }
          },
          "nextPageToken": {
            "type": "string"
          },
          "resultSizeEstimate": {
            "type": "integer"
          }
        },
        "required": [
          "success",
          "messages",
          "resultSizeEstimate"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "messages": [
          {
            "id": "188c9a8c5f7f1a2b",
            "threadId": "188c9a8c5f7f1a2b"
          },
          {
            "id": "188c9a92df5361e7",
            "threadId": "188c9a92df5361e7"
          }
        ],
        "nextPageToken": "054321abc",
        "resultSizeEstimate": 25
      },
      "runtimes": [
        "node",
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "get_email",
      "name": "Get Email",
      "description": "Get details of a specific email by ID",
      "parameters": {
        "type": "object",
        "properties": {
          "messageId": {
            "type": "string",
            "description": "Gmail message ID"
          },
          "format": {
            "type": "string",
            "enum": [
              "minimal",
              "full",
              "raw",
              "metadata"
            ],
            "default": "full",
            "description": "Format of the email data to return"
          }
        },
        "required": [
          "messageId"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "threadId": {
            "type": "string"
          },
          "labelIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "snippet": {
            "type": "string"
          },
          "internalDate": {
            "type": "string",
            "description": "Epoch milliseconds as a string"
          },
          "payload": {
            "type": "object",
            "properties": {
              "mimeType": {
                "type": "string"
              },
              "sizeEstimate": {
                "type": "integer"
              },
              "headers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "value"
                  ],
                  "additionalProperties": true
                }
              }
            },
            "required": [
              "mimeType",
              "headers"
            ],
            "additionalProperties": true
          }
        },
        "required": [
          "success",
          "id",
          "threadId",
          "snippet"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "id": "188c9a8c5f7f1a2b",
        "threadId": "188c9a8c5f7f1a2b",
        "labelIds": [
          "INBOX",
          "UNREAD"
        ],
        "snippet": "Hi there, just checking in about the proposal...",
        "internalDate": "1733696400000",
        "payload": {
          "mimeType": "multipart/alternative",
          "sizeEstimate": 12456,
          "headers": [
            {
              "name": "Subject",
              "value": "Project Proposal"
            },
            {
              "name": "From",
              "value": "alex@example.com"
            },
            {
              "name": "To",
              "value": "user@example.com"
            }
          ]
        }
      },
      "runtimes": [
        "node",
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "send_reply",
      "name": "Send Reply",
      "description": "Reply to an existing email",
      "parameters": {
        "type": "object",
        "properties": {
          "messageId": {
            "type": "string",
            "description": "ID of the message to reply to"
          },
          "body": {
            "type": "string",
            "description": "Reply body content"
          },
          "replyAll": {
            "type": "boolean",
            "default": false,
            "description": "Whether to reply to all recipients"
          }
        },
        "required": [
          "messageId",
          "body"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "threadId": {
            "type": "string"
          },
          "labelIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "success",
          "id",
          "threadId"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "id": "188c9aa3450a91df",
        "threadId": "188c9a8c5f7f1a2b",
        "labelIds": [
          "SENT",
          "INBOX"
        ]
      },
      "runtimes": [
        "node",
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "mark_as_read",
      "name": "Mark as Read",
      "description": "Mark emails as read",
      "parameters": {
        "type": "object",
        "properties": {
          "messageIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of Gmail message IDs to mark as read"
          }
        },
        "required": [
          "messageIds"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "threadId": {
            "type": "string"
          },
          "labelIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "success",
          "id",
          "threadId",
          "labelIds"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "id": "188c9a8c5f7f1a2b",
        "threadId": "188c9a8c5f7f1a2b",
        "labelIds": [
          "INBOX",
          "STARRED"
        ]
      },
      "runtimes": [
        "node",
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "add_label",
      "name": "Add Label",
      "description": "Add labels to emails",
      "parameters": {
        "type": "object",
        "properties": {
          "messageIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of Gmail message IDs"
          },
          "labelIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of label IDs to add"
          }
        },
        "required": [
          "messageIds",
          "labelIds"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "threadId": {
            "type": "string"
          },
          "labelIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "success",
          "id",
          "threadId",
          "labelIds"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "id": "188c9a8c5f7f1a2b",
        "threadId": "188c9a8c5f7f1a2b",
        "labelIds": [
          "INBOX",
          "IMPORTANT",
          "Label_123"
        ]
      },
      "runtimes": [
        "node",
        "appsScript"
      ],
      "fallback": null
    }
  ],
  "triggers": [
    {
      "id": "new_email_received",
      "name": "New Email Received",
      "description": "Triggered when a new email is received",
      "parameters": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "Gmail query to filter emails (e.g., 'from:example@gmail.com', 'has:attachment')",
            "default": "is:unread"
          },
          "labelIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Filter by specific label IDs"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique Gmail message identifier"
          },
          "threadId": {
            "type": "string",
            "description": "Thread identifier for the conversation"
          },
          "historyId": {
            "type": "string",
            "description": "History record identifier for incremental sync"
          },
          "labelIds": {
            "type": "array",
            "description": "Labels currently applied to the message",
            "items": {
              "type": "string"
            }
          },
          "subject": {
            "type": [
              "string",
              "null"
            ],
            "description": "Message subject extracted from headers"
          },
          "snippet": {
            "type": "string",
            "description": "First 100 characters of the message body"
          },
          "from": {
            "type": "string",
            "format": "email",
            "description": "Sender email address"
          },
          "fromName": {
            "type": [
              "string",
              "null"
            ],
            "description": "Display name parsed from the From header"
          },
          "to": {
            "type": "array",
            "description": "Primary recipient email addresses",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "cc": {
            "type": "array",
            "description": "Carbon-copy recipient email addresses",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "bcc": {
            "type": "array",
            "description": "Blind carbon-copy recipient email addresses",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "replyTo": {
            "type": "array",
            "description": "Reply-To email addresses if provided",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "deliveredTo": {
            "type": [
              "string",
              "null"
            ],
            "format": "email",
            "description": "Mailbox that received the message"
          },
          "receivedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp the message was delivered"
          },
          "sizeEstimate": {
            "type": "integer",
            "description": "Approximate size of the entire message in bytes"
          },
          "bodyPlain": {
            "type": [
              "string",
              "null"
            ],
            "description": "Plain-text body content"
          },
          "bodyHtml": {
            "type": [
              "string",
              "null"
            ],
            "description": "HTML body content"
          },
          "attachments": {
            "type": "array",
            "description": "Attachment metadata included with the message",
            "items": {
              "type": "object",
              "properties": {
                "attachmentId": {
                  "type": "string",
                  "description": "Identifier used to download the attachment"
                },
                "filename": {
                  "type": "string",
                  "description": "Attachment file name"
                },
                "mimeType": {
                  "type": "string",
                  "description": "Attachment MIME type"
                },
                "size": {
                  "type": "integer",
                  "description": "Attachment size in bytes"
                }
              },
              "required": [
                "attachmentId",
                "filename",
                "mimeType"
              ],
              "additionalProperties": false
            }
          },
          "threadSnippet": {
            "type": [
              "string",
              "null"
            ],
            "description": "Snippet from the most recent message in the thread"
          },
          "_meta": {
            "type": "object",
            "description": "Connector metadata including the raw Gmail API payload",
            "properties": {
              "raw": {
                "type": "object",
                "description": "Raw Gmail message resource as returned by the API",
                "additionalProperties": true
              }
            },
            "additionalProperties": true
          }
        },
        "required": [
          "id",
          "threadId",
          "labelIds",
          "snippet",
          "receivedAt"
        ],
        "additionalProperties": false
      },
      "sample": {
        "id": "1890f0ae5e3c1b3d",
        "threadId": "1890f0ae5e3c1b3d",
        "historyId": "156789",
        "labelIds": [
          "INBOX",
          "UNREAD"
        ],
        "subject": "Quarterly metrics overview",
        "snippet": "Hi team, sharing the Q4 KPIs summary for review...",
        "from": "analytics-bot@example.com",
        "fromName": "Analytics Bot",
        "to": [
          "ops-lead@example.com"
        ],
        "cc": [
          "finance@example.com"
        ],
        "bcc": [],
        "replyTo": [
          "analytics-bot@example.com"
        ],
        "deliveredTo": "ops-lead@example.com",
        "receivedAt": "2024-12-09T17:22:14Z",
        "sizeEstimate": 25439,
        "bodyPlain": "Hi team,\nPlease find the attached metrics deck.\nThanks!",
        "bodyHtml": "<p>Hi team,</p><p>Please find the attached metrics deck.</p>",
        "attachments": [
          {
            "attachmentId": "ANGjdJ8slA1",
            "filename": "q4-metrics.xlsx",
            "mimeType": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
            "size": 18234
          }
        ],
        "threadSnippet": "Latest reply: Looks great\u2014publishing to the board workspace shortly.",
        "_meta": {
          "raw": {
            "id": "1890f0ae5e3c1b3d",
            "threadId": "1890f0ae5e3c1b3d",
            "historyId": "156789",
            "labelIds": [
              "INBOX",
              "UNREAD"
            ],
            "payload": {
              "mimeType": "multipart/alternative",
              "headers": [
                {
                  "name": "Date",
                  "value": "Mon, 9 Dec 2024 09:22:14 -0800"
                },
                {
                  "name": "Message-ID",
                  "value": "<CAEPk12345@example.com>"
                }
              ]
            }
          }
        }
      },
      "dedupe": {
        "strategy": "primaryKey",
        "primaryKey": "id",
        "cursor": "receivedAt"
      },
      "dedupeKey": "id",
      "runtimes": [
        "node",
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "email_received_from",
      "name": "Email Received From",
      "description": "Triggered when an email is received from a specific sender",
      "parameters": {
        "type": "object",
        "properties": {
          "fromEmail": {
            "type": "string",
            "description": "Email address to monitor for incoming emails"
          },
          "subject": {
            "type": "string",
            "description": "Optional subject filter"
          }
        },
        "required": [
          "fromEmail"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique Gmail message identifier"
          },
          "threadId": {
            "type": "string",
            "description": "Conversation thread identifier"
          },
          "historyId": {
            "type": "string",
            "description": "History record identifier"
          },
          "labelIds": {
            "type": "array",
            "description": "Labels applied to the message",
            "items": {
              "type": "string"
            }
          },
          "subject": {
            "type": [
              "string",
              "null"
            ],
            "description": "Message subject"
          },
          "snippet": {
            "type": "string",
            "description": "First 100 characters of the body"
          },
          "from": {
            "type": "string",
            "format": "email",
            "description": "Sender email address"
          },
          "fromName": {
            "type": [
              "string",
              "null"
            ],
            "description": "Display name parsed from the From header"
          },
          "to": {
            "type": "array",
            "description": "Primary recipient addresses",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "cc": {
            "type": "array",
            "description": "Carbon-copy recipients",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "bcc": {
            "type": "array",
            "description": "Blind carbon-copy recipients",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "replyTo": {
            "type": "array",
            "description": "Reply-To addresses",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "deliveredTo": {
            "type": [
              "string",
              "null"
            ],
            "format": "email",
            "description": "Inbox that received the message"
          },
          "receivedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Delivery timestamp"
          },
          "sizeEstimate": {
            "type": "integer",
            "description": "Approximate message size in bytes"
          },
          "bodyPlain": {
            "type": [
              "string",
              "null"
            ],
            "description": "Plain text message body"
          },
          "bodyHtml": {
            "type": [
              "string",
              "null"
            ],
            "description": "HTML message body"
          },
          "attachments": {
            "type": "array",
            "description": "Attachments included in the message",
            "items": {
              "type": "object",
              "properties": {
                "attachmentId": {
                  "type": "string",
                  "description": "Identifier to download the attachment"
                },
                "filename": {
                  "type": "string",
                  "description": "Attachment file name"
                },
                "mimeType": {
                  "type": "string",
                  "description": "Attachment MIME type"
                },
                "size": {
                  "type": "integer",
                  "description": "Attachment size in bytes"
                }
              },
              "required": [
                "attachmentId",
                "filename",
                "mimeType"
              ],
              "additionalProperties": false
            }
          },
          "_meta": {
            "type": "object",
            "description": "Connector metadata including the raw Gmail API payload",
            "properties": {
              "raw": {
                "type": "object",
                "description": "Raw Gmail message resource",
                "additionalProperties": true
              }
            },
            "additionalProperties": true
          }
        },
        "required": [
          "id",
          "threadId",
          "labelIds",
          "snippet",
          "receivedAt"
        ],
        "additionalProperties": false
      },
      "sample": {
        "id": "1890f1c52d0ab8f2",
        "threadId": "1890f1c52d0ab8f2",
        "historyId": "156793",
        "labelIds": [
          "INBOX",
          "IMPORTANT"
        ],
        "subject": "Signed agreement received",
        "snippet": "Great news\u2014we have the countersigned agreement attached.",
        "from": "chief.partnerships@example.com",
        "fromName": "Chief Partnerships",
        "to": [
          "legal-ops@example.com"
        ],
        "cc": [
          "sales-lead@example.com"
        ],
        "bcc": [],
        "replyTo": [
          "chief.partnerships@example.com"
        ],
        "deliveredTo": "legal-ops@example.com",
        "receivedAt": "2024-12-09T15:24:05Z",
        "sizeEstimate": 19872,
        "bodyPlain": "Hi team,\nAttached is the executed agreement.\nRegards",
        "bodyHtml": "<p>Hi team,</p><p>Attached is the executed agreement.</p>",
        "attachments": [
          {
            "attachmentId": "ANGjdJ8uBy0",
            "filename": "agreement.pdf",
            "mimeType": "application/pdf",
            "size": 14532
          }
        ],
        "_meta": {
          "raw": {
            "id": "1890f1c52d0ab8f2",
            "threadId": "1890f1c52d0ab8f2",
            "historyId": "156793",
            "labelIds": [
              "INBOX",
              "IMPORTANT"
            ],
            "payload": {
              "mimeType": "multipart/mixed",
              "headers": [
                {
                  "name": "Date",
                  "value": "Mon, 9 Dec 2024 07:24:05 -0800"
                },
                {
                  "name": "Message-ID",
                  "value": "<CAD+ReceivedFrom@example.com>"
                }
              ]
            }
          }
        }
      },
      "dedupe": {
        "strategy": "primaryKey",
        "primaryKey": "id",
        "cursor": "receivedAt"
      },
      "dedupeKey": "id",
      "runtimes": [
        "node",
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "email_with_attachment",
      "name": "Email with Attachment",
      "description": "Triggered when an email with attachments is received",
      "parameters": {
        "type": "object",
        "properties": {
          "fileTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Filter by specific file types (e.g., ['pdf', 'xlsx'])"
          },
          "fromEmail": {
            "type": "string",
            "description": "Optional sender filter"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique Gmail message identifier"
          },
          "threadId": {
            "type": "string",
            "description": "Conversation thread identifier"
          },
          "historyId": {
            "type": "string",
            "description": "History record identifier"
          },
          "labelIds": {
            "type": "array",
            "description": "Labels applied to the message",
            "items": {
              "type": "string"
            }
          },
          "subject": {
            "type": [
              "string",
              "null"
            ],
            "description": "Message subject"
          },
          "snippet": {
            "type": "string",
            "description": "First 100 characters of the body"
          },
          "from": {
            "type": "string",
            "format": "email",
            "description": "Sender email address"
          },
          "fromName": {
            "type": [
              "string",
              "null"
            ],
            "description": "Display name parsed from the From header"
          },
          "to": {
            "type": "array",
            "description": "Primary recipient addresses",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "cc": {
            "type": "array",
            "description": "Carbon-copy recipients",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "bcc": {
            "type": "array",
            "description": "Blind carbon-copy recipients",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "replyTo": {
            "type": "array",
            "description": "Reply-To addresses",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "deliveredTo": {
            "type": [
              "string",
              "null"
            ],
            "format": "email",
            "description": "Inbox that received the message"
          },
          "receivedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Delivery timestamp"
          },
          "sizeEstimate": {
            "type": "integer",
            "description": "Approximate message size in bytes"
          },
          "bodyPlain": {
            "type": [
              "string",
              "null"
            ],
            "description": "Plain text message body"
          },
          "bodyHtml": {
            "type": [
              "string",
              "null"
            ],
            "description": "HTML message body"
          },
          "attachments": {
            "type": "array",
            "description": "Attachments included in the message",
            "items": {
              "type": "object",
              "properties": {
                "attachmentId": {
                  "type": "string",
                  "description": "Identifier to download the attachment"
                },
                "filename": {
                  "type": "string",
                  "description": "Attachment file name"
                },
                "mimeType": {
                  "type": "string",
                  "description": "Attachment MIME type"
                },
                "size": {
                  "type": "integer",
                  "description": "Attachment size in bytes"
                }
              },
              "required": [
                "attachmentId",
                "filename",
                "mimeType"
              ],
              "additionalProperties": false
            }
          },
          "_meta": {
            "type": "object",
            "description": "Connector metadata including the raw Gmail API payload",
            "properties": {
              "raw": {
                "type": "object",
                "description": "Raw Gmail message resource",
                "additionalProperties": true
              }
            },
            "additionalProperties": true
          }
        },
        "required": [
          "id",
          "threadId",
          "labelIds",
          "receivedAt",
          "attachments"
        ],
        "additionalProperties": false
      },
      "sample": {
        "id": "1890f230fa8de4c1",
        "threadId": "1890f230fa8de4c1",
        "historyId": "156812",
        "labelIds": [
          "INBOX"
        ],
        "subject": "Project kickoff brief",
        "snippet": "Attached is the design brief for the upcoming sprint.",
        "from": "design-team@example.com",
        "fromName": "Design Team",
        "to": [
          "product@example.com"
        ],
        "cc": [
          "engineering@example.com"
        ],
        "bcc": [],
        "replyTo": [
          "design-team@example.com"
        ],
        "deliveredTo": "product@example.com",
        "receivedAt": "2024-12-09T13:02:48Z",
        "sizeEstimate": 31240,
        "bodyPlain": "Team,\nSharing the kickoff brief for review.\n",
        "bodyHtml": "<p>Team,</p><p>Sharing the kickoff brief for review.</p>",
        "attachments": [
          {
            "attachmentId": "ANGjdJ8yBrief",
            "filename": "design-brief.pdf",
            "mimeType": "application/pdf",
            "size": 24567
          }
        ],
        "_meta": {
          "raw": {
            "id": "1890f230fa8de4c1",
            "threadId": "1890f230fa8de4c1",
            "historyId": "156812",
            "labelIds": [
              "INBOX"
            ],
            "payload": {
              "mimeType": "multipart/mixed",
              "headers": [
                {
                  "name": "Date",
                  "value": "Mon, 9 Dec 2024 05:02:48 -0800"
                },
                {
                  "name": "Message-ID",
                  "value": "<CAD+Attachment@example.com>"
                }
              ]
            }
          }
        }
      },
      "dedupe": {
        "strategy": "primaryKey",
        "primaryKey": "id",
        "cursor": "receivedAt"
      },
      "dedupeKey": "id",
      "runtimes": [
        "node",
        "appsScript"
      ],
      "fallback": null
    }
  ],
  "release": {
    "semver": "1.0.0",
    "status": "stable",
    "isBeta": false,
    "betaStartedAt": null,
    "deprecationWindow": {
      "startDate": null,
      "sunsetDate": null
    }
  },
  "schemaVersion": "1.0"
}
