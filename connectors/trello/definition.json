{
  "id": "trello",
  "name": "Trello",
  "description": "Visual collaboration tool for organizing projects and tasks with boards, lists, and cards",
  "category": "Project Management",
  "icon": "trello",
  "color": "#0079BF",
  "version": "1.0.0",
  "authentication": {
    "type": "api_key",
    "config": {
      "apiKeyLocation": "query",
      "apiKeyName": "key",
      "additionalParams": {
        "token": "{token}"
      }
    }
  },
  "baseUrl": "https://api.trello.com/1",
  "actions": [
    {
      "id": "test_connection",
      "name": "Test Connection",
      "description": "Test the connection to Trello",
      "parameters": {
        "type": "object",
        "properties": {},
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "create_board",
      "name": "Create Board",
      "description": "Create a new board",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Board name"
          },
          "desc": {
            "type": "string",
            "description": "Board description"
          },
          "idOrganization": {
            "type": "string",
            "description": "Organization ID"
          },
          "idBoardSource": {
            "type": "string",
            "description": "ID of board to copy from"
          },
          "keepFromSource": {
            "type": "string",
            "description": "Components to copy from source board"
          },
          "powerUps": {
            "type": "string",
            "description": "Power-ups to enable"
          },
          "prefs_permissionLevel": {
            "type": "string",
            "enum": [
              "private",
              "org",
              "public"
            ],
            "default": "private",
            "description": "Permission level"
          },
          "prefs_voting": {
            "type": "string",
            "enum": [
              "disabled",
              "members",
              "observers",
              "org",
              "public"
            ],
            "default": "disabled",
            "description": "Voting permission"
          },
          "prefs_comments": {
            "type": "string",
            "enum": [
              "disabled",
              "members",
              "observers",
              "org",
              "public"
            ],
            "default": "members",
            "description": "Comment permission"
          },
          "prefs_invitations": {
            "type": "string",
            "enum": [
              "members",
              "admins"
            ],
            "default": "members",
            "description": "Invitation permission"
          },
          "prefs_selfJoin": {
            "type": "boolean",
            "default": true,
            "description": "Whether users can join themselves"
          },
          "prefs_cardCovers": {
            "type": "boolean",
            "default": true,
            "description": "Whether to show card covers"
          },
          "prefs_background": {
            "type": "string",
            "description": "Background color or image"
          },
          "prefs_cardAging": {
            "type": "string",
            "enum": [
              "pirate",
              "regular"
            ],
            "default": "regular",
            "description": "Card aging style"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "get_board",
      "name": "Get Board",
      "description": "Get board details",
      "endpoint": "/boards/{id}",
      "method": "GET",
      "parameters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Board ID"
          },
          "fields": {
            "type": "string",
            "description": "Comma-separated list of fields to return"
          },
          "actions": {
            "type": "string",
            "description": "Which actions to include"
          },
          "actions_entities": {
            "type": "boolean",
            "description": "Whether to include action entities"
          },
          "actions_display": {
            "type": "boolean",
            "description": "Whether to include action display information"
          },
          "actions_format": {
            "type": "string",
            "enum": [
              "count",
              "list",
              "minimal"
            ],
            "description": "Format for actions"
          },
          "actions_since": {
            "type": "string",
            "description": "Date to filter actions since"
          },
          "actions_limit": {
            "type": "number",
            "minimum": 1,
            "maximum": 1000,
            "default": 50,
            "description": "Limit for actions"
          },
          "action_fields": {
            "type": "string",
            "description": "Fields to include for actions"
          },
          "action_member": {
            "type": "boolean",
            "description": "Whether to include action member"
          },
          "action_member_fields": {
            "type": "string",
            "description": "Fields to include for action members"
          },
          "action_memberCreator": {
            "type": "boolean",
            "description": "Whether to include action member creator"
          },
          "action_memberCreator_fields": {
            "type": "string",
            "description": "Fields to include for action member creators"
          },
          "cards": {
            "type": "string",
            "enum": [
              "none",
              "visible",
              "open",
              "closed",
              "all"
            ],
            "default": "none",
            "description": "Which cards to include"
          },
          "card_fields": {
            "type": "string",
            "description": "Fields to include for cards"
          },
          "card_attachments": {
            "type": "boolean",
            "description": "Whether to include card attachments"
          },
          "card_attachment_fields": {
            "type": "string",
            "description": "Fields to include for card attachments"
          },
          "card_checklists": {
            "type": "string",
            "description": "Which checklists to include for cards"
          },
          "card_stickers": {
            "type": "boolean",
            "description": "Whether to include card stickers"
          },
          "boardStars": {
            "type": "string",
            "description": "Which board stars to include"
          },
          "labels": {
            "type": "string",
            "enum": [
              "none",
              "all"
            ],
            "default": "none",
            "description": "Which labels to include"
          },
          "label_fields": {
            "type": "string",
            "description": "Fields to include for labels"
          },
          "labels_limit": {
            "type": "number",
            "description": "Limit for labels"
          },
          "lists": {
            "type": "string",
            "enum": [
              "none",
              "open",
              "closed",
              "all"
            ],
            "default": "none",
            "description": "Which lists to include"
          },
          "list_fields": {
            "type": "string",
            "description": "Fields to include for lists"
          },
          "memberships": {
            "type": "string",
            "enum": [
              "none",
              "active",
              "admin",
              "deactivated",
              "me",
              "normal"
            ],
            "default": "none",
            "description": "Which memberships to include"
          },
          "memberships_member": {
            "type": "boolean",
            "description": "Whether to include membership members"
          },
          "memberships_member_fields": {
            "type": "string",
            "description": "Fields to include for membership members"
          },
          "members": {
            "type": "string",
            "enum": [
              "none",
              "active",
              "admin",
              "deactivated",
              "me",
              "normal"
            ],
            "default": "none",
            "description": "Which members to include"
          },
          "member_fields": {
            "type": "string",
            "description": "Fields to include for members"
          },
          "membersInvited": {
            "type": "string",
            "enum": [
              "none",
              "active",
              "admin",
              "deactivated",
              "me",
              "normal"
            ],
            "default": "none",
            "description": "Which invited members to include"
          },
          "membersInvited_fields": {
            "type": "string",
            "description": "Fields to include for invited members"
          },
          "checklists": {
            "type": "string",
            "enum": [
              "none",
              "all"
            ],
            "default": "none",
            "description": "Which checklists to include"
          },
          "checklist_fields": {
            "type": "string",
            "description": "Fields to include for checklists"
          },
          "organization": {
            "type": "boolean",
            "description": "Whether to include organization"
          },
          "organization_fields": {
            "type": "string",
            "description": "Fields to include for organization"
          },
          "organization_memberships": {
            "type": "string",
            "description": "Which organization memberships to include"
          },
          "myPrefs": {
            "type": "boolean",
            "description": "Whether to include user preferences"
          },
          "tags": {
            "type": "boolean",
            "description": "Whether to include tags"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "update_board",
      "name": "Update Board",
      "description": "Update board details",
      "parameters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Board ID"
          },
          "name": {
            "type": "string",
            "description": "Board name"
          },
          "desc": {
            "type": "string",
            "description": "Board description"
          },
          "closed": {
            "type": "boolean",
            "description": "Whether the board is closed"
          },
          "subscribed": {
            "type": "boolean",
            "description": "Whether the user is subscribed to the board"
          },
          "idOrganization": {
            "type": "string",
            "description": "Organization ID"
          },
          "prefs/permissionLevel": {
            "type": "string",
            "enum": [
              "private",
              "org",
              "public"
            ],
            "description": "Permission level"
          },
          "prefs/selfJoin": {
            "type": "boolean",
            "description": "Whether users can join themselves"
          },
          "prefs/cardCovers": {
            "type": "boolean",
            "description": "Whether to show card covers"
          },
          "prefs/invitations": {
            "type": "string",
            "enum": [
              "members",
              "admins"
            ],
            "description": "Invitation permission"
          },
          "prefs/voting": {
            "type": "string",
            "enum": [
              "disabled",
              "members",
              "observers",
              "org",
              "public"
            ],
            "description": "Voting permission"
          },
          "prefs/comments": {
            "type": "string",
            "enum": [
              "disabled",
              "members",
              "observers",
              "org",
              "public"
            ],
            "description": "Comment permission"
          },
          "prefs/background": {
            "type": "string",
            "description": "Background color or image"
          },
          "prefs/cardAging": {
            "type": "string",
            "enum": [
              "pirate",
              "regular"
            ],
            "description": "Card aging style"
          },
          "prefs/calendarFeedEnabled": {
            "type": "boolean",
            "description": "Whether calendar feed is enabled"
          },
          "labelNames/green": {
            "type": "string",
            "description": "Green label name"
          },
          "labelNames/yellow": {
            "type": "string",
            "description": "Yellow label name"
          },
          "labelNames/orange": {
            "type": "string",
            "description": "Orange label name"
          },
          "labelNames/red": {
            "type": "string",
            "description": "Red label name"
          },
          "labelNames/purple": {
            "type": "string",
            "description": "Purple label name"
          },
          "labelNames/blue": {
            "type": "string",
            "description": "Blue label name"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "create_list",
      "name": "Create List",
      "description": "Create a new list on a board",
      "endpoint": "/lists",
      "method": "POST",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "List name"
          },
          "idBoard": {
            "type": "string",
            "description": "Board ID"
          },
          "idListSource": {
            "type": "string",
            "description": "ID of list to copy from"
          },
          "pos": {
            "type": "string",
            "description": "Position of the list (top, bottom, or positive number)"
          }
        },
        "required": [
          "name",
          "idBoard"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "get_list",
      "name": "Get List",
      "description": "Get list details",
      "endpoint": "/lists/{id}",
      "method": "GET",
      "parameters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "update_list",
      "name": "Update List",
      "description": "Update list details",
      "endpoint": "/lists/{id}",
      "method": "PUT",
      "parameters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "create_card",
      "name": "Create Card",
      "description": "Create a new card",
      "endpoint": "/cards",
      "method": "POST",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "idList": {
            "type": "string"
          },
          "desc": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "idList"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "get_card",
      "name": "Get Card",
      "description": "Get card details",
      "endpoint": "/cards/{id}",
      "method": "GET",
      "parameters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "update_card",
      "name": "Update Card",
      "description": "Update card",
      "endpoint": "/cards/{id}",
      "method": "PUT",
      "parameters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "desc": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "add_comment_to_card",
      "name": "Add Comment To Card",
      "description": "Add a comment to a card",
      "endpoint": "/cards/{id}/actions/comments",
      "method": "POST",
      "parameters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "text": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "text"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "create_webhook",
      "name": "Create Webhook",
      "description": "Create a Trello webhook",
      "endpoint": "/webhooks",
      "method": "POST",
      "parameters": {
        "type": "object",
        "properties": {
          "callbackURL": {
            "type": "string"
          },
          "idModel": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "callbackURL",
          "idModel"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "get_list",
      "name": "Get List",
      "description": "Get list details",
      "parameters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "List ID"
          },
          "fields": {
            "type": "string",
            "description": "Comma-separated list of fields to return"
          },
          "cards": {
            "type": "string",
            "enum": [
              "none",
              "open",
              "closed",
              "all"
            ],
            "default": "none",
            "description": "Which cards to include"
          },
          "card_fields": {
            "type": "string",
            "description": "Fields to include for cards"
          },
          "board": {
            "type": "boolean",
            "description": "Whether to include board"
          },
          "board_fields": {
            "type": "string",
            "description": "Fields to include for board"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "update_list",
      "name": "Update List",
      "description": "Update list details",
      "parameters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "List ID"
          },
          "name": {
            "type": "string",
            "description": "List name"
          },
          "closed": {
            "type": "boolean",
            "description": "Whether the list is closed"
          },
          "idBoard": {
            "type": "string",
            "description": "Board ID to move list to"
          },
          "pos": {
            "type": "string",
            "description": "Position of the list"
          },
          "subscribed": {
            "type": "boolean",
            "description": "Whether the user is subscribed to the list"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "create_card",
      "name": "Create Card",
      "description": "Create a new card",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Card name"
          },
          "desc": {
            "type": "string",
            "description": "Card description"
          },
          "pos": {
            "type": "string",
            "description": "Position of the card (top, bottom, or positive number)"
          },
          "due": {
            "type": "string",
            "format": "date-time",
            "description": "Due date (ISO 8601 format)"
          },
          "dueComplete": {
            "type": "boolean",
            "description": "Whether the due date is complete"
          },
          "idList": {
            "type": "string",
            "description": "List ID"
          },
          "idMembers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of member IDs"
          },
          "idLabels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of label IDs"
          },
          "urlSource": {
            "type": "string",
            "description": "URL source for the card"
          },
          "fileSource": {
            "type": "string",
            "description": "File source for the card"
          },
          "idCardSource": {
            "type": "string",
            "description": "ID of card to copy from"
          },
          "keepFromSource": {
            "type": "string",
            "description": "Components to copy from source card"
          },
          "address": {
            "type": "string",
            "description": "Address for location"
          },
          "locationName": {
            "type": "string",
            "description": "Location name"
          },
          "coordinates": {
            "type": "string",
            "description": "GPS coordinates"
          }
        },
        "required": [
          "name",
          "idList"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "get_card",
      "name": "Get Card",
      "description": "Get card details",
      "parameters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Card ID"
          },
          "fields": {
            "type": "string",
            "description": "Comma-separated list of fields to return"
          },
          "actions": {
            "type": "string",
            "description": "Which actions to include"
          },
          "actions_entities": {
            "type": "boolean",
            "description": "Whether to include action entities"
          },
          "actions_display": {
            "type": "boolean",
            "description": "Whether to include action display information"
          },
          "actions_limit": {
            "type": "number",
            "minimum": 1,
            "maximum": 1000,
            "default": 50,
            "description": "Limit for actions"
          },
          "action_fields": {
            "type": "string",
            "description": "Fields to include for actions"
          },
          "action_memberCreator_fields": {
            "type": "string",
            "description": "Fields to include for action member creators"
          },
          "attachments": {
            "type": "boolean",
            "description": "Whether to include attachments"
          },
          "attachment_fields": {
            "type": "string",
            "description": "Fields to include for attachments"
          },
          "members": {
            "type": "boolean",
            "description": "Whether to include members"
          },
          "member_fields": {
            "type": "string",
            "description": "Fields to include for members"
          },
          "membersVoted": {
            "type": "boolean",
            "description": "Whether to include members who voted"
          },
          "memberVoted_fields": {
            "type": "string",
            "description": "Fields to include for voting members"
          },
          "checkItemStates": {
            "type": "boolean",
            "description": "Whether to include check item states"
          },
          "checklists": {
            "type": "string",
            "enum": [
              "none",
              "all"
            ],
            "default": "none",
            "description": "Which checklists to include"
          },
          "checklist_fields": {
            "type": "string",
            "description": "Fields to include for checklists"
          },
          "board": {
            "type": "boolean",
            "description": "Whether to include board"
          },
          "board_fields": {
            "type": "string",
            "description": "Fields to include for board"
          },
          "list": {
            "type": "boolean",
            "description": "Whether to include list"
          },
          "pluginData": {
            "type": "boolean",
            "description": "Whether to include plugin data"
          },
          "stickers": {
            "type": "boolean",
            "description": "Whether to include stickers"
          },
          "sticker_fields": {
            "type": "string",
            "description": "Fields to include for stickers"
          },
          "customFieldItems": {
            "type": "boolean",
            "description": "Whether to include custom field items"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "update_card",
      "name": "Update Card",
      "description": "Update card details",
      "parameters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Card ID"
          },
          "name": {
            "type": "string",
            "description": "Card name"
          },
          "desc": {
            "type": "string",
            "description": "Card description"
          },
          "closed": {
            "type": "boolean",
            "description": "Whether the card is closed"
          },
          "idMembers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of member IDs"
          },
          "idAttachmentCover": {
            "type": "string",
            "description": "ID of attachment to use as cover"
          },
          "idList": {
            "type": "string",
            "description": "List ID to move card to"
          },
          "idLabels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of label IDs"
          },
          "idBoard": {
            "type": "string",
            "description": "Board ID to move card to"
          },
          "pos": {
            "type": "string",
            "description": "Position of the card"
          },
          "due": {
            "type": "string",
            "format": "date-time",
            "description": "Due date (ISO 8601 format)"
          },
          "dueComplete": {
            "type": "boolean",
            "description": "Whether the due date is complete"
          },
          "subscribed": {
            "type": "boolean",
            "description": "Whether the user is subscribed to the card"
          },
          "address": {
            "type": "string",
            "description": "Address for location"
          },
          "locationName": {
            "type": "string",
            "description": "Location name"
          },
          "coordinates": {
            "type": "string",
            "description": "GPS coordinates"
          },
          "cover": {
            "type": "object",
            "description": "Cover settings"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "add_comment_to_card",
      "name": "Add Comment to Card",
      "description": "Add a comment to a card",
      "parameters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Card ID"
          },
          "text": {
            "type": "string",
            "description": "Comment text"
          }
        },
        "required": [
          "id",
          "text"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "create_checklist",
      "name": "Create Checklist",
      "description": "Create a new checklist on a card",
      "parameters": {
        "type": "object",
        "properties": {
          "idCard": {
            "type": "string",
            "description": "Card ID"
          },
          "name": {
            "type": "string",
            "description": "Checklist name"
          },
          "idChecklistSource": {
            "type": "string",
            "description": "ID of checklist to copy from"
          },
          "pos": {
            "type": "string",
            "description": "Position of the checklist"
          }
        },
        "required": [
          "idCard",
          "name"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "add_checklist_item",
      "name": "Add Checklist Item",
      "description": "Add an item to a checklist",
      "parameters": {
        "type": "object",
        "properties": {
          "idChecklist": {
            "type": "string",
            "description": "Checklist ID"
          },
          "name": {
            "type": "string",
            "description": "Item name"
          },
          "pos": {
            "type": "string",
            "description": "Position of the item"
          },
          "checked": {
            "type": "boolean",
            "default": false,
            "description": "Whether the item is checked"
          },
          "due": {
            "type": "string",
            "format": "date-time",
            "description": "Due date for the item"
          },
          "idMember": {
            "type": "string",
            "description": "Member ID to assign to the item"
          }
        },
        "required": [
          "idChecklist",
          "name"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    }
  ],
  "triggers": [
    {
      "id": "card_created",
      "name": "Card Created",
      "description": "Triggered when a new card is created",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "idBoard": {
            "type": "string",
            "description": "Board ID to monitor"
          },
          "idList": {
            "type": "string",
            "description": "List ID to monitor"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "badges": {
            "type": "object"
          },
          "checkItemStates": {
            "type": "array"
          },
          "closed": {
            "type": "boolean"
          },
          "dueComplete": {
            "type": "boolean"
          },
          "dateLastActivity": {
            "type": "string"
          },
          "desc": {
            "type": "string"
          },
          "descData": {
            "type": "object"
          },
          "due": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "idBoard": {
            "type": "string"
          },
          "idChecklists": {
            "type": "array"
          },
          "idLabels": {
            "type": "array"
          },
          "idList": {
            "type": "string"
          },
          "idMembers": {
            "type": "array"
          },
          "idMembersVoted": {
            "type": "array"
          },
          "idShort": {
            "type": "number"
          },
          "idAttachmentCover": {
            "type": "string"
          },
          "labels": {
            "type": "array"
          },
          "limits": {
            "type": "object"
          },
          "locationName": {
            "type": "string"
          },
          "manualCoverAttachment": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "pos": {
            "type": "number"
          },
          "shortLink": {
            "type": "string"
          },
          "shortUrl": {
            "type": "string"
          },
          "subscribed": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "coordinates": {
            "type": "object"
          },
          "cover": {
            "type": "object"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "sample": {
        "success": true
      },
      "dedupe": {
        "strategy": "id",
        "path": "id"
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "card_updated",
      "name": "Card Updated",
      "description": "Triggered when a card is updated",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "idBoard": {
            "type": "string",
            "description": "Board ID to monitor"
          },
          "idList": {
            "type": "string",
            "description": "List ID to monitor"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "desc": {
            "type": "string"
          },
          "closed": {
            "type": "boolean"
          },
          "idBoard": {
            "type": "string"
          },
          "idList": {
            "type": "string"
          },
          "idMembers": {
            "type": "array"
          },
          "idLabels": {
            "type": "array"
          },
          "due": {
            "type": "string"
          },
          "dueComplete": {
            "type": "boolean"
          },
          "pos": {
            "type": "number"
          },
          "dateLastActivity": {
            "type": "string"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "sample": {
        "success": true
      },
      "dedupe": {
        "strategy": "id",
        "path": "id"
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "card_moved",
      "name": "Card Moved",
      "description": "Triggered when a card is moved to a different list",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "idBoard": {
            "type": "string",
            "description": "Board ID to monitor"
          },
          "fromList": {
            "type": "string",
            "description": "Source list ID"
          },
          "toList": {
            "type": "string",
            "description": "Destination list ID"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "card": {
            "type": "object"
          },
          "listBefore": {
            "type": "object"
          },
          "listAfter": {
            "type": "object"
          },
          "board": {
            "type": "object"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "sample": {
        "success": true
      },
      "dedupe": {
        "strategy": "id",
        "path": "id"
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "list_created",
      "name": "List Created",
      "description": "Triggered when a new list is created",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "idBoard": {
            "type": "string",
            "description": "Board ID to monitor"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "closed": {
            "type": "boolean"
          },
          "idBoard": {
            "type": "string"
          },
          "pos": {
            "type": "number"
          },
          "subscribed": {
            "type": "boolean"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "sample": {
        "success": true
      },
      "dedupe": {
        "strategy": "id",
        "path": "id"
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    }
  ],
  "testConnection": {
    "method": "GET",
    "endpoint": "/members/me"
  },
  "release": {
    "semver": "1.0.0",
    "status": "stable",
    "isBeta": false,
    "betaStartedAt": null,
    "deprecationWindow": {
      "startDate": null,
      "sunsetDate": null
    }
  },
  "schemaVersion": "1.0"
}
