{
  "id": "guru",
  "name": "Guru",
  "description": "Guru knowledge management and team collaboration platform",
  "category": "Knowledge Management",
  "icon": "guru",
  "color": "#FF6900",
  "version": "1.0.0",
  "authentication": {
    "type": "basic",
    "config": {
      "usernameField": "username",
      "passwordField": "token"
    }
  },
  "baseUrl": "https://api.getguru.com/api/v1",
  "actions": [
    {
      "id": "test_connection",
      "name": "Test Connection",
      "description": "Test the connection to Guru",
      "parameters": {
        "type": "object",
        "properties": {},
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "get_cards",
      "name": "Get Cards",
      "description": "Get list of cards",
      "parameters": {
        "type": "object",
        "properties": {
          "collection": {
            "type": "string",
            "description": "Collection ID to filter by"
          },
          "query": {
            "type": "string",
            "description": "Search query"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Filter by tags"
          },
          "verificationState": {
            "type": "string",
            "enum": [
              "VERIFIED",
              "NEEDS_VERIFICATION",
              "UNVERIFIED"
            ],
            "description": "Verification state filter"
          },
          "sort": {
            "type": "string",
            "enum": [
              "lastModified",
              "verificationDate",
              "title"
            ],
            "default": "lastModified",
            "description": "Sort field"
          },
          "sortDirection": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "default": "DESC",
            "description": "Sort direction"
          },
          "limit": {
            "type": "number",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "description": "Number of results to return"
          },
          "offset": {
            "type": "number",
            "minimum": 0,
            "default": 0,
            "description": "Number of results to skip"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "get_card",
      "name": "Get Card",
      "description": "Get card details",
      "parameters": {
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string",
            "description": "Card ID"
          }
        },
        "required": [
          "cardId"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "create_card",
      "name": "Create Card",
      "description": "Create a new card",
      "parameters": {
        "type": "object",
        "properties": {
          "preferredPhrase": {
            "type": "string",
            "description": "Card title/preferred phrase"
          },
          "content": {
            "type": "string",
            "description": "Card content in HTML"
          },
          "collection": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            },
            "description": "Collection to add card to"
          },
          "verificationState": {
            "type": "string",
            "enum": [
              "NEEDS_VERIFICATION",
              "VERIFIED"
            ],
            "default": "NEEDS_VERIFICATION",
            "description": "Verification state"
          },
          "verificationInterval": {
            "type": "number",
            "minimum": 30,
            "description": "Verification interval in days"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags to add to the card"
          },
          "shareStatus": {
            "type": "string",
            "enum": [
              "TEAM",
              "PRIVATE"
            ],
            "default": "TEAM",
            "description": "Share status"
          }
        },
        "required": [
          "preferredPhrase",
          "content",
          "collection"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "update_card",
      "name": "Update Card",
      "description": "Update an existing card",
      "parameters": {
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string",
            "description": "Card ID"
          },
          "preferredPhrase": {
            "type": "string",
            "description": "Card title/preferred phrase"
          },
          "content": {
            "type": "string",
            "description": "Card content in HTML"
          },
          "verificationState": {
            "type": "string",
            "enum": [
              "NEEDS_VERIFICATION",
              "VERIFIED"
            ],
            "description": "Verification state"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags for the card"
          },
          "shareStatus": {
            "type": "string",
            "enum": [
              "TEAM",
              "PRIVATE"
            ],
            "description": "Share status"
          }
        },
        "required": [
          "cardId"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "delete_card",
      "name": "Delete Card",
      "description": "Delete a card",
      "parameters": {
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string",
            "description": "Card ID"
          }
        },
        "required": [
          "cardId"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "get_collections",
      "name": "Get Collections",
      "description": "Get list of collections",
      "parameters": {
        "type": "object",
        "properties": {
          "sort": {
            "type": "string",
            "enum": [
              "name",
              "dateCreated",
              "dateModified"
            ],
            "default": "name",
            "description": "Sort field"
          },
          "sortDirection": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "default": "ASC",
            "description": "Sort direction"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "get_collection",
      "name": "Get Collection",
      "description": "Get collection details",
      "parameters": {
        "type": "object",
        "properties": {
          "collectionId": {
            "type": "string",
            "description": "Collection ID"
          }
        },
        "required": [
          "collectionId"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "search_cards",
      "name": "Search Cards",
      "description": "Search for cards",
      "parameters": {
        "type": "object",
        "properties": {
          "searchTerm": {
            "type": "string",
            "description": "Search term"
          },
          "collection": {
            "type": "string",
            "description": "Collection ID to search within"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Filter by tags"
          },
          "limit": {
            "type": "number",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "description": "Number of results to return"
          },
          "offset": {
            "type": "number",
            "minimum": 0,
            "default": 0,
            "description": "Number of results to skip"
          }
        },
        "required": [
          "searchTerm"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "get_analytics",
      "name": "Get Analytics",
      "description": "Get team analytics",
      "parameters": {
        "type": "object",
        "properties": {
          "fromDate": {
            "type": "string",
            "format": "date",
            "description": "Start date for analytics"
          },
          "toDate": {
            "type": "string",
            "format": "date",
            "description": "End date for analytics"
          },
          "collection": {
            "type": "string",
            "description": "Collection ID to filter by"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "get_team_members",
      "name": "Get Team Members",
      "description": "Get list of team members",
      "parameters": {
        "type": "object",
        "properties": {},
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "add_team_member",
      "name": "Add Team Member",
      "description": "Add a team member",
      "parameters": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address of the new team member"
          },
          "firstName": {
            "type": "string",
            "description": "First name"
          },
          "lastName": {
            "type": "string",
            "description": "Last name"
          },
          "role": {
            "type": "string",
            "enum": [
              "CORE_USER",
              "LIGHT_USER",
              "ADMIN"
            ],
            "default": "CORE_USER",
            "description": "User role"
          }
        },
        "required": [
          "email"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    }
  ],
  "triggers": [
    {
      "id": "card_created",
      "name": "Card Created",
      "description": "Triggered when a new card is created",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "collection": {
            "type": "string",
            "description": "Filter by collection ID"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Filter by tags"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "preferredPhrase": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "collection": {
            "type": "object"
          },
          "dateCreated": {
            "type": "string"
          },
          "owner": {
            "type": "object"
          },
          "verificationState": {
            "type": "string"
          },
          "tags": {
            "type": "array"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "sample": {
        "success": true
      },
      "dedupe": {
        "strategy": "id",
        "path": "id"
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "card_updated",
      "name": "Card Updated",
      "description": "Triggered when a card is updated",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "collection": {
            "type": "string",
            "description": "Filter by collection ID"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "preferredPhrase": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "dateModified": {
            "type": "string"
          },
          "lastModifiedBy": {
            "type": "object"
          },
          "verificationState": {
            "type": "string"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "sample": {
        "success": true
      },
      "dedupe": {
        "strategy": "id",
        "path": "id"
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "card_verified",
      "name": "Card Verified",
      "description": "Triggered when a card is verified",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "collection": {
            "type": "string",
            "description": "Filter by collection ID"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "preferredPhrase": {
            "type": "string"
          },
          "verificationState": {
            "type": "string"
          },
          "verificationDate": {
            "type": "string"
          },
          "verifiedBy": {
            "type": "object"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "sample": {
        "success": true
      },
      "dedupe": {
        "strategy": "id",
        "path": "id"
      },
      "runtimes": [
        "appsScript"
      ],
      "fallback": null
    }
  ],
  "testConnection": {
    "method": "GET",
    "endpoint": "/teams/whoami"
  },
  "release": {
    "semver": "1.0.0",
    "status": "stable",
    "isBeta": false,
    "betaStartedAt": null,
    "deprecationWindow": {
      "startDate": null,
      "sunsetDate": null
    }
  },
  "schemaVersion": "1.0"
}
