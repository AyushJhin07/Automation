{
  "id": "pagerduty",
  "name": "PagerDuty",
  "description": "Incident response platform for managing alerts, on-call schedules, and escalations",
  "category": "Monitoring",
  "icon": "pagerduty",
  "color": "#06AC38",
  "version": "1.0.0",
  "availability": "stable",
  "authentication": {
    "type": "api_key",
    "config": {
      "apiKeyLocation": "header",
      "apiKeyName": "Authorization",
      "apiKeyValue": "Token token={api_key}"
    }
  },
  "baseUrl": "https://api.pagerduty.com",
  "actions": [
    {
      "id": "test_connection",
      "name": "Test Connection",
      "description": "Test the connection to PagerDuty",
      "parameters": {
        "type": "object",
        "properties": {},
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "create_incident",
      "name": "Create Incident",
      "description": "Create a new incident",
      "parameters": {
        "type": "object",
        "properties": {
          "incident": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "incident"
                ],
                "default": "incident"
              },
              "title": {
                "type": "string",
                "description": "Incident title"
              },
              "service": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "service_reference"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "additionalProperties": false
              },
              "priority": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "priority_reference"
                    ]
                  }
                },
                "additionalProperties": false
              },
              "urgency": {
                "type": "string",
                "enum": [
                  "high",
                  "low"
                ],
                "description": "Incident urgency"
              },
              "incident_key": {
                "type": "string",
                "description": "Unique incident key"
              },
              "body": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "incident_body"
                    ]
                  },
                  "details": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "escalation_policy": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "escalation_policy_reference"
                    ]
                  }
                },
                "additionalProperties": false
              },
              "assignments": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "assignee": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "user_reference"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            },
            "required": [
              "type",
              "title",
              "service"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "incident"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "get_incident",
      "name": "Get Incident",
      "description": "Get incident details",
      "parameters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Incident ID"
          },
          "include": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Additional data to include"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "update_incident",
      "name": "Update Incident",
      "description": "Update an incident",
      "parameters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Incident ID"
          },
          "incident": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "incident"
                ]
              },
              "title": {
                "type": "string"
              },
              "status": {
                "type": "string",
                "enum": [
                  "triggered",
                  "acknowledged",
                  "resolved"
                ]
              },
              "priority": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "priority_reference"
                    ]
                  }
                },
                "additionalProperties": false
              },
              "escalation_level": {
                "type": "number"
              },
              "assignments": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "escalation_policy": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "escalation_policy_reference"
                    ]
                  }
                },
                "additionalProperties": false
              },
              "urgency": {
                "type": "string",
                "enum": [
                  "high",
                  "low"
                ]
              },
              "resolution": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "required": [
          "id",
          "incident"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "list_incidents",
      "name": "List Incidents",
      "description": "List incidents with optional filters",
      "parameters": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "minimum": 1,
            "maximum": 100,
            "default": 25,
            "description": "Number of incidents to return"
          },
          "offset": {
            "type": "number",
            "minimum": 0,
            "default": 0,
            "description": "Number of incidents to skip"
          },
          "total": {
            "type": "boolean",
            "description": "Whether to include total count"
          },
          "date_range": {
            "type": "string",
            "enum": [
              "all"
            ],
            "description": "Date range filter"
          },
          "incident_key": {
            "type": "string",
            "description": "Filter by incident key"
          },
          "service_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Filter by service IDs"
          },
          "team_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Filter by team IDs"
          },
          "user_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Filter by user IDs"
          },
          "urgencies": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "high",
                "low"
              ]
            },
            "description": "Filter by urgencies"
          },
          "time_zone": {
            "type": "string",
            "description": "Time zone for dates"
          },
          "statuses": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "triggered",
                "acknowledged",
                "resolved"
              ]
            },
            "description": "Filter by statuses"
          },
          "sort_by": {
            "type": "string",
            "enum": [
              "incident_number:asc",
              "incident_number:desc",
              "created_at:asc",
              "created_at:desc",
              "resolved_at:asc",
              "resolved_at:desc",
              "urgency:asc",
              "urgency:desc"
            ],
            "description": "Sort order"
          },
          "include": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Additional data to include"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "acknowledge_incident",
      "name": "Acknowledge Incident",
      "description": "Acknowledge an incident",
      "parameters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Incident ID"
          },
          "from": {
            "type": "string",
            "format": "email",
            "description": "Email of the user acknowledging"
          }
        },
        "required": [
          "id",
          "from"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "resolve_incident",
      "name": "Resolve Incident",
      "description": "Resolve an incident",
      "parameters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Incident ID"
          },
          "from": {
            "type": "string",
            "format": "email",
            "description": "Email of the user resolving"
          },
          "resolution": {
            "type": "string",
            "description": "Resolution notes"
          }
        },
        "required": [
          "id",
          "from"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "create_note",
      "name": "Create Note",
      "description": "Add a note to an incident",
      "parameters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Incident ID"
          },
          "note": {
            "type": "object",
            "properties": {
              "content": {
                "type": "string"
              }
            },
            "required": [
              "content"
            ],
            "additionalProperties": false
          },
          "from": {
            "type": "string",
            "format": "email",
            "description": "Email of the user adding note"
          }
        },
        "required": [
          "id",
          "note",
          "from"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "get_service",
      "name": "Get Service",
      "description": "Get service details",
      "parameters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Service ID"
          },
          "include": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Additional data to include"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "list_services",
      "name": "List Services",
      "description": "List services",
      "parameters": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "minimum": 1,
            "maximum": 100,
            "default": 25
          },
          "offset": {
            "type": "number",
            "minimum": 0,
            "default": 0
          },
          "total": {
            "type": "boolean"
          },
          "team_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "time_zone": {
            "type": "string"
          },
          "sort_by": {
            "type": "string",
            "enum": [
              "name:asc",
              "name:desc",
              "created_at:asc",
              "created_at:desc"
            ]
          },
          "query": {
            "type": "string",
            "description": "Search query"
          },
          "include": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "get_user",
      "name": "Get User",
      "description": "Get user details",
      "parameters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User ID"
          },
          "include": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Additional data to include"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "list_users",
      "name": "List Users",
      "description": "List users",
      "parameters": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "minimum": 1,
            "maximum": 100,
            "default": 25
          },
          "offset": {
            "type": "number",
            "minimum": 0,
            "default": 0
          },
          "total": {
            "type": "boolean"
          },
          "query": {
            "type": "string",
            "description": "Search query"
          },
          "team_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "include": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    }
  ],
  "triggers": [
    {
      "id": "incident_triggered",
      "name": "Incident Triggered",
      "description": "Triggered when a new incident is created",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "service_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Filter by service IDs"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "event": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "event_type": {
                "type": "string"
              },
              "resource_type": {
                "type": "string"
              },
              "occurred_at": {
                "type": "string"
              },
              "agent": {
                "type": "object"
              },
              "client": {
                "type": "object"
              },
              "data": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "self": {
                    "type": "string"
                  },
                  "html_url": {
                    "type": "string"
                  },
                  "number": {
                    "type": "number"
                  },
                  "status": {
                    "type": "string"
                  },
                  "incident_key": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "summary": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "urgency": {
                    "type": "string"
                  },
                  "service": {
                    "type": "object"
                  },
                  "escalation_policy": {
                    "type": "object"
                  },
                  "assignments": {
                    "type": "array"
                  },
                  "acknowledgements": {
                    "type": "array"
                  },
                  "priority": {
                    "type": "object"
                  },
                  "incident_number": {
                    "type": "number"
                  },
                  "title": {
                    "type": "string"
                  },
                  "pending_actions": {
                    "type": "array"
                  },
                  "alert_counts": {
                    "type": "object"
                  },
                  "body": {
                    "type": "object"
                  },
                  "is_mergeable": {
                    "type": "boolean"
                  },
                  "basic_alert_grouping": {
                    "type": "object"
                  },
                  "alert_grouping": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "incident_acknowledged",
      "name": "Incident Acknowledged",
      "description": "Triggered when an incident is acknowledged",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "service_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Filter by service IDs"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "event": {
            "type": "object"
          }
        }
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "incident_resolved",
      "name": "Incident Resolved",
      "description": "Triggered when an incident is resolved",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "service_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Filter by service IDs"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "event": {
            "type": "object"
          }
        }
      },
      "sample": {
        "success": true
      }
    }
  ],
  "testConnection": {
    "method": "GET",
    "endpoint": "/users/me"
  },
  "release": {
    "semver": "1.0.0",
    "status": "stable",
    "isBeta": false,
    "betaStartedAt": null,
    "deprecationWindow": {
      "startDate": null,
      "sunsetDate": null
    }
  },
  "schemaVersion": "1.0"
}
