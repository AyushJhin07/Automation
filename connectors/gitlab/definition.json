{
  "id": "gitlab",
  "name": "GitLab",
  "description": "GitLab DevOps platform for repository management and CI/CD",
  "category": "Developer Tools",
  "icon": "gitlab",
  "color": "#FC6D26",
  "version": "1.0.0",
  "authentication": {
    "type": "oauth2",
    "config": {
      "authUrl": "https://gitlab.com/oauth/authorize",
      "tokenUrl": "https://gitlab.com/oauth/token",
      "scopes": [
        "api",
        "read_user",
        "read_repository"
      ]
    }
  },
  "baseUrl": "https://gitlab.com/api/v4",
  "actions": [
    {
      "id": "test_connection",
      "name": "Test Connection",
      "description": "Test the connection to GitLab",
      "parameters": {
        "type": "object",
        "properties": {},
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "create_issue",
      "name": "Create Issue",
      "description": "Create a new issue in a project",
      "parameters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Project ID or path"
          },
          "title": {
            "type": "string",
            "description": "Issue title"
          },
          "description": {
            "type": "string",
            "description": "Issue description"
          },
          "assignee_ids": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "description": "User IDs to assign"
          },
          "milestone_id": {
            "type": "number",
            "description": "Milestone ID"
          },
          "labels": {
            "type": "string",
            "description": "Comma-separated label names"
          },
          "due_date": {
            "type": "string",
            "format": "date",
            "description": "Due date"
          },
          "weight": {
            "type": "number",
            "description": "Issue weight"
          }
        },
        "required": [
          "id",
          "title"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "create_merge_request",
      "name": "Create Merge Request",
      "description": "Create a new merge request",
      "parameters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Project ID or path"
          },
          "source_branch": {
            "type": "string",
            "description": "Source branch"
          },
          "target_branch": {
            "type": "string",
            "description": "Target branch"
          },
          "title": {
            "type": "string",
            "description": "Merge request title"
          },
          "description": {
            "type": "string",
            "description": "Merge request description"
          },
          "assignee_id": {
            "type": "number",
            "description": "Assignee user ID"
          },
          "milestone_id": {
            "type": "number",
            "description": "Milestone ID"
          },
          "labels": {
            "type": "string",
            "description": "Comma-separated label names"
          },
          "remove_source_branch": {
            "type": "boolean",
            "default": false,
            "description": "Remove source branch when merged"
          },
          "squash": {
            "type": "boolean",
            "default": false,
            "description": "Squash commits when merging"
          }
        },
        "required": [
          "id",
          "source_branch",
          "target_branch",
          "title"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "create_project",
      "name": "Create Project",
      "description": "Create a new project",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Project name"
          },
          "path": {
            "type": "string",
            "description": "Project path"
          },
          "description": {
            "type": "string",
            "description": "Project description"
          },
          "visibility": {
            "type": "string",
            "enum": [
              "private",
              "internal",
              "public"
            ],
            "default": "private",
            "description": "Project visibility"
          },
          "issues_enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enable issues"
          },
          "merge_requests_enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enable merge requests"
          },
          "wiki_enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enable wiki"
          },
          "snippets_enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enable snippets"
          },
          "namespace_id": {
            "type": "number",
            "description": "Namespace ID"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "list_projects",
      "name": "List Projects",
      "description": "List user projects",
      "parameters": {
        "type": "object",
        "properties": {
          "archived": {
            "type": "boolean",
            "description": "Include archived projects"
          },
          "visibility": {
            "type": "string",
            "enum": [
              "public",
              "internal",
              "private"
            ],
            "description": "Filter by visibility"
          },
          "order_by": {
            "type": "string",
            "enum": [
              "id",
              "name",
              "path",
              "created_at",
              "updated_at",
              "last_activity_at"
            ],
            "description": "Order by field"
          },
          "sort": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "Sort order"
          },
          "search": {
            "type": "string",
            "description": "Search query"
          },
          "per_page": {
            "type": "number",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "description": "Results per page"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    }
  ],
  "triggers": [
    {
      "id": "push_events",
      "name": "Push Events",
      "description": "Triggered on push events",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "project_id": {
            "type": "number",
            "description": "Filter by project"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "object_kind": {
            "type": "string"
          },
          "project": {
            "type": "object"
          },
          "commits": {
            "type": "array"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "sample": {
        "success": true
      },
      "dedupe": {
        "strategy": "id",
        "path": "id"
      }
    },
    {
      "id": "merge_request_events",
      "name": "Merge Request Events",
      "description": "Triggered on merge request events",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {},
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "object_kind": {
            "type": "string"
          },
          "object_attributes": {
            "type": "object"
          },
          "project": {
            "type": "object"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "sample": {
        "success": true
      },
      "dedupe": {
        "strategy": "id",
        "path": "id"
      }
    }
  ],
  "testConnection": {
    "method": "GET",
    "endpoint": "/user"
  },
  "release": {
    "semver": "1.0.0",
    "status": "stable",
    "isBeta": false,
    "betaStartedAt": null,
    "deprecationWindow": {
      "startDate": null,
      "sunsetDate": null
    }
  },
  "schemaVersion": "1.0"
}
