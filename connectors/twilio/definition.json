{
  "id": "twilio",
  "name": "Twilio",
  "description": "Cloud communications platform for messaging, voice, and video",
  "category": "Communication",
  "icon": "twilio",
  "color": "#F22F46",
  "version": "1.0.0",
  "authentication": {
    "type": "api_key",
    "config": {
      "apiKeyLocation": "header",
      "apiKeyName": "Authorization",
      "apiKeyValue": "Basic {api_key}"
    }
  },
  "baseUrl": "https://api.twilio.com/2010-04-01",
  "actions": [
    {
      "id": "test_connection",
      "name": "Test Connection",
      "description": "Test the connection to Twilio",
      "parameters": {
        "type": "object",
        "properties": {},
        "required": [],
        "additionalProperties": false
      }
    },
    {
      "id": "send_sms",
      "name": "Send SMS",
      "description": "Send an SMS message",
      "parameters": {
        "type": "object",
        "properties": {
          "to": {
            "type": "string",
            "description": "Phone number to send SMS to (E.164 format)"
          },
          "from": {
            "type": "string",
            "description": "Twilio phone number to send from"
          },
          "body": {
            "type": "string",
            "description": "Message body (up to 1600 characters)"
          },
          "messaging_service_sid": {
            "type": "string",
            "description": "Messaging Service SID (alternative to 'from')"
          },
          "status_callback": {
            "type": "string",
            "description": "URL to receive status callbacks"
          },
          "status_callback_method": {
            "type": "string",
            "enum": [
              "GET",
              "POST"
            ],
            "default": "POST",
            "description": "HTTP method for status callback"
          },
          "application_sid": {
            "type": "string",
            "description": "Application SID for status callbacks"
          },
          "max_price": {
            "type": "string",
            "description": "Maximum price per message unit"
          },
          "provide_feedback": {
            "type": "boolean",
            "description": "Whether to enable feedback collection"
          },
          "attempt": {
            "type": "number",
            "minimum": 1,
            "maximum": 3,
            "description": "Number of delivery attempts"
          },
          "validity_period": {
            "type": "number",
            "minimum": 1,
            "maximum": 14400,
            "description": "Message validity period in seconds"
          },
          "force_delivery": {
            "type": "boolean",
            "description": "Whether to force delivery"
          },
          "content_retention": {
            "type": "string",
            "enum": [
              "retain",
              "discard"
            ],
            "description": "Content retention policy"
          },
          "address_retention": {
            "type": "string",
            "enum": [
              "retain",
              "discard"
            ],
            "description": "Address retention policy"
          },
          "smart_encoded": {
            "type": "boolean",
            "description": "Whether to use smart encoding"
          },
          "persistent_action": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Persistent action buttons"
          },
          "shorten_urls": {
            "type": "boolean",
            "description": "Whether to automatically shorten URLs"
          },
          "schedule_type": {
            "type": "string",
            "enum": [
              "fixed"
            ],
            "description": "Schedule type for delayed sending"
          },
          "send_at": {
            "type": "string",
            "format": "date-time",
            "description": "When to send the message (ISO 8601)"
          },
          "send_as_mms": {
            "type": "boolean",
            "description": "Whether to send as MMS"
          },
          "content_variables": {
            "type": "object",
            "description": "Template variable values"
          }
        },
        "required": [
          "to",
          "body"
        ],
        "additionalProperties": false
      }
    },
    {
      "id": "send_mms",
      "name": "Send MMS",
      "description": "Send an MMS message with media",
      "parameters": {
        "type": "object",
        "properties": {
          "to": {
            "type": "string",
            "description": "Phone number to send MMS to (E.164 format)"
          },
          "from": {
            "type": "string",
            "description": "Twilio phone number to send from"
          },
          "body": {
            "type": "string",
            "description": "Message body"
          },
          "media_url": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "URLs of media to include (up to 10)"
          },
          "messaging_service_sid": {
            "type": "string",
            "description": "Messaging Service SID (alternative to 'from')"
          },
          "status_callback": {
            "type": "string",
            "description": "URL to receive status callbacks"
          },
          "status_callback_method": {
            "type": "string",
            "enum": [
              "GET",
              "POST"
            ],
            "default": "POST",
            "description": "HTTP method for status callback"
          },
          "max_price": {
            "type": "string",
            "description": "Maximum price per message unit"
          },
          "provide_feedback": {
            "type": "boolean",
            "description": "Whether to enable feedback collection"
          },
          "validity_period": {
            "type": "number",
            "minimum": 1,
            "maximum": 14400,
            "description": "Message validity period in seconds"
          },
          "content_retention": {
            "type": "string",
            "enum": [
              "retain",
              "discard"
            ],
            "description": "Content retention policy"
          },
          "address_retention": {
            "type": "string",
            "enum": [
              "retain",
              "discard"
            ],
            "description": "Address retention policy"
          }
        },
        "required": [
          "to",
          "media_url"
        ],
        "additionalProperties": false
      }
    },
    {
      "id": "make_call",
      "name": "Make Call",
      "description": "Make a voice call",
      "parameters": {
        "type": "object",
        "properties": {
          "to": {
            "type": "string",
            "description": "Phone number to call (E.164 format)"
          },
          "from": {
            "type": "string",
            "description": "Twilio phone number to call from"
          },
          "url": {
            "type": "string",
            "description": "TwiML URL to execute"
          },
          "twiml": {
            "type": "string",
            "description": "TwiML instructions to execute"
          },
          "application_sid": {
            "type": "string",
            "description": "Application SID containing TwiML"
          },
          "method": {
            "type": "string",
            "enum": [
              "GET",
              "POST"
            ],
            "default": "POST",
            "description": "HTTP method for URL"
          },
          "fallback_url": {
            "type": "string",
            "description": "Fallback URL if primary fails"
          },
          "fallback_method": {
            "type": "string",
            "enum": [
              "GET",
              "POST"
            ],
            "default": "POST",
            "description": "HTTP method for fallback URL"
          },
          "status_callback": {
            "type": "string",
            "description": "URL to receive status callbacks"
          },
          "status_callback_event": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "initiated",
                "ringing",
                "answered",
                "completed"
              ]
            },
            "description": "Events to callback for"
          },
          "status_callback_method": {
            "type": "string",
            "enum": [
              "GET",
              "POST"
            ],
            "default": "POST",
            "description": "HTTP method for status callback"
          },
          "send_digits": {
            "type": "string",
            "description": "DTMF digits to play after connection"
          },
          "timeout": {
            "type": "number",
            "minimum": 5,
            "maximum": 600,
            "default": 60,
            "description": "Time to wait for answer (seconds)"
          },
          "record": {
            "type": "boolean",
            "description": "Whether to record the call"
          },
          "recording_channels": {
            "type": "string",
            "enum": [
              "mono",
              "dual"
            ],
            "description": "Recording channels"
          },
          "recording_status_callback": {
            "type": "string",
            "description": "URL to receive recording callbacks"
          },
          "recording_status_callback_method": {
            "type": "string",
            "enum": [
              "GET",
              "POST"
            ],
            "default": "POST",
            "description": "HTTP method for recording callback"
          },
          "sip_auth_username": {
            "type": "string",
            "description": "SIP authentication username"
          },
          "sip_auth_password": {
            "type": "string",
            "description": "SIP authentication password"
          },
          "machine_detection": {
            "type": "string",
            "enum": [
              "Enable",
              "DetectMessageEnd"
            ],
            "description": "Answering machine detection"
          },
          "machine_detection_timeout": {
            "type": "number",
            "minimum": 3,
            "maximum": 60,
            "description": "Machine detection timeout (seconds)"
          },
          "recording_track": {
            "type": "string",
            "enum": [
              "inbound",
              "outbound",
              "both"
            ],
            "description": "Which track to record"
          },
          "trim": {
            "type": "string",
            "enum": [
              "trim-silence",
              "do-not-trim"
            ],
            "description": "Whether to trim silence from recordings"
          },
          "caller_id": {
            "type": "string",
            "description": "Caller ID to display"
          },
          "machine_detection_speech_threshold": {
            "type": "number",
            "minimum": 1000,
            "maximum": 6000,
            "description": "Speech threshold for machine detection (ms)"
          },
          "machine_detection_speech_end_threshold": {
            "type": "number",
            "minimum": 500,
            "maximum": 5000,
            "description": "Speech end threshold for machine detection (ms)"
          },
          "machine_detection_silence_timeout": {
            "type": "number",
            "minimum": 2000,
            "maximum": 10000,
            "description": "Silence timeout for machine detection (ms)"
          }
        },
        "required": [
          "to",
          "from"
        ],
        "additionalProperties": false
      }
    },
    {
      "id": "get_message",
      "name": "Get Message",
      "description": "Get details of a specific message",
      "parameters": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "description": "Account SID (defaults to main account)"
          },
          "sid": {
            "type": "string",
            "description": "Message SID"
          }
        },
        "required": [
          "sid"
        ],
        "additionalProperties": false
      }
    },
    {
      "id": "list_messages",
      "name": "List Messages",
      "description": "List messages with optional filters",
      "parameters": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "description": "Account SID (defaults to main account)"
          },
          "to": {
            "type": "string",
            "description": "Filter by recipient phone number"
          },
          "from": {
            "type": "string",
            "description": "Filter by sender phone number"
          },
          "date_sent": {
            "type": "string",
            "format": "date",
            "description": "Filter by date sent (YYYY-MM-DD)"
          },
          "date_sent_before": {
            "type": "string",
            "format": "date",
            "description": "Filter messages sent before date"
          },
          "date_sent_after": {
            "type": "string",
            "format": "date",
            "description": "Filter messages sent after date"
          },
          "page_size": {
            "type": "number",
            "minimum": 1,
            "maximum": 1000,
            "default": 50,
            "description": "Number of messages per page"
          },
          "page": {
            "type": "number",
            "minimum": 0,
            "description": "Page number to retrieve"
          },
          "page_token": {
            "type": "string",
            "description": "Page token for pagination"
          }
        },
        "required": [],
        "additionalProperties": false
      }
    },
    {
      "id": "get_call",
      "name": "Get Call",
      "description": "Get details of a specific call",
      "parameters": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "description": "Account SID (defaults to main account)"
          },
          "sid": {
            "type": "string",
            "description": "Call SID"
          }
        },
        "required": [
          "sid"
        ],
        "additionalProperties": false
      }
    },
    {
      "id": "list_calls",
      "name": "List Calls",
      "description": "List calls with optional filters",
      "parameters": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "description": "Account SID (defaults to main account)"
          },
          "to": {
            "type": "string",
            "description": "Filter by recipient phone number"
          },
          "from": {
            "type": "string",
            "description": "Filter by caller phone number"
          },
          "status": {
            "type": "string",
            "enum": [
              "queued",
              "ringing",
              "in-progress",
              "completed",
              "busy",
              "failed",
              "no-answer",
              "canceled"
            ],
            "description": "Filter by call status"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "description": "Filter by start time"
          },
          "start_time_before": {
            "type": "string",
            "format": "date-time",
            "description": "Filter calls started before time"
          },
          "start_time_after": {
            "type": "string",
            "format": "date-time",
            "description": "Filter calls started after time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "description": "Filter by end time"
          },
          "end_time_before": {
            "type": "string",
            "format": "date-time",
            "description": "Filter calls ended before time"
          },
          "end_time_after": {
            "type": "string",
            "format": "date-time",
            "description": "Filter calls ended after time"
          },
          "page_size": {
            "type": "number",
            "minimum": 1,
            "maximum": 1000,
            "default": 50,
            "description": "Number of calls per page"
          },
          "page": {
            "type": "number",
            "minimum": 0,
            "description": "Page number to retrieve"
          },
          "page_token": {
            "type": "string",
            "description": "Page token for pagination"
          }
        },
        "required": [],
        "additionalProperties": false
      }
    },
    {
      "id": "update_call",
      "name": "Update Call",
      "description": "Update an in-progress call",
      "parameters": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "description": "Account SID (defaults to main account)"
          },
          "sid": {
            "type": "string",
            "description": "Call SID"
          },
          "url": {
            "type": "string",
            "description": "New TwiML URL to execute"
          },
          "method": {
            "type": "string",
            "enum": [
              "GET",
              "POST"
            ],
            "default": "POST",
            "description": "HTTP method for URL"
          },
          "status": {
            "type": "string",
            "enum": [
              "canceled",
              "completed"
            ],
            "description": "New call status"
          },
          "fallback_url": {
            "type": "string",
            "description": "New fallback URL"
          },
          "fallback_method": {
            "type": "string",
            "enum": [
              "GET",
              "POST"
            ],
            "default": "POST",
            "description": "HTTP method for fallback URL"
          },
          "status_callback": {
            "type": "string",
            "description": "New status callback URL"
          },
          "status_callback_method": {
            "type": "string",
            "enum": [
              "GET",
              "POST"
            ],
            "default": "POST",
            "description": "HTTP method for status callback"
          },
          "twiml": {
            "type": "string",
            "description": "TwiML instructions to execute"
          }
        },
        "required": [
          "sid"
        ],
        "additionalProperties": false
      }
    },
    {
      "id": "buy_phone_number",
      "name": "Buy Phone Number",
      "description": "Purchase a phone number",
      "parameters": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "description": "Account SID (defaults to main account)"
          },
          "phone_number": {
            "type": "string",
            "description": "Phone number to purchase (E.164 format)"
          },
          "area_code": {
            "type": "string",
            "description": "Area code to search in"
          },
          "friendly_name": {
            "type": "string",
            "description": "Human-readable name for the number"
          },
          "voice_url": {
            "type": "string",
            "description": "URL to handle incoming voice calls"
          },
          "voice_method": {
            "type": "string",
            "enum": [
              "GET",
              "POST"
            ],
            "default": "POST",
            "description": "HTTP method for voice URL"
          },
          "voice_fallback_url": {
            "type": "string",
            "description": "Fallback URL for voice calls"
          },
          "voice_fallback_method": {
            "type": "string",
            "enum": [
              "GET",
              "POST"
            ],
            "default": "POST",
            "description": "HTTP method for voice fallback URL"
          },
          "status_callback": {
            "type": "string",
            "description": "URL for status callbacks"
          },
          "status_callback_method": {
            "type": "string",
            "enum": [
              "GET",
              "POST"
            ],
            "default": "POST",
            "description": "HTTP method for status callback"
          },
          "voice_caller_id_lookup": {
            "type": "boolean",
            "description": "Whether to enable caller ID lookup"
          },
          "voice_application_sid": {
            "type": "string",
            "description": "Application SID for voice calls"
          },
          "sms_url": {
            "type": "string",
            "description": "URL to handle incoming SMS"
          },
          "sms_method": {
            "type": "string",
            "enum": [
              "GET",
              "POST"
            ],
            "default": "POST",
            "description": "HTTP method for SMS URL"
          },
          "sms_fallback_url": {
            "type": "string",
            "description": "Fallback URL for SMS"
          },
          "sms_fallback_method": {
            "type": "string",
            "enum": [
              "GET",
              "POST"
            ],
            "default": "POST",
            "description": "HTTP method for SMS fallback URL"
          },
          "sms_application_sid": {
            "type": "string",
            "description": "Application SID for SMS"
          },
          "address_sid": {
            "type": "string",
            "description": "Address SID for identity verification"
          },
          "emergency_status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive"
            ],
            "description": "Emergency calling status"
          },
          "emergency_address_sid": {
            "type": "string",
            "description": "Emergency address SID"
          },
          "trunk_sid": {
            "type": "string",
            "description": "Trunk SID for SIP trunking"
          },
          "identity_sid": {
            "type": "string",
            "description": "Identity SID for regulatory compliance"
          },
          "bundle_sid": {
            "type": "string",
            "description": "Bundle SID for regulatory compliance"
          }
        },
        "required": [
          "phone_number"
        ],
        "additionalProperties": false
      }
    },
    {
      "id": "list_phone_numbers",
      "name": "List Phone Numbers",
      "description": "List purchased phone numbers",
      "parameters": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "description": "Account SID (defaults to main account)"
          },
          "beta": {
            "type": "boolean",
            "description": "Whether to include beta numbers"
          },
          "friendly_name": {
            "type": "string",
            "description": "Filter by friendly name"
          },
          "phone_number": {
            "type": "string",
            "description": "Filter by phone number"
          },
          "origin": {
            "type": "string",
            "description": "Filter by origin"
          },
          "page_size": {
            "type": "number",
            "minimum": 1,
            "maximum": 1000,
            "default": 50,
            "description": "Number of numbers per page"
          },
          "page": {
            "type": "number",
            "minimum": 0,
            "description": "Page number to retrieve"
          },
          "page_token": {
            "type": "string",
            "description": "Page token for pagination"
          }
        },
        "required": [],
        "additionalProperties": false
      }
    }
  ],
  "triggers": [
    {
      "id": "incoming_sms",
      "name": "Incoming SMS",
      "description": "Triggered when an SMS is received",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "description": "Filter by sender phone number"
          },
          "to": {
            "type": "string",
            "description": "Filter by recipient phone number"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "MessageSid": {
            "type": "string"
          },
          "AccountSid": {
            "type": "string"
          },
          "MessagingServiceSid": {
            "type": "string"
          },
          "From": {
            "type": "string"
          },
          "To": {
            "type": "string"
          },
          "Body": {
            "type": "string"
          },
          "NumMedia": {
            "type": "string"
          },
          "MediaContentType0": {
            "type": "string"
          },
          "MediaUrl0": {
            "type": "string"
          },
          "FromCity": {
            "type": "string"
          },
          "FromState": {
            "type": "string"
          },
          "FromZip": {
            "type": "string"
          },
          "FromCountry": {
            "type": "string"
          },
          "ToCity": {
            "type": "string"
          },
          "ToState": {
            "type": "string"
          },
          "ToZip": {
            "type": "string"
          },
          "ToCountry": {
            "type": "string"
          },
          "AddOns": {
            "type": "string"
          },
          "SmsMessageSid": {
            "type": "string"
          },
          "NumSegments": {
            "type": "string"
          },
          "ReferralNumMedia": {
            "type": "string"
          },
          "SmsStatus": {
            "type": "string"
          },
          "SmsSid": {
            "type": "string"
          }
        }
      }
    },
    {
      "id": "incoming_call",
      "name": "Incoming Call",
      "description": "Triggered when a call is received",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "description": "Filter by caller phone number"
          },
          "to": {
            "type": "string",
            "description": "Filter by recipient phone number"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "CallSid": {
            "type": "string"
          },
          "AccountSid": {
            "type": "string"
          },
          "From": {
            "type": "string"
          },
          "To": {
            "type": "string"
          },
          "CallStatus": {
            "type": "string"
          },
          "ApiVersion": {
            "type": "string"
          },
          "Direction": {
            "type": "string"
          },
          "ForwardedFrom": {
            "type": "string"
          },
          "CallerName": {
            "type": "string"
          },
          "FromCity": {
            "type": "string"
          },
          "FromState": {
            "type": "string"
          },
          "FromZip": {
            "type": "string"
          },
          "FromCountry": {
            "type": "string"
          },
          "ToCity": {
            "type": "string"
          },
          "ToState": {
            "type": "string"
          },
          "ToZip": {
            "type": "string"
          },
          "ToCountry": {
            "type": "string"
          },
          "ApplicationSid": {
            "type": "string"
          },
          "Digits": {
            "type": "string"
          },
          "FinishedOnKey": {
            "type": "string"
          },
          "SpeechResult": {
            "type": "string"
          },
          "Confidence": {
            "type": "string"
          }
        }
      }
    },
    {
      "id": "call_status_changed",
      "name": "Call Status Changed",
      "description": "Triggered when a call status changes",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "queued",
              "ringing",
              "in-progress",
              "completed",
              "busy",
              "failed",
              "no-answer",
              "canceled"
            ],
            "description": "Filter by call status"
          },
          "from": {
            "type": "string",
            "description": "Filter by caller phone number"
          },
          "to": {
            "type": "string",
            "description": "Filter by recipient phone number"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "CallSid": {
            "type": "string"
          },
          "AccountSid": {
            "type": "string"
          },
          "From": {
            "type": "string"
          },
          "To": {
            "type": "string"
          },
          "CallStatus": {
            "type": "string"
          },
          "Duration": {
            "type": "string"
          },
          "StartTime": {
            "type": "string"
          },
          "EndTime": {
            "type": "string"
          },
          "Price": {
            "type": "string"
          },
          "PriceUnit": {
            "type": "string"
          },
          "Direction": {
            "type": "string"
          },
          "AnsweredBy": {
            "type": "string"
          },
          "MachineDetectionDuration": {
            "type": "string"
          },
          "RecordingUrl": {
            "type": "string"
          },
          "RecordingSid": {
            "type": "string"
          },
          "RecordingDuration": {
            "type": "string"
          },
          "Timestamp": {
            "type": "string"
          },
          "CallbackSource": {
            "type": "string"
          },
          "SequenceNumber": {
            "type": "string"
          }
        }
      }
    },
    {
      "id": "message_status_changed",
      "name": "Message Status Changed",
      "description": "Triggered when a message status changes",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "message_status": {
            "type": "string",
            "enum": [
              "accepted",
              "queued",
              "sending",
              "sent",
              "receiving",
              "received",
              "delivered",
              "undelivered",
              "failed",
              "read"
            ],
            "description": "Filter by message status"
          },
          "from": {
            "type": "string",
            "description": "Filter by sender phone number"
          },
          "to": {
            "type": "string",
            "description": "Filter by recipient phone number"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "MessageSid": {
            "type": "string"
          },
          "AccountSid": {
            "type": "string"
          },
          "MessagingServiceSid": {
            "type": "string"
          },
          "From": {
            "type": "string"
          },
          "To": {
            "type": "string"
          },
          "MessageStatus": {
            "type": "string"
          },
          "Body": {
            "type": "string"
          },
          "NumSegments": {
            "type": "string"
          },
          "NumMedia": {
            "type": "string"
          },
          "DateCreated": {
            "type": "string"
          },
          "DateSent": {
            "type": "string"
          },
          "DateUpdated": {
            "type": "string"
          },
          "Direction": {
            "type": "string"
          },
          "Price": {
            "type": "string"
          },
          "PriceUnit": {
            "type": "string"
          },
          "ApiVersion": {
            "type": "string"
          },
          "Uri": {
            "type": "string"
          },
          "ErrorCode": {
            "type": "string"
          },
          "ErrorMessage": {
            "type": "string"
          }
        }
      }
    }
  ],
  "testConnection": {
    "method": "GET",
    "endpoint": "/Accounts.json"
  },
  "release": {
    "semver": "1.0.0",
    "status": "stable",
    "isBeta": false,
    "betaStartedAt": null,
    "deprecationWindow": {
      "startDate": null,
      "sunsetDate": null
    }
  }
}
