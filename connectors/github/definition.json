{
  "id": "github",
  "name": "GitHub",
  "description": "GitHub integration for repository management, issues, pull requests, and workflow automation",
  "category": "Development",
  "icon": "github",
  "color": "#171515",
  "version": "1.0.0",
  "authentication": {
    "type": "oauth2",
    "config": {
      "authUrl": "https://github.com/login/oauth/authorize",
      "tokenUrl": "https://github.com/login/oauth/access_token",
      "scopes": [
        "repo",
        "read:user",
        "user:email"
      ]
    }
  },
  "baseUrl": "https://api.github.com",
  "rateLimits": {
    "requestsPerHour": 5000,
    "requestsPerMinute": 200
  },
  "actions": [
    {
      "id": "test_connection",
      "name": "Test Connection",
      "description": "Test the connection to GitHub and verify authentication",
      "parameters": {
        "type": "object",
        "properties": {},
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          },
          "authenticated": {
            "type": "boolean",
            "description": "Whether the token is valid for GitHub API requests"
          },
          "user": {
            "type": "object",
            "properties": {
              "login": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "htmlUrl": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "login",
              "id"
            ],
            "additionalProperties": true
          },
          "rateLimit": {
            "type": "object",
            "properties": {
              "limit": {
                "type": "integer"
              },
              "remaining": {
                "type": "integer"
              },
              "resetAt": {
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "limit",
              "remaining",
              "resetAt"
            ],
            "additionalProperties": true
          }
        },
        "required": [
          "success",
          "authenticated",
          "user"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "authenticated": true,
        "user": {
          "login": "automation-bot",
          "id": 13579,
          "htmlUrl": "https://github.com/automation-bot"
        },
        "rateLimit": {
          "limit": 5000,
          "remaining": 4992,
          "resetAt": "2024-12-09T10:00:00Z"
        }
      },
      "runtimes": [
        "node",
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "create_issue",
      "name": "Create Issue",
      "description": "Create a new issue in a repository",
      "endpoint": "/repos/{owner}/{repo}/issues",
      "method": "POST",
      "parameters": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner (username or organization)"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "title": {
            "type": "string",
            "description": "Issue title"
          },
          "body": {
            "type": "string",
            "description": "Issue body/description"
          },
          "assignees": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of usernames to assign to the issue"
          },
          "milestone": {
            "type": "number",
            "description": "Milestone number"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of label names"
          }
        },
        "required": [
          "owner",
          "repo",
          "title"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "issue": {
            "type": "object",
            "description": "GitHub issue representation",
            "properties": {
              "id": {
                "type": "integer"
              },
              "number": {
                "type": "integer"
              },
              "title": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "htmlUrl": {
                "type": "string",
                "format": "uri"
              },
              "body": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "labels": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "color": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ],
                  "additionalProperties": true
                }
              },
              "assignees": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "login": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "login",
                    "id"
                  ],
                  "additionalProperties": true
                }
              },
              "author": {
                "type": "object",
                "properties": {
                  "login": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "login",
                  "id"
                ],
                "additionalProperties": true
              },
              "repository": {
                "type": "object",
                "properties": {
                  "owner": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "owner",
                  "name"
                ],
                "additionalProperties": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "id",
              "number",
              "title",
              "state",
              "htmlUrl",
              "createdAt",
              "updatedAt"
            ],
            "additionalProperties": true
          },
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success",
          "issue"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "issue": {
          "id": 1823456789,
          "number": 42,
          "title": "Fix pagination bug in workflow list",
          "state": "open",
          "htmlUrl": "https://github.com/example-org/automation-service/issues/42",
          "body": "Pagination breaks when filters are active. Capture request parameters and add regression test.",
          "labels": [
            {
              "id": 601,
              "name": "bug",
              "color": "d73a4a"
            },
            {
              "id": 775,
              "name": "priority-medium",
              "color": "fbca04"
            }
          ],
          "assignees": [
            {
              "login": "automation-engineer",
              "id": 90210
            }
          ],
          "author": {
            "login": "product-automation-bot",
            "id": 12345678
          },
          "repository": {
            "owner": "example-org",
            "name": "automation-service"
          },
          "createdAt": "2024-12-08T17:22:13Z",
          "updatedAt": "2024-12-09T10:04:11Z"
        }
      },
      "runtimes": [
        "node",
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "close_issue",
      "name": "Close Issue",
      "description": "Close a GitHub issue",
      "endpoint": "/repos/{owner}/{repo}/issues/{issue_number}",
      "method": "PATCH",
      "parameters": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string"
          },
          "repo": {
            "type": "string"
          },
          "issue_number": {
            "type": "number"
          }
        },
        "required": [
          "owner",
          "repo",
          "issue_number"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "issue": {
            "type": "object",
            "description": "GitHub issue representation",
            "properties": {
              "id": {
                "type": "integer"
              },
              "number": {
                "type": "integer"
              },
              "title": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "htmlUrl": {
                "type": "string",
                "format": "uri"
              },
              "body": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "labels": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "color": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ],
                  "additionalProperties": true
                }
              },
              "assignees": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "login": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "login",
                    "id"
                  ],
                  "additionalProperties": true
                }
              },
              "author": {
                "type": "object",
                "properties": {
                  "login": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "login",
                  "id"
                ],
                "additionalProperties": true
              },
              "repository": {
                "type": "object",
                "properties": {
                  "owner": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "owner",
                  "name"
                ],
                "additionalProperties": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "id",
              "number",
              "title",
              "state",
              "htmlUrl",
              "createdAt",
              "updatedAt"
            ],
            "additionalProperties": true
          },
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success",
          "issue"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "issue": {
          "id": 1823456789,
          "number": 42,
          "title": "Fix pagination bug in workflow list",
          "state": "closed",
          "htmlUrl": "https://github.com/example-org/automation-service/issues/42",
          "body": "Pagination breaks when filters are active. Capture request parameters and add regression test.",
          "labels": [
            {
              "id": 601,
              "name": "bug",
              "color": "d73a4a"
            },
            {
              "id": 775,
              "name": "priority-medium",
              "color": "fbca04"
            }
          ],
          "assignees": [
            {
              "login": "automation-engineer",
              "id": 90210
            }
          ],
          "author": {
            "login": "product-automation-bot",
            "id": 12345678
          },
          "repository": {
            "owner": "example-org",
            "name": "automation-service"
          },
          "createdAt": "2024-12-08T17:22:13Z",
          "updatedAt": "2024-12-09T10:04:11Z"
        }
      },
      "runtimes": [
        "node",
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "add_labels_to_issue",
      "name": "Add Labels To Issue",
      "description": "Add labels to an issue",
      "endpoint": "/repos/{owner}/{repo}/issues/{issue_number}/labels",
      "method": "POST",
      "parameters": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string"
          },
          "repo": {
            "type": "string"
          },
          "issue_number": {
            "type": "number"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "owner",
          "repo",
          "issue_number",
          "labels"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          },
          "issue": {
            "type": "object",
            "description": "GitHub issue representation",
            "properties": {
              "id": {
                "type": "integer"
              },
              "number": {
                "type": "integer"
              },
              "title": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "htmlUrl": {
                "type": "string",
                "format": "uri"
              },
              "body": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "labels": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "color": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ],
                  "additionalProperties": true
                }
              },
              "assignees": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "login": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "login",
                    "id"
                  ],
                  "additionalProperties": true
                }
              },
              "author": {
                "type": "object",
                "properties": {
                  "login": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "login",
                  "id"
                ],
                "additionalProperties": true
              },
              "repository": {
                "type": "object",
                "properties": {
                  "owner": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "owner",
                  "name"
                ],
                "additionalProperties": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "id",
              "number",
              "title",
              "state",
              "htmlUrl",
              "createdAt",
              "updatedAt"
            ],
            "additionalProperties": true
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Labels that are now applied to the issue"
          }
        },
        "required": [
          "success",
          "issue",
          "labels"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "issue": {
          "id": 1823456789,
          "number": 42,
          "title": "Fix pagination bug in workflow list",
          "state": "open",
          "htmlUrl": "https://github.com/example-org/automation-service/issues/42",
          "body": "Pagination breaks when filters are active. Capture request parameters and add regression test.",
          "labels": [
            {
              "id": 601,
              "name": "bug",
              "color": "d73a4a"
            },
            {
              "id": 775,
              "name": "priority-medium",
              "color": "fbca04"
            }
          ],
          "assignees": [
            {
              "login": "automation-engineer",
              "id": 90210
            }
          ],
          "author": {
            "login": "product-automation-bot",
            "id": 12345678
          },
          "repository": {
            "owner": "example-org",
            "name": "automation-service"
          },
          "createdAt": "2024-12-08T17:22:13Z",
          "updatedAt": "2024-12-09T10:04:11Z"
        },
        "labels": [
          "bug",
          "priority-medium"
        ]
      },
      "runtimes": [
        "node",
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "update_issue",
      "name": "Update Issue",
      "description": "Update an existing issue",
      "endpoint": "/repos/{owner}/{repo}/issues/{issue_number}",
      "method": "PATCH",
      "parameters": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "issue_number": {
            "type": "number",
            "description": "Issue number"
          },
          "title": {
            "type": "string",
            "description": "Issue title"
          },
          "body": {
            "type": "string",
            "description": "Issue body"
          },
          "state": {
            "type": "string",
            "enum": [
              "open",
              "closed"
            ],
            "description": "Issue state"
          },
          "assignees": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of usernames to assign"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of label names"
          }
        },
        "required": [
          "owner",
          "repo",
          "issue_number"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "issue": {
            "type": "object",
            "description": "GitHub issue representation",
            "properties": {
              "id": {
                "type": "integer"
              },
              "number": {
                "type": "integer"
              },
              "title": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "htmlUrl": {
                "type": "string",
                "format": "uri"
              },
              "body": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "labels": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "color": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ],
                  "additionalProperties": true
                }
              },
              "assignees": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "login": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "login",
                    "id"
                  ],
                  "additionalProperties": true
                }
              },
              "author": {
                "type": "object",
                "properties": {
                  "login": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "login",
                  "id"
                ],
                "additionalProperties": true
              },
              "repository": {
                "type": "object",
                "properties": {
                  "owner": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "owner",
                  "name"
                ],
                "additionalProperties": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "id",
              "number",
              "title",
              "state",
              "htmlUrl",
              "createdAt",
              "updatedAt"
            ],
            "additionalProperties": true
          },
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success",
          "issue"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "issue": {
          "id": 1823456789,
          "number": 42,
          "title": "Fix pagination bug in workflow list",
          "state": "open",
          "htmlUrl": "https://github.com/example-org/automation-service/issues/42",
          "body": "Pagination breaks when filters are active. Capture request parameters and add regression test.",
          "labels": [
            {
              "id": 601,
              "name": "bug",
              "color": "d73a4a"
            },
            {
              "id": 775,
              "name": "priority-medium",
              "color": "fbca04"
            }
          ],
          "assignees": [
            {
              "login": "automation-engineer",
              "id": 90210
            }
          ],
          "author": {
            "login": "product-automation-bot",
            "id": 12345678
          },
          "repository": {
            "owner": "example-org",
            "name": "automation-service"
          },
          "createdAt": "2024-12-08T17:22:13Z",
          "updatedAt": "2024-12-09T10:04:11Z"
        }
      },
      "runtimes": [
        "node",
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "get_issue",
      "name": "Get Issue",
      "description": "Get details of a specific issue",
      "endpoint": "/repos/{owner}/{repo}/issues/{issue_number}",
      "method": "GET",
      "parameters": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "issue_number": {
            "type": "number",
            "description": "Issue number"
          }
        },
        "required": [
          "owner",
          "repo",
          "issue_number"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "issue": {
            "type": "object",
            "description": "GitHub issue representation",
            "properties": {
              "id": {
                "type": "integer"
              },
              "number": {
                "type": "integer"
              },
              "title": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "htmlUrl": {
                "type": "string",
                "format": "uri"
              },
              "body": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "labels": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "color": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ],
                  "additionalProperties": true
                }
              },
              "assignees": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "login": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "login",
                    "id"
                  ],
                  "additionalProperties": true
                }
              },
              "author": {
                "type": "object",
                "properties": {
                  "login": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "login",
                  "id"
                ],
                "additionalProperties": true
              },
              "repository": {
                "type": "object",
                "properties": {
                  "owner": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "owner",
                  "name"
                ],
                "additionalProperties": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "id",
              "number",
              "title",
              "state",
              "htmlUrl",
              "createdAt",
              "updatedAt"
            ],
            "additionalProperties": true
          }
        },
        "required": [
          "issue"
        ],
        "additionalProperties": true
      },
      "sample": {
        "id": 1823456789,
        "number": 42,
        "title": "Fix pagination bug in workflow list",
        "state": "open",
        "htmlUrl": "https://github.com/example-org/automation-service/issues/42",
        "body": "Pagination breaks when filters are active. Capture request parameters and add regression test.",
        "labels": [
          {
            "id": 601,
            "name": "bug",
            "color": "d73a4a"
          },
          {
            "id": 775,
            "name": "priority-medium",
            "color": "fbca04"
          }
        ],
        "assignees": [
          {
            "login": "automation-engineer",
            "id": 90210
          }
        ],
        "author": {
          "login": "product-automation-bot",
          "id": 12345678
        },
        "repository": {
          "owner": "example-org",
          "name": "automation-service"
        },
        "createdAt": "2024-12-08T17:22:13Z",
        "updatedAt": "2024-12-09T10:04:11Z"
      },
      "runtimes": [
        "node",
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "list_issues",
      "name": "List Issues",
      "description": "List repository issues with optional filtering",
      "endpoint": "/repos/{owner}/{repo}/issues",
      "method": "GET",
      "parameters": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "state": {
            "type": "string",
            "enum": [
              "open",
              "closed",
              "all"
            ],
            "default": "open",
            "description": "Issue state filter"
          },
          "labels": {
            "type": "string",
            "description": "Comma-separated list of labels"
          },
          "assignee": {
            "type": "string",
            "description": "Filter by assignee username"
          },
          "creator": {
            "type": "string",
            "description": "Filter by creator username"
          },
          "sort": {
            "type": "string",
            "enum": [
              "created",
              "updated",
              "comments"
            ],
            "default": "created",
            "description": "Sort field"
          },
          "direction": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "default": "desc",
            "description": "Sort direction"
          },
          "per_page": {
            "type": "number",
            "default": 30,
            "maximum": 100,
            "description": "Number of items per page"
          }
        },
        "required": [
          "owner",
          "repo"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          },
          "issues": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "GitHub issue representation",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "number": {
                  "type": "integer"
                },
                "title": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "htmlUrl": {
                  "type": "string",
                  "format": "uri"
                },
                "body": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "labels": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "color": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name"
                    ],
                    "additionalProperties": true
                  }
                },
                "assignees": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "login": {
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "login",
                      "id"
                    ],
                    "additionalProperties": true
                  }
                },
                "author": {
                  "type": "object",
                  "properties": {
                    "login": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "login",
                    "id"
                  ],
                  "additionalProperties": true
                },
                "repository": {
                  "type": "object",
                  "properties": {
                    "owner": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "owner",
                    "name"
                  ],
                  "additionalProperties": true
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "id",
                "number",
                "title",
                "state",
                "htmlUrl",
                "createdAt",
                "updatedAt"
              ],
              "additionalProperties": true
            },
            "description": "Issues returned by the GitHub REST API"
          },
          "nextPageToken": {
            "type": [
              "string",
              "null"
            ],
            "description": "Cursor for fetching the next page of issues using the GitHub Link header"
          }
        },
        "required": [
          "success",
          "issues"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "issues": [
          {
            "id": 1823456789,
            "number": 42,
            "title": "Fix pagination bug in workflow list",
            "state": "open",
            "htmlUrl": "https://github.com/example-org/automation-service/issues/42",
            "body": "Pagination breaks when filters are active. Capture request parameters and add regression test.",
            "labels": [
              {
                "id": 601,
                "name": "bug",
                "color": "d73a4a"
              },
              {
                "id": 775,
                "name": "priority-medium",
                "color": "fbca04"
              }
            ],
            "assignees": [
              {
                "login": "automation-engineer",
                "id": 90210
              }
            ],
            "author": {
              "login": "product-automation-bot",
              "id": 12345678
            },
            "repository": {
              "owner": "example-org",
              "name": "automation-service"
            },
            "createdAt": "2024-12-08T17:22:13Z",
            "updatedAt": "2024-12-09T10:04:11Z"
          },
          {
            "id": 1823456790,
            "number": 43,
            "title": "Document connector scaffolding script",
            "state": "open",
            "htmlUrl": "https://github.com/example-org/automation-service/issues/43",
            "body": "Add README section describing metadata scaffolding workflow.",
            "labels": [
              {
                "id": 888,
                "name": "documentation",
                "color": "0075ca"
              }
            ],
            "assignees": [],
            "author": {
              "login": "docs-writer",
              "id": 321654
            },
            "repository": {
              "owner": "example-org",
              "name": "automation-service"
            },
            "createdAt": "2024-12-09T08:02:00Z",
            "updatedAt": "2024-12-09T08:02:00Z"
          }
        ],
        "nextPageToken": "Y3Vyc29yPTQz"
      },
      "runtimes": [
        "node",
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "create_pull_request",
      "name": "Create Pull Request",
      "description": "Create a new pull request",
      "endpoint": "/repos/{owner}/{repo}/pulls",
      "method": "POST",
      "parameters": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "title": {
            "type": "string",
            "description": "Pull request title"
          },
          "head": {
            "type": "string",
            "description": "Branch or commit SHA to merge from"
          },
          "base": {
            "type": "string",
            "description": "Branch to merge into"
          },
          "body": {
            "type": "string",
            "description": "Pull request body/description"
          },
          "draft": {
            "type": "boolean",
            "description": "Create as draft pull request"
          },
          "maintainer_can_modify": {
            "type": "boolean",
            "description": "Allow maintainers to modify the pull request"
          }
        },
        "required": [
          "owner",
          "repo",
          "title",
          "head",
          "base"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          },
          "pullRequest": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "number": {
                "type": "integer"
              },
              "title": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "htmlUrl": {
                "type": "string",
                "format": "uri"
              },
              "body": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "headRef": {
                "type": "string"
              },
              "baseRef": {
                "type": "string"
              },
              "merged": {
                "type": "boolean"
              },
              "mergeable": {
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "id",
              "number",
              "title",
              "state",
              "htmlUrl",
              "headRef",
              "baseRef",
              "createdAt",
              "updatedAt"
            ],
            "additionalProperties": true
          }
        },
        "required": [
          "success",
          "pullRequest"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "pullRequest": {
          "id": 1415926535,
          "number": 108,
          "title": "Add metadata scaffolding helper",
          "state": "open",
          "htmlUrl": "https://github.com/example-org/automation-service/pull/108",
          "body": "Implements helper to backfill runtimes and dedupe settings across connectors.",
          "headRef": "automation/add-metadata-helper",
          "baseRef": "main",
          "merged": false,
          "mergeable": true,
          "createdAt": "2024-12-08T20:55:12Z",
          "updatedAt": "2024-12-09T09:41:33Z"
        }
      },
      "runtimes": [
        "node",
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "update_pull_request",
      "name": "Update Pull Request",
      "description": "Update an existing pull request",
      "endpoint": "/repos/{owner}/{repo}/pulls/{pull_number}",
      "method": "PATCH",
      "parameters": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "pull_number": {
            "type": "number",
            "description": "Pull request number"
          },
          "title": {
            "type": "string",
            "description": "Pull request title"
          },
          "body": {
            "type": "string",
            "description": "Pull request body"
          },
          "state": {
            "type": "string",
            "enum": [
              "open",
              "closed"
            ],
            "description": "Pull request state"
          },
          "base": {
            "type": "string",
            "description": "Branch to merge into"
          }
        },
        "required": [
          "owner",
          "repo",
          "pull_number"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          },
          "pullRequest": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "number": {
                "type": "integer"
              },
              "title": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "htmlUrl": {
                "type": "string",
                "format": "uri"
              },
              "body": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "headRef": {
                "type": "string"
              },
              "baseRef": {
                "type": "string"
              },
              "merged": {
                "type": "boolean"
              },
              "mergeable": {
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "id",
              "number",
              "title",
              "state",
              "htmlUrl",
              "headRef",
              "baseRef",
              "createdAt",
              "updatedAt"
            ],
            "additionalProperties": true
          }
        },
        "required": [
          "success",
          "pullRequest"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "pullRequest": {
          "id": 1415926535,
          "number": 108,
          "title": "Add metadata scaffolding helper",
          "state": "open",
          "htmlUrl": "https://github.com/example-org/automation-service/pull/108",
          "body": "Implements helper to backfill runtimes and dedupe settings across connectors.",
          "headRef": "automation/add-metadata-helper",
          "baseRef": "main",
          "merged": false,
          "mergeable": true,
          "createdAt": "2024-12-08T20:55:12Z",
          "updatedAt": "2024-12-09T09:41:33Z"
        }
      },
      "runtimes": [
        "node",
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "merge_pull_request",
      "name": "Merge Pull Request",
      "description": "Merge a pull request",
      "endpoint": "/repos/{owner}/{repo}/pulls/{pull_number}/merge",
      "method": "PUT",
      "parameters": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "pull_number": {
            "type": "number",
            "description": "Pull request number"
          },
          "commit_title": {
            "type": "string",
            "description": "Merge commit title"
          },
          "commit_message": {
            "type": "string",
            "description": "Merge commit message"
          },
          "merge_method": {
            "type": "string",
            "enum": [
              "merge",
              "squash",
              "rebase"
            ],
            "default": "merge",
            "description": "Merge method"
          }
        },
        "required": [
          "owner",
          "repo",
          "pull_number"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          },
          "pullRequest": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "number": {
                "type": "integer"
              },
              "title": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "htmlUrl": {
                "type": "string",
                "format": "uri"
              },
              "body": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "headRef": {
                "type": "string"
              },
              "baseRef": {
                "type": "string"
              },
              "merged": {
                "type": "boolean"
              },
              "mergeable": {
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "id",
              "number",
              "title",
              "state",
              "htmlUrl",
              "headRef",
              "baseRef",
              "createdAt",
              "updatedAt"
            ],
            "additionalProperties": true
          },
          "sha": {
            "type": "string",
            "description": "Commit SHA created by the merge"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "success",
          "pullRequest",
          "sha"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "pullRequest": {
          "id": 1415926535,
          "number": 108,
          "title": "Add metadata scaffolding helper",
          "state": "open",
          "htmlUrl": "https://github.com/example-org/automation-service/pull/108",
          "body": "Implements helper to backfill runtimes and dedupe settings across connectors.",
          "headRef": "automation/add-metadata-helper",
          "baseRef": "main",
          "merged": true,
          "mergeable": true,
          "createdAt": "2024-12-08T20:55:12Z",
          "updatedAt": "2024-12-09T09:41:33Z",
          "mergedSha": "abc123def4567890"
        },
        "sha": "abc123def4567890",
        "message": "Pull Request successfully merged"
      },
      "runtimes": [
        "node",
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "list_pull_requests",
      "name": "List Pull Requests",
      "description": "List repository pull requests",
      "endpoint": "/repos/{owner}/{repo}/pulls",
      "method": "GET",
      "parameters": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "state": {
            "type": "string",
            "enum": [
              "open",
              "closed",
              "all"
            ],
            "default": "open",
            "description": "Pull request state filter"
          },
          "head": {
            "type": "string",
            "description": "Filter by head branch"
          },
          "base": {
            "type": "string",
            "description": "Filter by base branch"
          },
          "sort": {
            "type": "string",
            "enum": [
              "created",
              "updated",
              "popularity",
              "long-running"
            ],
            "default": "created",
            "description": "Sort field"
          },
          "direction": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "default": "desc",
            "description": "Sort direction"
          }
        },
        "required": [
          "owner",
          "repo"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          },
          "pullRequests": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "number": {
                  "type": "integer"
                },
                "title": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "htmlUrl": {
                  "type": "string",
                  "format": "uri"
                },
                "body": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "headRef": {
                  "type": "string"
                },
                "baseRef": {
                  "type": "string"
                },
                "merged": {
                  "type": "boolean"
                },
                "mergeable": {
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "id",
                "number",
                "title",
                "state",
                "htmlUrl",
                "headRef",
                "baseRef",
                "createdAt",
                "updatedAt"
              ],
              "additionalProperties": true
            },
            "description": "Pull requests returned by the GitHub API"
          },
          "nextPageToken": {
            "type": [
              "string",
              "null"
            ],
            "description": "Opaque cursor for fetching the next page of pull requests"
          }
        },
        "required": [
          "success",
          "pullRequests"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "pullRequests": [
          {
            "id": 1415926535,
            "number": 108,
            "title": "Add metadata scaffolding helper",
            "state": "open",
            "htmlUrl": "https://github.com/example-org/automation-service/pull/108",
            "body": "Implements helper to backfill runtimes and dedupe settings across connectors.",
            "headRef": "automation/add-metadata-helper",
            "baseRef": "main",
            "merged": false,
            "mergeable": true,
            "createdAt": "2024-12-08T20:55:12Z",
            "updatedAt": "2024-12-09T09:41:33Z"
          }
        ],
        "nextPageToken": null
      },
      "runtimes": [
        "node",
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "create_comment",
      "name": "Create Comment",
      "description": "Create a comment on an issue or pull request",
      "parameters": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "issue_number": {
            "type": "number",
            "description": "Issue or pull request number"
          },
          "body": {
            "type": "string",
            "description": "Comment body"
          }
        },
        "required": [
          "owner",
          "repo",
          "issue_number",
          "body"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          },
          "comment": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "body": {
                "type": "string"
              },
              "htmlUrl": {
                "type": "string",
                "format": "uri"
              },
              "user": {
                "type": "object",
                "properties": {
                  "login": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "login",
                  "id"
                ],
                "additionalProperties": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "id",
              "body",
              "htmlUrl",
              "user",
              "createdAt",
              "updatedAt"
            ],
            "additionalProperties": true
          }
        },
        "required": [
          "success",
          "comment"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "comment": {
          "id": 987654321,
          "body": "Thanks for the fix! Regression tests look great.",
          "htmlUrl": "https://github.com/example-org/automation-service/issues/42#issuecomment-1234567890",
          "user": {
            "login": "qa-analyst",
            "id": 600123
          },
          "createdAt": "2024-12-09T09:50:05Z",
          "updatedAt": "2024-12-09T09:50:05Z"
        }
      },
      "runtimes": [
        "node",
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "get_repository",
      "name": "Get Repository",
      "description": "Get repository information",
      "parameters": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          }
        },
        "required": [
          "owner",
          "repo"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          },
          "repository": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "fullName": {
                "type": "string"
              },
              "private": {
                "type": "boolean"
              },
              "htmlUrl": {
                "type": "string",
                "format": "uri"
              },
              "description": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "defaultBranch": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "pushedAt": {
                "type": "string",
                "format": "date-time"
              },
              "owner": {
                "type": "object",
                "properties": {
                  "login": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "login",
                  "id"
                ],
                "additionalProperties": true
              }
            },
            "required": [
              "id",
              "name",
              "fullName",
              "private",
              "htmlUrl",
              "defaultBranch",
              "createdAt",
              "updatedAt"
            ],
            "additionalProperties": true
          }
        },
        "required": [
          "success",
          "repository"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "repository": {
          "id": 1122334455,
          "name": "automation-service",
          "fullName": "example-org/automation-service",
          "private": false,
          "htmlUrl": "https://github.com/example-org/automation-service",
          "description": "Automation platform connectors and workflow engine.",
          "defaultBranch": "main",
          "createdAt": "2023-05-01T15:12:31Z",
          "updatedAt": "2024-12-09T09:40:00Z",
          "pushedAt": "2024-12-09T09:38:44Z",
          "owner": {
            "login": "example-org",
            "id": 999888777
          }
        }
      },
      "runtimes": [
        "node",
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "list_repositories",
      "name": "List Repositories",
      "description": "List repositories for the authenticated user",
      "endpoint": "/user/repos",
      "method": "GET",
      "parameters": {
        "type": "object",
        "properties": {
          "visibility": {
            "type": "string",
            "enum": [
              "all",
              "public",
              "private"
            ],
            "default": "all",
            "description": "Repository visibility filter"
          },
          "affiliation": {
            "type": "string",
            "enum": [
              "owner",
              "collaborator",
              "organization_member"
            ],
            "default": "owner",
            "description": "Repository affiliation filter"
          },
          "type": {
            "type": "string",
            "enum": [
              "all",
              "owner",
              "public",
              "private",
              "member"
            ],
            "default": "all",
            "description": "Repository type filter"
          },
          "sort": {
            "type": "string",
            "enum": [
              "created",
              "updated",
              "pushed",
              "full_name"
            ],
            "default": "full_name",
            "description": "Sort field"
          },
          "direction": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "default": "asc",
            "description": "Sort direction"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          },
          "repositories": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "fullName": {
                  "type": "string"
                },
                "private": {
                  "type": "boolean"
                },
                "htmlUrl": {
                  "type": "string",
                  "format": "uri"
                },
                "description": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "defaultBranch": {
                  "type": "string"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "pushedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "owner": {
                  "type": "object",
                  "properties": {
                    "login": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "login",
                    "id"
                  ],
                  "additionalProperties": true
                }
              },
              "required": [
                "id",
                "name",
                "fullName",
                "private",
                "htmlUrl",
                "defaultBranch",
                "createdAt",
                "updatedAt"
              ],
              "additionalProperties": true
            },
            "description": "Repositories returned for the authenticated user"
          },
          "nextPageToken": {
            "type": [
              "string",
              "null"
            ],
            "description": "Cursor derived from the Link header for subsequent pages"
          }
        },
        "required": [
          "success",
          "repositories"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "repositories": [
          {
            "id": 1122334455,
            "name": "automation-service",
            "fullName": "example-org/automation-service",
            "private": false,
            "htmlUrl": "https://github.com/example-org/automation-service",
            "description": "Automation platform connectors and workflow engine.",
            "defaultBranch": "main",
            "createdAt": "2023-05-01T15:12:31Z",
            "updatedAt": "2024-12-09T09:40:00Z",
            "pushedAt": "2024-12-09T09:38:44Z",
            "owner": {
              "login": "example-org",
              "id": 999888777
            }
          }
        ],
        "nextPageToken": null
      },
      "runtimes": [
        "node",
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "create_webhook",
      "name": "Create Webhook",
      "description": "Create a repository webhook",
      "endpoint": "/repos/{owner}/{repo}/hooks",
      "method": "POST",
      "parameters": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "Webhook URL"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [
              "push"
            ],
            "description": "List of events to trigger webhook"
          },
          "content_type": {
            "type": "string",
            "enum": [
              "json",
              "form"
            ],
            "default": "json",
            "description": "Content type for webhook payload"
          },
          "secret": {
            "type": "string",
            "description": "Secret for webhook signature verification"
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "Whether webhook is active"
          }
        },
        "required": [
          "owner",
          "repo",
          "url"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          },
          "webhook": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "active": {
                "type": "boolean"
              },
              "events": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "config": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "contentType": {
                    "type": "string"
                  }
                },
                "required": [
                  "url",
                  "contentType"
                ],
                "additionalProperties": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "id",
              "name",
              "active",
              "events",
              "config",
              "createdAt",
              "updatedAt"
            ],
            "additionalProperties": true
          }
        },
        "required": [
          "success",
          "webhook"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true,
        "webhook": {
          "id": 123987654,
          "name": "web",
          "active": true,
          "events": [
            "push",
            "pull_request"
          ],
          "config": {
            "url": "https://automation.example.com/webhooks/github",
            "contentType": "json"
          },
          "createdAt": "2024-12-09T09:05:21Z",
          "updatedAt": "2024-12-09T09:05:21Z"
        }
      },
      "runtimes": [
        "node",
        "appsScript"
      ],
      "fallback": null
    }
  ],
  "triggers": [
    {
      "id": "issue_opened",
      "name": "Issue Opened",
      "description": "Triggered when a new issue is opened",
      "type": "webhook",
      "metadata": {
        "signatureVerification": {
          "templateId": "github.sha256",
          "required": true
        },
        "replayWindowSeconds": 600
      },
      "parameters": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner to filter"
          },
          "repo": {
            "type": "string",
            "description": "Repository name to filter"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Filter by specific labels"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "action": {
            "type": "string"
          },
          "number": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "htmlUrl": {
            "type": "string",
            "format": "uri"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "repository": {
            "type": "object",
            "properties": {
              "owner": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "owner",
              "name"
            ],
            "additionalProperties": true
          },
          "author": {
            "type": "object",
            "properties": {
              "login": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              }
            },
            "required": [
              "login",
              "id"
            ],
            "additionalProperties": true
          }
        },
        "required": [
          "id",
          "action",
          "number",
          "title",
          "state",
          "htmlUrl",
          "createdAt",
          "repository"
        ],
        "additionalProperties": true
      },
      "sample": {
        "id": 1823456789,
        "action": "opened",
        "number": 42,
        "title": "Fix pagination bug in workflow list",
        "state": "open",
        "htmlUrl": "https://github.com/example-org/automation-service/issues/42",
        "createdAt": "2024-12-08T17:22:13Z",
        "repository": {
          "owner": "example-org",
          "name": "automation-service"
        },
        "author": {
          "login": "product-automation-bot",
          "id": 12345678
        }
      },
      "dedupe": {
        "strategy": "primaryKey",
        "primaryKey": "id",
        "cursor": "createdAt"
      },
      "runtimes": [
        "node",
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "pull_request_opened",
      "name": "Pull Request Opened",
      "description": "Triggered when a new pull request is opened",
      "type": "webhook",
      "metadata": {
        "signatureVerification": {
          "templateId": "github.sha256",
          "required": true
        },
        "replayWindowSeconds": 600
      },
      "parameters": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner to filter"
          },
          "repo": {
            "type": "string",
            "description": "Repository name to filter"
          },
          "base_branch": {
            "type": "string",
            "description": "Filter by target branch"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "number": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "htmlUrl": {
            "type": "string",
            "format": "uri"
          },
          "headRef": {
            "type": "string"
          },
          "baseRef": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "repository": {
            "type": "object",
            "properties": {
              "owner": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "owner",
              "name"
            ],
            "additionalProperties": true
          },
          "author": {
            "type": "object",
            "properties": {
              "login": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              }
            },
            "required": [
              "login",
              "id"
            ],
            "additionalProperties": true
          }
        },
        "required": [
          "id",
          "number",
          "title",
          "state",
          "htmlUrl",
          "headRef",
          "baseRef",
          "createdAt",
          "repository"
        ],
        "additionalProperties": true
      },
      "sample": {
        "id": 1415926535,
        "number": 108,
        "title": "Add metadata scaffolding helper",
        "state": "open",
        "htmlUrl": "https://github.com/example-org/automation-service/pull/108",
        "headRef": "automation/add-metadata-helper",
        "baseRef": "main",
        "createdAt": "2024-12-08T20:55:12Z",
        "repository": {
          "owner": "example-org",
          "name": "automation-service"
        },
        "author": {
          "login": "automation-engineer",
          "id": 90210
        }
      },
      "dedupe": {
        "strategy": "primaryKey",
        "primaryKey": "id",
        "cursor": "createdAt"
      },
      "runtimes": [
        "node",
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "push",
      "name": "Push",
      "description": "Triggered when commits are pushed to a repository",
      "type": "webhook",
      "metadata": {
        "signatureVerification": {
          "templateId": "github.sha256",
          "required": true
        },
        "replayWindowSeconds": 600
      },
      "parameters": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner to filter"
          },
          "repo": {
            "type": "string",
            "description": "Repository name to filter"
          },
          "branch": {
            "type": "string",
            "description": "Filter by specific branch"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "ref": {
            "type": "string"
          },
          "commitSha": {
            "type": "string"
          },
          "pushedAt": {
            "type": "string",
            "format": "date-time"
          },
          "repository": {
            "type": "object",
            "properties": {
              "owner": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "owner",
              "name"
            ],
            "additionalProperties": true
          },
          "commits": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "author": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string",
                      "format": "email"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "additionalProperties": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "id",
                "message",
                "timestamp"
              ],
              "additionalProperties": true
            }
          }
        },
        "required": [
          "ref",
          "commitSha",
          "pushedAt",
          "repository"
        ],
        "additionalProperties": true
      },
      "sample": {
        "ref": "refs/heads/main",
        "commitSha": "4f9b2c7d8e1f",
        "pushedAt": "2024-12-09T09:38:44Z",
        "repository": {
          "owner": "example-org",
          "name": "automation-service"
        },
        "commits": [
          {
            "id": "4f9b2c7d8e1f",
            "message": "Update connector metadata scaffolding",
            "author": {
              "name": "Automation Bot",
              "email": "bot@example.com"
            },
            "timestamp": "2024-12-09T09:38:44Z"
          }
        ]
      },
      "dedupe": {
        "strategy": "primaryKey",
        "primaryKey": "commitSha",
        "cursor": "pushedAt"
      },
      "runtimes": [
        "node",
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "issue_closed",
      "name": "Issue Closed",
      "description": "Triggered when an issue is closed",
      "type": "webhook",
      "metadata": {
        "signatureVerification": {
          "templateId": "github.sha256",
          "required": true
        },
        "replayWindowSeconds": 600
      },
      "parameters": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner to filter"
          },
          "repo": {
            "type": "string",
            "description": "Repository name to filter"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "action": {
            "type": "string"
          },
          "number": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "htmlUrl": {
            "type": "string",
            "format": "uri"
          },
          "closedAt": {
            "type": "string",
            "format": "date-time"
          },
          "repository": {
            "type": "object",
            "properties": {
              "owner": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "owner",
              "name"
            ],
            "additionalProperties": true
          },
          "closer": {
            "type": "object",
            "properties": {
              "login": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              }
            },
            "required": [
              "login",
              "id"
            ],
            "additionalProperties": true
          }
        },
        "required": [
          "id",
          "action",
          "number",
          "title",
          "state",
          "htmlUrl",
          "closedAt",
          "repository"
        ],
        "additionalProperties": true
      },
      "sample": {
        "id": 1823000000,
        "action": "closed",
        "number": 40,
        "title": "Refresh OAuth scopes list",
        "state": "closed",
        "htmlUrl": "https://github.com/example-org/automation-service/issues/40",
        "closedAt": "2024-12-09T08:30:04Z",
        "repository": {
          "owner": "example-org",
          "name": "automation-service"
        },
        "closer": {
          "login": "automation-engineer",
          "id": 90210
        }
      },
      "dedupe": {
        "strategy": "primaryKey",
        "primaryKey": "id",
        "cursor": "closedAt"
      },
      "runtimes": [
        "node",
        "appsScript"
      ],
      "fallback": null
    },
    {
      "id": "pull_request_merged",
      "name": "Pull Request Merged",
      "description": "Triggered when a pull request is merged",
      "type": "webhook",
      "metadata": {
        "signatureVerification": {
          "templateId": "github.sha256",
          "required": true
        },
        "replayWindowSeconds": 600
      },
      "parameters": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner to filter"
          },
          "repo": {
            "type": "string",
            "description": "Repository name to filter"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "number": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "htmlUrl": {
            "type": "string",
            "format": "uri"
          },
          "mergedAt": {
            "type": "string",
            "format": "date-time"
          },
          "mergeCommitSha": {
            "type": "string"
          },
          "repository": {
            "type": "object",
            "properties": {
              "owner": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "owner",
              "name"
            ],
            "additionalProperties": true
          }
        },
        "required": [
          "id",
          "number",
          "title",
          "state",
          "htmlUrl",
          "mergedAt",
          "repository"
        ],
        "additionalProperties": true
      },
      "sample": {
        "id": 1415000000,
        "number": 105,
        "title": "Improve connector dedupe defaults",
        "state": "closed",
        "htmlUrl": "https://github.com/example-org/automation-service/pull/105",
        "mergedAt": "2024-12-08T11:15:42Z",
        "mergeCommitSha": "abc123def4567890",
        "repository": {
          "owner": "example-org",
          "name": "automation-service"
        }
      },
      "dedupe": {
        "strategy": "primaryKey",
        "primaryKey": "id",
        "cursor": "mergedAt"
      },
      "runtimes": [
        "node",
        "appsScript"
      ],
      "fallback": null
    }
  ],
  "testConnection": {
    "method": "GET",
    "endpoint": "/user"
  },
  "release": {
    "semver": "1.0.0",
    "status": "stable",
    "isBeta": false,
    "betaStartedAt": null,
    "deprecationWindow": {
      "startDate": null,
      "sunsetDate": null
    }
  },
  "schemaVersion": "1.0"
}
