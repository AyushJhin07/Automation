{
  "id": "trello-enhanced",
  "name": "Trello Enhanced",
  "description": "Enhanced Trello integration with advanced board, card, and automation features",
  "category": "Project Management",
  "icon": "trello",
  "color": "#0079BF",
  "version": "2.0.0",
  "authentication": {
    "type": "api_key",
    "config": {
      "apiKeyLocation": "query",
      "apiKeyName": "key",
      "additionalParams": {
        "token": "{token}"
      }
    }
  },
  "baseUrl": "https://api.trello.com/1",
  "actions": [
    {
      "id": "test_connection",
      "name": "Test Connection",
      "description": "Test the connection to Trello",
      "parameters": {
        "type": "object",
        "properties": {},
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "create_board",
      "name": "Create Board",
      "description": "Create a new board",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Board name"
          },
          "desc": {
            "type": "string",
            "description": "Board description"
          },
          "idOrganization": {
            "type": "string",
            "description": "Organization ID"
          },
          "prefs_permissionLevel": {
            "type": "string",
            "enum": [
              "private",
              "org",
              "public"
            ],
            "default": "private",
            "description": "Permission level"
          },
          "prefs_voting": {
            "type": "string",
            "enum": [
              "disabled",
              "members",
              "observers",
              "org",
              "public"
            ],
            "default": "disabled",
            "description": "Voting permission"
          },
          "prefs_comments": {
            "type": "string",
            "enum": [
              "disabled",
              "members",
              "observers",
              "org",
              "public"
            ],
            "default": "members",
            "description": "Comment permission"
          },
          "prefs_background": {
            "type": "string",
            "description": "Background color or image"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "create_card",
      "name": "Create Card",
      "description": "Create a new card",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Card name"
          },
          "desc": {
            "type": "string",
            "description": "Card description"
          },
          "pos": {
            "type": "string",
            "description": "Position of the card"
          },
          "due": {
            "type": "string",
            "format": "date-time",
            "description": "Due date"
          },
          "dueComplete": {
            "type": "boolean",
            "description": "Whether the due date is complete"
          },
          "idList": {
            "type": "string",
            "description": "List ID"
          },
          "idMembers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of member IDs"
          },
          "idLabels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of label IDs"
          },
          "idChecklists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of checklist IDs"
          },
          "address": {
            "type": "string",
            "description": "Address for location"
          },
          "locationName": {
            "type": "string",
            "description": "Location name"
          },
          "coordinates": {
            "type": "string",
            "description": "GPS coordinates"
          }
        },
        "required": [
          "name",
          "idList"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "create_checklist",
      "name": "Create Checklist",
      "description": "Create a new checklist on a card",
      "parameters": {
        "type": "object",
        "properties": {
          "idCard": {
            "type": "string",
            "description": "Card ID"
          },
          "name": {
            "type": "string",
            "description": "Checklist name"
          },
          "pos": {
            "type": "string",
            "description": "Position of the checklist"
          }
        },
        "required": [
          "idCard",
          "name"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "add_checklist_item",
      "name": "Add Checklist Item",
      "description": "Add an item to a checklist",
      "parameters": {
        "type": "object",
        "properties": {
          "idChecklist": {
            "type": "string",
            "description": "Checklist ID"
          },
          "name": {
            "type": "string",
            "description": "Item name"
          },
          "pos": {
            "type": "string",
            "description": "Position of the item"
          },
          "checked": {
            "type": "boolean",
            "default": false,
            "description": "Whether the item is checked"
          }
        },
        "required": [
          "idChecklist",
          "name"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "add_attachment",
      "name": "Add Attachment",
      "description": "Add an attachment to a card",
      "parameters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Card ID"
          },
          "name": {
            "type": "string",
            "description": "Attachment name"
          },
          "url": {
            "type": "string",
            "description": "Attachment URL"
          },
          "file": {
            "type": "string",
            "description": "File content (base64 encoded)"
          },
          "mimeType": {
            "type": "string",
            "description": "MIME type of the file"
          },
          "setCover": {
            "type": "boolean",
            "default": false,
            "description": "Whether to set as card cover"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "create_label",
      "name": "Create Label",
      "description": "Create a new label on a board",
      "parameters": {
        "type": "object",
        "properties": {
          "idBoard": {
            "type": "string",
            "description": "Board ID"
          },
          "name": {
            "type": "string",
            "description": "Label name"
          },
          "color": {
            "type": "string",
            "enum": [
              "yellow",
              "purple",
              "blue",
              "red",
              "green",
              "orange",
              "black",
              "sky",
              "pink",
              "lime"
            ],
            "description": "Label color"
          }
        },
        "required": [
          "idBoard",
          "name",
          "color"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "search_cards",
      "name": "Search Cards",
      "description": "Search for cards across boards",
      "parameters": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "Search query"
          },
          "idBoards": {
            "type": "string",
            "description": "Comma-separated board IDs to search"
          },
          "idOrganizations": {
            "type": "string",
            "description": "Comma-separated organization IDs"
          },
          "idCards": {
            "type": "string",
            "description": "Comma-separated card IDs"
          },
          "modelTypes": {
            "type": "string",
            "default": "cards",
            "description": "Types of objects to search"
          },
          "board_fields": {
            "type": "string",
            "description": "Board fields to include"
          },
          "boards_limit": {
            "type": "number",
            "minimum": 1,
            "maximum": 1000,
            "default": 10,
            "description": "Limit for boards"
          },
          "card_fields": {
            "type": "string",
            "description": "Card fields to include"
          },
          "cards_limit": {
            "type": "number",
            "minimum": 1,
            "maximum": 1000,
            "default": 10,
            "description": "Limit for cards"
          },
          "cards_page": {
            "type": "number",
            "minimum": 0,
            "default": 0,
            "description": "Page number for cards"
          },
          "card_board": {
            "type": "boolean",
            "description": "Whether to include card board"
          },
          "card_list": {
            "type": "boolean",
            "description": "Whether to include card list"
          },
          "card_members": {
            "type": "boolean",
            "description": "Whether to include card members"
          },
          "card_stickers": {
            "type": "boolean",
            "description": "Whether to include card stickers"
          },
          "card_attachments": {
            "type": "string",
            "description": "Card attachments to include"
          },
          "organization_fields": {
            "type": "string",
            "description": "Organization fields to include"
          },
          "organizations_limit": {
            "type": "number",
            "minimum": 1,
            "maximum": 1000,
            "default": 10,
            "description": "Limit for organizations"
          },
          "member_fields": {
            "type": "string",
            "description": "Member fields to include"
          },
          "members_limit": {
            "type": "number",
            "minimum": 1,
            "maximum": 1000,
            "default": 10,
            "description": "Limit for members"
          },
          "partial": {
            "type": "boolean",
            "description": "Whether to allow partial matches"
          }
        },
        "required": [
          "query"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "create_webhook",
      "name": "Create Webhook",
      "description": "Create a webhook for a model",
      "parameters": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Webhook description"
          },
          "callbackURL": {
            "type": "string",
            "description": "Callback URL"
          },
          "idModel": {
            "type": "string",
            "description": "Model ID (board, card, etc.)"
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "Whether webhook is active"
          }
        },
        "required": [
          "callbackURL",
          "idModel"
        ],
        "additionalProperties": false
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation succeeded."
          }
        },
        "required": [
          "success"
        ],
        "additionalProperties": true
      },
      "sample": {
        "success": true
      }
    }
  ],
  "triggers": [
    {
      "id": "card_created",
      "name": "Card Created",
      "description": "Triggered when a new card is created",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "idBoard": {
            "type": "string",
            "description": "Board ID to monitor"
          },
          "idList": {
            "type": "string",
            "description": "List ID to monitor"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "action": {
            "type": "object"
          },
          "model": {
            "type": "object"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "card_moved",
      "name": "Card Moved",
      "description": "Triggered when a card is moved between lists",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "idBoard": {
            "type": "string",
            "description": "Board ID to monitor"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "action": {
            "type": "object"
          },
          "model": {
            "type": "object"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "sample": {
        "success": true
      }
    },
    {
      "id": "checklist_item_completed",
      "name": "Checklist Item Completed",
      "description": "Triggered when a checklist item is marked complete",
      "type": "webhook",
      "parameters": {
        "type": "object",
        "properties": {
          "idBoard": {
            "type": "string",
            "description": "Board ID to monitor"
          }
        },
        "required": [],
        "additionalProperties": false
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "action": {
            "type": "object"
          },
          "model": {
            "type": "object"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "sample": {
        "success": true
      }
    }
  ],
  "testConnection": {
    "method": "GET",
    "endpoint": "/members/me"
  },
  "release": {
    "semver": "2.0.0",
    "status": "stable",
    "isBeta": false,
    "betaStartedAt": null,
    "deprecationWindow": {
      "startDate": null,
      "sunsetDate": null
    }
  },
  "schemaVersion": "1.0"
}
