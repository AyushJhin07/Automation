{
  "name": "rest-express",
  "version": "1.0.0",
  "type": "module",
  "license": "MIT",
  "engines": {
    "node": ">=22.0.0",
    "npm": ">=10.0.0"
  },
  "scripts": {
    "dev": "npm run check:deps && NODE_ENV=development tsx server/index.ts",
    "dev:alt": "SKIP_DB_VALIDATION=true DISABLE_VITE=true NODE_ENV=development DATABASE_URL=postgresql://user:pass@db.local/automation npm run build:server && node dist/index.js",
    "dev:fast": "npx drizzle-kit push && NODE_ENV=development tsx server/index.ts",
    "dev:api": "NODE_ENV=development tsx watch server/index.ts",
    "dev:worker": "NODE_ENV=development tsx watch server/workers/execution.ts",
    "dev:rotation": "NODE_ENV=development tsx watch server/workers/encryption-rotation.ts",
    "dev:scheduler": "NODE_ENV=development tsx watch server/workers/scheduler.ts",
    "dev:timers": "NODE_ENV=development tsx watch server/workers/timerDispatcher.ts",
    "dev:stack": "tsx scripts/dev-stack.ts",
    "dev:bootstrap": "tsx scripts/dev-bootstrap.ts",
    "dev:smoke": "tsx scripts/dev-smoke-run.ts",
    "dev:webhook": "tsx scripts/dev-webhook-smoke.ts",
    "dev:oauth": "tsx scripts/dev-oauth-smoke.ts",
    "ci:smoke-local": "tsx scripts/ci-smoke.ts",
    "bootstrap:secrets": "tsx scripts/bootstrap-secrets.ts",
    "build": "npm run check:deps && npm run build:client && npm run build:server",
    "build:client": "vite build",
    "build:server": "esbuild server/index.ts server/workers/execution.ts server/workers/scheduler.ts server/workers/timerDispatcher.ts server/workers/encryption-rotation.ts --platform=node --packages=external --bundle --format=esm --outdir=dist --outbase=server",
    "start": "npm run start:api",
    "start:api": "NODE_ENV=production node dist/index.js",
    "start:worker": "NODE_ENV=production node dist/workers/execution.js",
    "start:scheduler": "NODE_ENV=production node dist/workers/scheduler.js",
    "start:timers": "NODE_ENV=production node dist/workers/timerDispatcher.js",
    "start:rotation": "NODE_ENV=production node dist/workers/encryption-rotation.js",
    "check": "tsc",
    "check:queue": "tsx scripts/check-queue-readiness.ts",
    "check:deps": "node scripts/check-deps.js",
    "fix:deps": "rm -rf node_modules package-lock.json && npm cache clean --force && npm install",
    "lint": "npm run check && tsx scripts/check-connector-parity.ts && npm run check:connectors && tsx scripts/validate-procfile.ts",
    "db:push": "drizzle-kit push",
    "db:fix-execution-logs": "tsx scripts/fix-execution-logs-pk-fk.ts",
    "test": "tsx server/services/__tests__/ConnectionService.encryption.test.ts && tsx server/services/__tests__/EncryptionService.rotation.integration.test.ts && tsx server/services/__tests__/AnswerNormalizerService.test.ts && tsx server/routes/__tests__/workflow-deploy.test.ts && tsx server/routes/__tests__/workflow-read-auth.test.ts && tsx server/routes/__tests__/registry-debug.test.ts && tsx server/routes/__tests__/workflow-execute.test.ts && tsx server/routes/__tests__/workflow-dry-run.test.ts && tsx server/routes/__tests__/webhook-verification-failures.test.ts && tsx client/src/components/workflow/__tests__/SmartParametersPanel.test.ts && tsx client/src/components/workflow/__tests__/VerificationFailurePanel.test.tsx && tsx client/src/components/workflow/__tests__/NodeConfigurationModal.regression.test.ts && tsx client/src/components/workflow/__tests__/NodeSidebar.lifecycle.test.tsx && tsx client/src/components/workflow/__tests__/NodeSidebar.connectors.test.tsx && tsx client/src/graph/__tests__/transform.test.ts && tsx server/integrations/__tests__/IntegrationManager.test.ts && tsx server/integrations/__tests__/BaseAPIClient.helpers.test.ts && tsx server/integrations/__tests__/AwsClients.test.ts && tsx server/integrations/__tests__/MarketingAPIClients.test.ts && tsx server/workflow/__tests__/WorkflowRuntimeService.test.ts && tsx server/workflow/__tests__/WorkflowRuntime.gmail.integration.test.ts && tsx server/core/__tests__/ParameterResolver.llm.test.ts && tsx server/runtime/__tests__/fallbackRegistry.test.ts && tsx server/runtime/__tests__/WorkflowRuntime.sandbox.test.ts && tsx server/workflow/__tests__/WorkflowRepository.test.ts && tsx server/workflow/__tests__/WorkflowRepository.fallback.test.ts && tsx server/services/__tests__/TriggerPersistenceService.fallback.test.ts && tsx server/webhooks/__tests__/WebhookManager.persistence.test.ts && tsx server/workers/__tests__/ExecutionWorker.failure.test.ts && tsx server/workers/__tests__/SchedulerWorker.lock.test.ts && tsx server/services/__tests__/ExecutionQueueService.quota.test.ts && npm run check:connectors",
    "trigger-admin": "tsx scripts/trigger-admin.ts",
    "inventory:connectors": "node scripts/inventory-connectors.js",
    "audit:connectors": "tsx scripts/connector-audit.ts",
    "propose:batch1": "node scripts/propose-batch1.js",
    "derive:webhooks": "node scripts/derive-webhooks.js",
    "generate:risks": "node scripts/generate-risk-skeleton.js",
    "init:roadmap": "node scripts/init-roadmap.js",
    "audit:bronze": "node scripts/audit-bronze.js",
    "audit:secrets": "tsx scripts/audit-secrets.ts",
    "scaffold:connector-metadata": "node scripts/scaffold-connector-metadata.js",
    "smoke:e2e": "node scripts/e2e-smoke.js",
    "smoke:connectors": "tsx scripts/connector-smoke.ts",
    "smoke:supported": "tsx scripts/smoke-supported.ts",
    "ci:smoke": "tsx scripts/connector-smoke.ts --use-simulator",
    "seed:encryption-key": "tsx scripts/seed-encryption-key.ts",
    "observability:check": "tsx scripts/observability-check.ts",
    "check:connectors": "tsx scripts/validate-connectors.ts && tsx scripts/validate-connector-ops.ts"
  },
  "dependencies": {
    "@aws-sdk/client-cloudformation": "^3.676.0",
    "@aws-sdk/client-codepipeline": "^3.676.0",
    "@google/clasp": "^3.0.6-alpha",
    "@google/generative-ai": "0.24.1",
    "@hookform/resolvers": "^3.10.0",
    "@jridgewell/trace-mapping": "^0.3.25",
    "@neondatabase/serverless": "^0.10.4",
    "@opentelemetry/api": "^1.9.0",
    "@opentelemetry/api-logs": "^0.52.0",
    "@opentelemetry/exporter-jaeger": "2.0.1",
    "@opentelemetry/exporter-logs-otlp-http": "0.52.0",
    "@opentelemetry/exporter-metrics-otlp-http": "^0.52.0",
    "@opentelemetry/exporter-prometheus": "^0.52.0",
    "@opentelemetry/exporter-trace-otlp-http": "^0.52.0",
    "@opentelemetry/resources": "^1.9.0",
    "@opentelemetry/sdk-logs": "^0.52.0",
    "@opentelemetry/sdk-metrics": "^1.9.0",
    "@opentelemetry/sdk-node": "^0.52.0",
    "@opentelemetry/semantic-conventions": "^1.9.0",
    "@radix-ui/react-accordion": "^1.2.12",
    "@radix-ui/react-alert-dialog": "^1.1.7",
    "@radix-ui/react-aspect-ratio": "^1.1.3",
    "@radix-ui/react-avatar": "^1.1.4",
    "@radix-ui/react-checkbox": "^1.1.5",
    "@radix-ui/react-collapsible": "^1.1.4",
    "@radix-ui/react-context-menu": "^2.2.7",
    "@radix-ui/react-dialog": "^1.1.15",
    "@radix-ui/react-dropdown-menu": "^2.1.7",
    "@radix-ui/react-hover-card": "^1.1.7",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-menubar": "^1.1.7",
    "@radix-ui/react-navigation-menu": "^1.2.6",
    "@radix-ui/react-popover": "^1.1.7",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-radio-group": "^1.2.4",
    "@radix-ui/react-scroll-area": "^1.2.4",
    "@radix-ui/react-select": "^2.2.6",
    "@radix-ui/react-separator": "^1.1.3",
    "@radix-ui/react-slider": "^1.2.4",
    "@radix-ui/react-slot": "^1.2.0",
    "@radix-ui/react-switch": "^1.1.4",
    "@radix-ui/react-tabs": "^1.1.13",
    "@radix-ui/react-toast": "^1.2.15",
    "@radix-ui/react-toggle": "^1.1.3",
    "@radix-ui/react-toggle-group": "^1.1.3",
    "@radix-ui/react-tooltip": "^1.2.8",
    "@tanstack/react-query": "^5.85.5",
    "@types/crypto-js": "^4.2.2",
    "@types/jsonwebtoken": "^9.0.10",
    "ajv": "8.17.1",
    "ajv-formats": "3.0.1",
    "bullmq": "^5.27.2",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "^1.1.1",
    "connect-pg-simple": "^10.0.0",
    "cors": "^2.8.5",
    "crypto-js": "^4.2.0",
    "date-fns": "^3.6.0",
    "dotenv": "17.2.1",
    "drizzle-orm": "^0.39.3",
    "drizzle-zod": "^0.7.0",
    "embla-carousel-react": "^8.6.0",
    "express": "^4.21.2",
    "express-session": "^1.18.1",
    "framer-motion": "^11.13.1",
    "input-otp": "^1.4.2",
    "jsonwebtoken": "9.0.2",
    "lucide-react": "^0.453.0",
    "memorystore": "^1.6.7",
    "nanoid": "^5.1.5",
    "next-themes": "^0.4.6",
    "passport": "^0.7.0",
    "passport-local": "^1.0.0",
    "pg": "8.16.3",
    "react": "^18.3.1",
    "react-day-picker": "^8.10.1",
    "react-dom": "^18.3.1",
    "react-helmet-async": "^2.0.5",
    "react-hook-form": "^7.55.0",
    "react-icons": "^5.4.0",
    "react-resizable-panels": "^2.1.7",
    "react-router-dom": "^7.8.1",
    "reactflow": "^11.11.4",
    "recharts": "^2.15.2",
    "sonner": "^2.0.7",
    "tailwind-merge": "^2.6.0",
    "tailwindcss-animate": "^1.0.7",
    "tw-animate-css": "^1.2.5",
    "vaul": "^1.1.2",
    "wouter": "^3.3.5",
    "ws": "^8.18.0",
    "zod": "^3.24.2",
    "zod-validation-error": "^3.4.0"
  },
  "devDependencies": {
    "@replit/vite-plugin-cartographer": "^0.2.5",
    "@replit/vite-plugin-runtime-error-modal": "^0.0.3",
    "@tailwindcss/typography": "^0.5.16",
    "@tailwindcss/vite": "^4.1.3",
    "@testing-library/jest-dom": "6.8.0",
    "@testing-library/react": "16.3.0",
    "@testing-library/user-event": "14.6.1",
    "@types/connect-pg-simple": "^7.0.3",
    "@types/express": "4.17.21",
    "@types/express-session": "^1.18.0",
    "@types/jsdom": "21.1.7",
    "@types/node": "^20.16.11",
    "@types/passport": "^1.0.16",
    "@types/passport-local": "^1.0.38",
    "@types/react": "^18.3.23",
    "@types/react-dom": "^18.3.7",
    "@types/ws": "^8.5.13",
    "@vitejs/plugin-react": "^4.3.2",
    "autoprefixer": "^10.4.21",
    "drizzle-kit": "^0.30.4",
    "esbuild": "^0.25.0",
    "jsdom": "24.1.3",
    "postcss": "^8.4.47",
    "tailwindcss": "^3.4.17",
    "tsx": "^4.19.1",
    "typescript": "5.6.3",
    "vite": "^5.4.14",
    "vitest": "3.2.4"
  },
  "optionalDependencies": {
    "bufferutil": "^4.0.8"
  }
}
