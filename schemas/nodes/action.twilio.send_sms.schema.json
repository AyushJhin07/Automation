{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://apps-script-studio.com/schemas/nodes/action.twilio.send_sms.schema.json",
  "title": "Twilio - Send SMS",
  "description": "Send an SMS message",
  "type": "object",
  "required": [
    "id",
    "type",
    "position",
    "parameters"
  ],
  "properties": {
    "id": {
      "type": "string",
      "pattern": "^[a-zA-Z0-9_-]+$",
      "description": "Unique identifier for the node"
    },
    "type": {
      "type": "string",
      "const": "action.twilio.send_sms",
      "description": "Node type identifier"
    },
    "position": {
      "type": "object",
      "properties": {
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        }
      },
      "required": [
        "x",
        "y"
      ],
      "additionalProperties": false
    },
    "parameters": {
      "type": "object",
      "properties": {
        "to": {
          "type": "string",
          "description": "Phone number to send SMS to (E.164 format)"
        },
        "from": {
          "type": "string",
          "description": "Twilio phone number to send from"
        },
        "body": {
          "type": "string",
          "description": "Message body (up to 1600 characters)"
        },
        "messaging_service_sid": {
          "type": "string",
          "description": "Messaging Service SID (alternative to 'from')"
        },
        "status_callback": {
          "type": "string",
          "description": "URL to receive status callbacks"
        },
        "status_callback_method": {
          "type": "string",
          "enum": [
            "GET",
            "POST"
          ],
          "default": "POST",
          "description": "HTTP method for status callback"
        },
        "application_sid": {
          "type": "string",
          "description": "Application SID for status callbacks"
        },
        "max_price": {
          "type": "string",
          "description": "Maximum price per message unit"
        },
        "provide_feedback": {
          "type": "boolean",
          "description": "Whether to enable feedback collection"
        },
        "attempt": {
          "type": "number",
          "minimum": 1,
          "maximum": 3,
          "description": "Number of delivery attempts"
        },
        "validity_period": {
          "type": "number",
          "minimum": 1,
          "maximum": 14400,
          "description": "Message validity period in seconds"
        },
        "force_delivery": {
          "type": "boolean",
          "description": "Whether to force delivery"
        },
        "content_retention": {
          "type": "string",
          "enum": [
            "retain",
            "discard"
          ],
          "description": "Content retention policy"
        },
        "address_retention": {
          "type": "string",
          "enum": [
            "retain",
            "discard"
          ],
          "description": "Address retention policy"
        },
        "smart_encoded": {
          "type": "boolean",
          "description": "Whether to use smart encoding"
        },
        "persistent_action": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Persistent action buttons"
        },
        "shorten_urls": {
          "type": "boolean",
          "description": "Whether to automatically shorten URLs"
        },
        "schedule_type": {
          "type": "string",
          "enum": [
            "fixed"
          ],
          "description": "Schedule type for delayed sending"
        },
        "send_at": {
          "type": "string",
          "format": "date-time",
          "description": "When to send the message (ISO 8601)"
        },
        "send_as_mms": {
          "type": "boolean",
          "description": "Whether to send as MMS"
        },
        "content_variables": {
          "type": "object",
          "description": "Template variable values"
        }
      },
      "required": [
        "to",
        "body"
      ],
      "additionalProperties": false
    },
    "metadata": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "category": {
          "type": "string",
          "const": "Communication"
        },
        "appName": {
          "type": "string",
          "const": "Twilio"
        },
        "requiredScopes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false
}