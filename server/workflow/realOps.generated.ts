/**
 * THIS FILE IS AUTO-GENERATED.
 * Generated by scripts/generate-apps-script-builders.ts
 * Do not edit this file directly.
 */

export const GENERATED_REAL_OPS: Record<string, (config: any) => string> = {
  'action.adobesign:cancel_agreement': (_config) => `
function step_action_adobesign_cancel_agreement(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#adobesign): Implement action.adobesign:cancel_agreement Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'adobesign', operation: 'action.adobesign:cancel_agreement' });
  throw new Error('TODO[apps-script-backlog]: Implement action.adobesign:cancel_agreement. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.adobesign:create_agreement': (_config) => `
function step_action_adobesign_create_agreement(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#adobesign): Implement action.adobesign:create_agreement Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'adobesign', operation: 'action.adobesign:create_agreement' });
  throw new Error('TODO[apps-script-backlog]: Implement action.adobesign:create_agreement. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.adobesign:get_agreement': (_config) => `
function step_action_adobesign_get_agreement(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#adobesign): Implement action.adobesign:get_agreement Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'adobesign', operation: 'action.adobesign:get_agreement' });
  throw new Error('TODO[apps-script-backlog]: Implement action.adobesign:get_agreement. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.adobesign:send_agreement': (_config) => `
function step_action_adobesign_send_agreement(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#adobesign): Implement action.adobesign:send_agreement Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'adobesign', operation: 'action.adobesign:send_agreement' });
  throw new Error('TODO[apps-script-backlog]: Implement action.adobesign:send_agreement. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.adobesign:test_connection': (_config) => `
function step_action_adobesign_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#adobesign): Implement action.adobesign:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'adobesign', operation: 'action.adobesign:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.adobesign:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.adp:create_worker': (_config) => `
function step_action_adp_create_worker(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#adp): Implement action.adp:create_worker Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'adp', operation: 'action.adp:create_worker' });
  throw new Error('TODO[apps-script-backlog]: Implement action.adp:create_worker. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.adp:get_worker': (_config) => `
function step_action_adp_get_worker(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#adp): Implement action.adp:get_worker Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'adp', operation: 'action.adp:get_worker' });
  throw new Error('TODO[apps-script-backlog]: Implement action.adp:get_worker. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.adp:test_connection': (_config) => `
function step_action_adp_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#adp): Implement action.adp:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'adp', operation: 'action.adp:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.adp:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.adp:update_worker': (_config) => `
function step_action_adp_update_worker(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#adp): Implement action.adp:update_worker Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'adp', operation: 'action.adp:update_worker' });
  throw new Error('TODO[apps-script-backlog]: Implement action.adp:update_worker. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.adyen:capture_payment': (_config) => `
function step_action_adyen_capture_payment(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#adyen): Implement action.adyen:capture_payment Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'adyen', operation: 'action.adyen:capture_payment' });
  throw new Error('TODO[apps-script-backlog]: Implement action.adyen:capture_payment. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.adyen:create_payment': (_config) => `
function step_action_adyen_create_payment(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#adyen): Implement action.adyen:create_payment Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'adyen', operation: 'action.adyen:create_payment' });
  throw new Error('TODO[apps-script-backlog]: Implement action.adyen:create_payment. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.adyen:refund_payment': (_config) => `
function step_action_adyen_refund_payment(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#adyen): Implement action.adyen:refund_payment Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'adyen', operation: 'action.adyen:refund_payment' });
  throw new Error('TODO[apps-script-backlog]: Implement action.adyen:refund_payment. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.adyen:test_connection': (_config) => `
function step_action_adyen_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#adyen): Implement action.adyen:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'adyen', operation: 'action.adyen:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.adyen:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.airtable-enhanced:batch_create': (_config) => `
function step_action_airtable_enhanced_batch_create(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#airtable-enhanced): Implement action.airtable-enhanced:batch_create Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'airtable-enhanced', operation: 'action.airtable-enhanced:batch_create' });
  throw new Error('TODO[apps-script-backlog]: Implement action.airtable-enhanced:batch_create. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.airtable-enhanced:batch_update': (_config) => `
function step_action_airtable_enhanced_batch_update(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#airtable-enhanced): Implement action.airtable-enhanced:batch_update Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'airtable-enhanced', operation: 'action.airtable-enhanced:batch_update' });
  throw new Error('TODO[apps-script-backlog]: Implement action.airtable-enhanced:batch_update. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.airtable-enhanced:create_record': (_config) => `
function step_action_airtable_enhanced_create_record(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#airtable-enhanced): Implement action.airtable-enhanced:create_record Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'airtable-enhanced', operation: 'action.airtable-enhanced:create_record' });
  throw new Error('TODO[apps-script-backlog]: Implement action.airtable-enhanced:create_record. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.airtable-enhanced:delete_record': (_config) => `
function step_action_airtable_enhanced_delete_record(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#airtable-enhanced): Implement action.airtable-enhanced:delete_record Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'airtable-enhanced', operation: 'action.airtable-enhanced:delete_record' });
  throw new Error('TODO[apps-script-backlog]: Implement action.airtable-enhanced:delete_record. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.airtable-enhanced:get_record': (_config) => `
function step_action_airtable_enhanced_get_record(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#airtable-enhanced): Implement action.airtable-enhanced:get_record Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'airtable-enhanced', operation: 'action.airtable-enhanced:get_record' });
  throw new Error('TODO[apps-script-backlog]: Implement action.airtable-enhanced:get_record. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.airtable-enhanced:list_records': (_config) => `
function step_action_airtable_enhanced_list_records(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#airtable-enhanced): Implement action.airtable-enhanced:list_records Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'airtable-enhanced', operation: 'action.airtable-enhanced:list_records' });
  throw new Error('TODO[apps-script-backlog]: Implement action.airtable-enhanced:list_records. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.airtable-enhanced:test_connection': (_config) => `
function step_action_airtable_enhanced_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#airtable-enhanced): Implement action.airtable-enhanced:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'airtable-enhanced', operation: 'action.airtable-enhanced:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.airtable-enhanced:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.airtable-enhanced:update_record': (_config) => `
function step_action_airtable_enhanced_update_record(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#airtable-enhanced): Implement action.airtable-enhanced:update_record Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'airtable-enhanced', operation: 'action.airtable-enhanced:update_record' });
  throw new Error('TODO[apps-script-backlog]: Implement action.airtable-enhanced:update_record. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.airtable:create_record': (_config) => `
function step_action_airtable_create_record(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#airtable): Implement action.airtable:create_record Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'airtable', operation: 'action.airtable:create_record' });
  throw new Error('TODO[apps-script-backlog]: Implement action.airtable:create_record. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.airtable:delete_record': (_config) => `
function step_action_airtable_delete_record(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#airtable): Implement action.airtable:delete_record Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'airtable', operation: 'action.airtable:delete_record' });
  throw new Error('TODO[apps-script-backlog]: Implement action.airtable:delete_record. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.airtable:get_record': (_config) => `
function step_action_airtable_get_record(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#airtable): Implement action.airtable:get_record Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'airtable', operation: 'action.airtable:get_record' });
  throw new Error('TODO[apps-script-backlog]: Implement action.airtable:get_record. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.airtable:list_records': (_config) => `
function step_action_airtable_list_records(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#airtable): Implement action.airtable:list_records Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'airtable', operation: 'action.airtable:list_records' });
  throw new Error('TODO[apps-script-backlog]: Implement action.airtable:list_records. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.airtable:test_connection': (_config) => `
function step_action_airtable_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#airtable): Implement action.airtable:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'airtable', operation: 'action.airtable:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.airtable:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.airtable:update_record': (_config) => `
function step_action_airtable_update_record(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#airtable): Implement action.airtable:update_record Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'airtable', operation: 'action.airtable:update_record' });
  throw new Error('TODO[apps-script-backlog]: Implement action.airtable:update_record. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.ansible:add_host': (_config) => `
function step_action_ansible_add_host(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#ansible): Implement action.ansible:add_host Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'ansible', operation: 'action.ansible:add_host' });
  throw new Error('TODO[apps-script-backlog]: Implement action.ansible:add_host. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.ansible:create_inventory': (_config) => `
function step_action_ansible_create_inventory(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#ansible): Implement action.ansible:create_inventory Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'ansible', operation: 'action.ansible:create_inventory' });
  throw new Error('TODO[apps-script-backlog]: Implement action.ansible:create_inventory. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.ansible:delete_job_template': (_config) => `
function step_action_ansible_delete_job_template(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#ansible): Implement action.ansible:delete_job_template Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'ansible', operation: 'action.ansible:delete_job_template' });
  throw new Error('TODO[apps-script-backlog]: Implement action.ansible:delete_job_template. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.ansible:get_job_status': (_config) => `
function step_action_ansible_get_job_status(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#ansible): Implement action.ansible:get_job_status Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'ansible', operation: 'action.ansible:get_job_status' });
  throw new Error('TODO[apps-script-backlog]: Implement action.ansible:get_job_status. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.ansible:launch_job_template': (_config) => `
function step_action_ansible_launch_job_template(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#ansible): Implement action.ansible:launch_job_template Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'ansible', operation: 'action.ansible:launch_job_template' });
  throw new Error('TODO[apps-script-backlog]: Implement action.ansible:launch_job_template. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.ansible:list_job_templates': (_config) => `
function step_action_ansible_list_job_templates(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#ansible): Implement action.ansible:list_job_templates Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'ansible', operation: 'action.ansible:list_job_templates' });
  throw new Error('TODO[apps-script-backlog]: Implement action.ansible:list_job_templates. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.ansible:test_connection': (_config) => `
function step_action_ansible_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#ansible): Implement action.ansible:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'ansible', operation: 'action.ansible:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.ansible:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.argocd:create_application': (_config) => `
function step_action_argocd_create_application(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#argocd): Implement action.argocd:create_application Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'argocd', operation: 'action.argocd:create_application' });
  throw new Error('TODO[apps-script-backlog]: Implement action.argocd:create_application. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.argocd:delete_application': (_config) => `
function step_action_argocd_delete_application(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#argocd): Implement action.argocd:delete_application Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'argocd', operation: 'action.argocd:delete_application' });
  throw new Error('TODO[apps-script-backlog]: Implement action.argocd:delete_application. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.argocd:get_application': (_config) => `
function step_action_argocd_get_application(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#argocd): Implement action.argocd:get_application Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'argocd', operation: 'action.argocd:get_application' });
  throw new Error('TODO[apps-script-backlog]: Implement action.argocd:get_application. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.argocd:sync_application': (_config) => `
function step_action_argocd_sync_application(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#argocd): Implement action.argocd:sync_application Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'argocd', operation: 'action.argocd:sync_application' });
  throw new Error('TODO[apps-script-backlog]: Implement action.argocd:sync_application. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.argocd:test_connection': (_config) => `
function step_action_argocd_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#argocd): Implement action.argocd:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'argocd', operation: 'action.argocd:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.argocd:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.asana-enhanced:add_comment': (_config) => `
function step_action_asana_enhanced_add_comment(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#asana-enhanced): Implement action.asana-enhanced:add_comment Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'asana-enhanced', operation: 'action.asana-enhanced:add_comment' });
  throw new Error('TODO[apps-script-backlog]: Implement action.asana-enhanced:add_comment. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.asana-enhanced:add_task_to_project': (_config) => `
function step_action_asana_enhanced_add_task_to_project(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#asana-enhanced): Implement action.asana-enhanced:add_task_to_project Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'asana-enhanced', operation: 'action.asana-enhanced:add_task_to_project' });
  throw new Error('TODO[apps-script-backlog]: Implement action.asana-enhanced:add_task_to_project. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.asana-enhanced:create_project': (_config) => `
function step_action_asana_enhanced_create_project(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#asana-enhanced): Implement action.asana-enhanced:create_project Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'asana-enhanced', operation: 'action.asana-enhanced:create_project' });
  throw new Error('TODO[apps-script-backlog]: Implement action.asana-enhanced:create_project. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.asana-enhanced:create_subtask': (_config) => `
function step_action_asana_enhanced_create_subtask(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#asana-enhanced): Implement action.asana-enhanced:create_subtask Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'asana-enhanced', operation: 'action.asana-enhanced:create_subtask' });
  throw new Error('TODO[apps-script-backlog]: Implement action.asana-enhanced:create_subtask. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.asana-enhanced:create_task': (_config) => `
function step_action_asana_enhanced_create_task(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#asana-enhanced): Implement action.asana-enhanced:create_task Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'asana-enhanced', operation: 'action.asana-enhanced:create_task' });
  throw new Error('TODO[apps-script-backlog]: Implement action.asana-enhanced:create_task. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.asana-enhanced:get_task': (_config) => `
function step_action_asana_enhanced_get_task(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#asana-enhanced): Implement action.asana-enhanced:get_task Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'asana-enhanced', operation: 'action.asana-enhanced:get_task' });
  throw new Error('TODO[apps-script-backlog]: Implement action.asana-enhanced:get_task. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.asana-enhanced:list_projects': (_config) => `
function step_action_asana_enhanced_list_projects(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#asana-enhanced): Implement action.asana-enhanced:list_projects Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'asana-enhanced', operation: 'action.asana-enhanced:list_projects' });
  throw new Error('TODO[apps-script-backlog]: Implement action.asana-enhanced:list_projects. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.asana-enhanced:list_tasks': (_config) => `
function step_action_asana_enhanced_list_tasks(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#asana-enhanced): Implement action.asana-enhanced:list_tasks Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'asana-enhanced', operation: 'action.asana-enhanced:list_tasks' });
  throw new Error('TODO[apps-script-backlog]: Implement action.asana-enhanced:list_tasks. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.asana-enhanced:list_workspaces': (_config) => `
function step_action_asana_enhanced_list_workspaces(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#asana-enhanced): Implement action.asana-enhanced:list_workspaces Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'asana-enhanced', operation: 'action.asana-enhanced:list_workspaces' });
  throw new Error('TODO[apps-script-backlog]: Implement action.asana-enhanced:list_workspaces. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.asana-enhanced:test_connection': (_config) => `
function step_action_asana_enhanced_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#asana-enhanced): Implement action.asana-enhanced:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'asana-enhanced', operation: 'action.asana-enhanced:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.asana-enhanced:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.asana-enhanced:update_project': (_config) => `
function step_action_asana_enhanced_update_project(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#asana-enhanced): Implement action.asana-enhanced:update_project Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'asana-enhanced', operation: 'action.asana-enhanced:update_project' });
  throw new Error('TODO[apps-script-backlog]: Implement action.asana-enhanced:update_project. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.asana-enhanced:update_task': (_config) => `
function step_action_asana_enhanced_update_task(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#asana-enhanced): Implement action.asana-enhanced:update_task Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'asana-enhanced', operation: 'action.asana-enhanced:update_task' });
  throw new Error('TODO[apps-script-backlog]: Implement action.asana-enhanced:update_task. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.aws-cloudformation:create_stack': (_config) => `
function step_action_aws_cloudformation_create_stack(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#aws-cloudformation): Implement action.aws-cloudformation:create_stack Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'aws-cloudformation', operation: 'action.aws-cloudformation:create_stack' });
  throw new Error('TODO[apps-script-backlog]: Implement action.aws-cloudformation:create_stack. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.aws-cloudformation:delete_stack': (_config) => `
function step_action_aws_cloudformation_delete_stack(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#aws-cloudformation): Implement action.aws-cloudformation:delete_stack Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'aws-cloudformation', operation: 'action.aws-cloudformation:delete_stack' });
  throw new Error('TODO[apps-script-backlog]: Implement action.aws-cloudformation:delete_stack. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.aws-cloudformation:get_stack_status': (_config) => `
function step_action_aws_cloudformation_get_stack_status(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#aws-cloudformation): Implement action.aws-cloudformation:get_stack_status Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'aws-cloudformation', operation: 'action.aws-cloudformation:get_stack_status' });
  throw new Error('TODO[apps-script-backlog]: Implement action.aws-cloudformation:get_stack_status. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.aws-cloudformation:test_connection': (_config) => `
function step_action_aws_cloudformation_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#aws-cloudformation): Implement action.aws-cloudformation:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'aws-cloudformation', operation: 'action.aws-cloudformation:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.aws-cloudformation:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.aws-cloudformation:update_stack': (_config) => `
function step_action_aws_cloudformation_update_stack(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#aws-cloudformation): Implement action.aws-cloudformation:update_stack Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'aws-cloudformation', operation: 'action.aws-cloudformation:update_stack' });
  throw new Error('TODO[apps-script-backlog]: Implement action.aws-cloudformation:update_stack. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.aws-codepipeline:create_pipeline': (_config) => `
function step_action_aws_codepipeline_create_pipeline(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#aws-codepipeline): Implement action.aws-codepipeline:create_pipeline Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'aws-codepipeline', operation: 'action.aws-codepipeline:create_pipeline' });
  throw new Error('TODO[apps-script-backlog]: Implement action.aws-codepipeline:create_pipeline. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.aws-codepipeline:get_pipeline_state': (_config) => `
function step_action_aws_codepipeline_get_pipeline_state(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#aws-codepipeline): Implement action.aws-codepipeline:get_pipeline_state Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'aws-codepipeline', operation: 'action.aws-codepipeline:get_pipeline_state' });
  throw new Error('TODO[apps-script-backlog]: Implement action.aws-codepipeline:get_pipeline_state. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.aws-codepipeline:start_pipeline': (_config) => `
function step_action_aws_codepipeline_start_pipeline(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#aws-codepipeline): Implement action.aws-codepipeline:start_pipeline Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'aws-codepipeline', operation: 'action.aws-codepipeline:start_pipeline' });
  throw new Error('TODO[apps-script-backlog]: Implement action.aws-codepipeline:start_pipeline. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.aws-codepipeline:stop_pipeline': (_config) => `
function step_action_aws_codepipeline_stop_pipeline(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#aws-codepipeline): Implement action.aws-codepipeline:stop_pipeline Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'aws-codepipeline', operation: 'action.aws-codepipeline:stop_pipeline' });
  throw new Error('TODO[apps-script-backlog]: Implement action.aws-codepipeline:stop_pipeline. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.aws-codepipeline:test_connection': (_config) => `
function step_action_aws_codepipeline_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#aws-codepipeline): Implement action.aws-codepipeline:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'aws-codepipeline', operation: 'action.aws-codepipeline:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.aws-codepipeline:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.azure-devops:create_release': (_config) => `
function step_action_azure_devops_create_release(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#azure-devops): Implement action.azure-devops:create_release Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'azure-devops', operation: 'action.azure-devops:create_release' });
  throw new Error('TODO[apps-script-backlog]: Implement action.azure-devops:create_release. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.azure-devops:create_work_item': (_config) => `
function step_action_azure_devops_create_work_item(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#azure-devops): Implement action.azure-devops:create_work_item Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'azure-devops', operation: 'action.azure-devops:create_work_item' });
  throw new Error('TODO[apps-script-backlog]: Implement action.azure-devops:create_work_item. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.azure-devops:get_build_status': (_config) => `
function step_action_azure_devops_get_build_status(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#azure-devops): Implement action.azure-devops:get_build_status Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'azure-devops', operation: 'action.azure-devops:get_build_status' });
  throw new Error('TODO[apps-script-backlog]: Implement action.azure-devops:get_build_status. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.azure-devops:test_connection': (_config) => `
function step_action_azure_devops_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#azure-devops): Implement action.azure-devops:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'azure-devops', operation: 'action.azure-devops:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.azure-devops:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.azure-devops:trigger_build': (_config) => `
function step_action_azure_devops_trigger_build(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#azure-devops): Implement action.azure-devops:trigger_build Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'azure-devops', operation: 'action.azure-devops:trigger_build' });
  throw new Error('TODO[apps-script-backlog]: Implement action.azure-devops:trigger_build. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.bamboohr:create_employee': (_config) => `
function step_action_bamboohr_create_employee(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#bamboohr): Implement action.bamboohr:create_employee Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'bamboohr', operation: 'action.bamboohr:create_employee' });
  throw new Error('TODO[apps-script-backlog]: Implement action.bamboohr:create_employee. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.bamboohr:get_employee': (_config) => `
function step_action_bamboohr_get_employee(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#bamboohr): Implement action.bamboohr:get_employee Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'bamboohr', operation: 'action.bamboohr:get_employee' });
  throw new Error('TODO[apps-script-backlog]: Implement action.bamboohr:get_employee. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.bamboohr:get_time_off_requests': (_config) => `
function step_action_bamboohr_get_time_off_requests(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#bamboohr): Implement action.bamboohr:get_time_off_requests Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'bamboohr', operation: 'action.bamboohr:get_time_off_requests' });
  throw new Error('TODO[apps-script-backlog]: Implement action.bamboohr:get_time_off_requests. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.bamboohr:test_connection': (_config) => `
function step_action_bamboohr_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#bamboohr): Implement action.bamboohr:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'bamboohr', operation: 'action.bamboohr:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.bamboohr:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.bamboohr:update_employee': (_config) => `
function step_action_bamboohr_update_employee(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#bamboohr): Implement action.bamboohr:update_employee Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'bamboohr', operation: 'action.bamboohr:update_employee' });
  throw new Error('TODO[apps-script-backlog]: Implement action.bamboohr:update_employee. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.basecamp:create_message': (_config) => `
function step_action_basecamp_create_message(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#basecamp): Implement action.basecamp:create_message Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'basecamp', operation: 'action.basecamp:create_message' });
  throw new Error('TODO[apps-script-backlog]: Implement action.basecamp:create_message. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.basecamp:create_project': (_config) => `
function step_action_basecamp_create_project(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#basecamp): Implement action.basecamp:create_project Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'basecamp', operation: 'action.basecamp:create_project' });
  throw new Error('TODO[apps-script-backlog]: Implement action.basecamp:create_project. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.basecamp:create_todo': (_config) => `
function step_action_basecamp_create_todo(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#basecamp): Implement action.basecamp:create_todo Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'basecamp', operation: 'action.basecamp:create_todo' });
  throw new Error('TODO[apps-script-backlog]: Implement action.basecamp:create_todo. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.basecamp:create_todo_list': (_config) => `
function step_action_basecamp_create_todo_list(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#basecamp): Implement action.basecamp:create_todo_list Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'basecamp', operation: 'action.basecamp:create_todo_list' });
  throw new Error('TODO[apps-script-backlog]: Implement action.basecamp:create_todo_list. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.basecamp:test_connection': (_config) => `
function step_action_basecamp_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#basecamp): Implement action.basecamp:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'basecamp', operation: 'action.basecamp:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.basecamp:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.basecamp:upload_file': (_config) => `
function step_action_basecamp_upload_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#basecamp): Implement action.basecamp:upload_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'basecamp', operation: 'action.basecamp:upload_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.basecamp:upload_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.bigcommerce:create_order': (_config) => `
function step_action_bigcommerce_create_order(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#bigcommerce): Implement action.bigcommerce:create_order Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'bigcommerce', operation: 'action.bigcommerce:create_order' });
  throw new Error('TODO[apps-script-backlog]: Implement action.bigcommerce:create_order. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.bigcommerce:create_product': (_config) => `
function step_action_bigcommerce_create_product(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#bigcommerce): Implement action.bigcommerce:create_product Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'bigcommerce', operation: 'action.bigcommerce:create_product' });
  throw new Error('TODO[apps-script-backlog]: Implement action.bigcommerce:create_product. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.bigcommerce:get_product': (_config) => `
function step_action_bigcommerce_get_product(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#bigcommerce): Implement action.bigcommerce:get_product Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'bigcommerce', operation: 'action.bigcommerce:get_product' });
  throw new Error('TODO[apps-script-backlog]: Implement action.bigcommerce:get_product. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.bigcommerce:list_products': (_config) => `
function step_action_bigcommerce_list_products(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#bigcommerce): Implement action.bigcommerce:list_products Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'bigcommerce', operation: 'action.bigcommerce:list_products' });
  throw new Error('TODO[apps-script-backlog]: Implement action.bigcommerce:list_products. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.bigcommerce:test_connection': (_config) => `
function step_action_bigcommerce_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#bigcommerce): Implement action.bigcommerce:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'bigcommerce', operation: 'action.bigcommerce:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.bigcommerce:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.bigcommerce:update_product': (_config) => `
function step_action_bigcommerce_update_product(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#bigcommerce): Implement action.bigcommerce:update_product Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'bigcommerce', operation: 'action.bigcommerce:update_product' });
  throw new Error('TODO[apps-script-backlog]: Implement action.bigcommerce:update_product. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.bigquery:create_dataset': (_config) => `
function step_action_bigquery_create_dataset(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#bigquery): Implement action.bigquery:create_dataset Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'bigquery', operation: 'action.bigquery:create_dataset' });
  throw new Error('TODO[apps-script-backlog]: Implement action.bigquery:create_dataset. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.bigquery:create_table': (_config) => `
function step_action_bigquery_create_table(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#bigquery): Implement action.bigquery:create_table Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'bigquery', operation: 'action.bigquery:create_table' });
  throw new Error('TODO[apps-script-backlog]: Implement action.bigquery:create_table. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.bigquery:execute_query': (_config) => `
function step_action_bigquery_execute_query(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#bigquery): Implement action.bigquery:execute_query Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'bigquery', operation: 'action.bigquery:execute_query' });
  throw new Error('TODO[apps-script-backlog]: Implement action.bigquery:execute_query. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.bigquery:insert_rows': (_config) => `
function step_action_bigquery_insert_rows(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#bigquery): Implement action.bigquery:insert_rows Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'bigquery', operation: 'action.bigquery:insert_rows' });
  throw new Error('TODO[apps-script-backlog]: Implement action.bigquery:insert_rows. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.bigquery:list_datasets': (_config) => `
function step_action_bigquery_list_datasets(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#bigquery): Implement action.bigquery:list_datasets Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'bigquery', operation: 'action.bigquery:list_datasets' });
  throw new Error('TODO[apps-script-backlog]: Implement action.bigquery:list_datasets. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.bigquery:list_tables': (_config) => `
function step_action_bigquery_list_tables(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#bigquery): Implement action.bigquery:list_tables Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'bigquery', operation: 'action.bigquery:list_tables' });
  throw new Error('TODO[apps-script-backlog]: Implement action.bigquery:list_tables. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.bigquery:test_connection': (_config) => `
function step_action_bigquery_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#bigquery): Implement action.bigquery:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'bigquery', operation: 'action.bigquery:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.bigquery:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.bitbucket:create_issue': (_config) => `
function step_action_bitbucket_create_issue(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#bitbucket): Implement action.bitbucket:create_issue Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'bitbucket', operation: 'action.bitbucket:create_issue' });
  throw new Error('TODO[apps-script-backlog]: Implement action.bitbucket:create_issue. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.bitbucket:create_pull_request': (_config) => `
function step_action_bitbucket_create_pull_request(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#bitbucket): Implement action.bitbucket:create_pull_request Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'bitbucket', operation: 'action.bitbucket:create_pull_request' });
  throw new Error('TODO[apps-script-backlog]: Implement action.bitbucket:create_pull_request. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.bitbucket:create_webhook': (_config) => `
function step_action_bitbucket_create_webhook(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#bitbucket): Implement action.bitbucket:create_webhook Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'bitbucket', operation: 'action.bitbucket:create_webhook' });
  throw new Error('TODO[apps-script-backlog]: Implement action.bitbucket:create_webhook. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.bitbucket:get_repository': (_config) => `
function step_action_bitbucket_get_repository(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#bitbucket): Implement action.bitbucket:get_repository Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'bitbucket', operation: 'action.bitbucket:get_repository' });
  throw new Error('TODO[apps-script-backlog]: Implement action.bitbucket:get_repository. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.bitbucket:list_repositories': (_config) => `
function step_action_bitbucket_list_repositories(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#bitbucket): Implement action.bitbucket:list_repositories Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'bitbucket', operation: 'action.bitbucket:list_repositories' });
  throw new Error('TODO[apps-script-backlog]: Implement action.bitbucket:list_repositories. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.bitbucket:test_connection': (_config) => `
function step_action_bitbucket_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#bitbucket): Implement action.bitbucket:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'bitbucket', operation: 'action.bitbucket:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.bitbucket:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.box:create_folder': (_config) => `
function step_action_box_create_folder(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#box): Implement action.box:create_folder Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'box', operation: 'action.box:create_folder' });
  throw new Error('TODO[apps-script-backlog]: Implement action.box:create_folder. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.box:create_shared_link': (_config) => `
function step_action_box_create_shared_link(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#box): Implement action.box:create_shared_link Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'box', operation: 'action.box:create_shared_link' });
  throw new Error('TODO[apps-script-backlog]: Implement action.box:create_shared_link. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.box:download_file': (_config) => `
function step_action_box_download_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#box): Implement action.box:download_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'box', operation: 'action.box:download_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.box:download_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.box:get_file_info': (_config) => `
function step_action_box_get_file_info(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#box): Implement action.box:get_file_info Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'box', operation: 'action.box:get_file_info' });
  throw new Error('TODO[apps-script-backlog]: Implement action.box:get_file_info. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.box:list_folder_items': (_config) => `
function step_action_box_list_folder_items(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#box): Implement action.box:list_folder_items Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'box', operation: 'action.box:list_folder_items' });
  throw new Error('TODO[apps-script-backlog]: Implement action.box:list_folder_items. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.box:search': (_config) => `
function step_action_box_search(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#box): Implement action.box:search Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'box', operation: 'action.box:search' });
  throw new Error('TODO[apps-script-backlog]: Implement action.box:search. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.box:test_connection': (_config) => `
function step_action_box_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#box): Implement action.box:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'box', operation: 'action.box:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.box:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.box:upload_file': (_config) => `
function step_action_box_upload_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#box): Implement action.box:upload_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'box', operation: 'action.box:upload_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.box:upload_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.braze:create_campaign': (_config) => `
function step_action_braze_create_campaign(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#braze): Implement action.braze:create_campaign Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'braze', operation: 'action.braze:create_campaign' });
  throw new Error('TODO[apps-script-backlog]: Implement action.braze:create_campaign. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.braze:create_user': (_config) => `
function step_action_braze_create_user(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#braze): Implement action.braze:create_user Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'braze', operation: 'action.braze:create_user' });
  throw new Error('TODO[apps-script-backlog]: Implement action.braze:create_user. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.braze:export_users': (_config) => `
function step_action_braze_export_users(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#braze): Implement action.braze:export_users Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'braze', operation: 'action.braze:export_users' });
  throw new Error('TODO[apps-script-backlog]: Implement action.braze:export_users. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.braze:send_message': (_config) => `
function step_action_braze_send_message(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#braze): Implement action.braze:send_message Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'braze', operation: 'action.braze:send_message' });
  throw new Error('TODO[apps-script-backlog]: Implement action.braze:send_message. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.braze:test_connection': (_config) => `
function step_action_braze_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#braze): Implement action.braze:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'braze', operation: 'action.braze:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.braze:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.braze:track_user_event': (_config) => `
function step_action_braze_track_user_event(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#braze): Implement action.braze:track_user_event Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'braze', operation: 'action.braze:track_user_event' });
  throw new Error('TODO[apps-script-backlog]: Implement action.braze:track_user_event. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.brex:create_card': (_config) => `
function step_action_brex_create_card(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#brex): Implement action.brex:create_card Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'brex', operation: 'action.brex:create_card' });
  throw new Error('TODO[apps-script-backlog]: Implement action.brex:create_card. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.brex:get_card': (_config) => `
function step_action_brex_get_card(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#brex): Implement action.brex:get_card Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'brex', operation: 'action.brex:get_card' });
  throw new Error('TODO[apps-script-backlog]: Implement action.brex:get_card. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.brex:get_transaction': (_config) => `
function step_action_brex_get_transaction(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#brex): Implement action.brex:get_transaction Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'brex', operation: 'action.brex:get_transaction' });
  throw new Error('TODO[apps-script-backlog]: Implement action.brex:get_transaction. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.brex:list_cards': (_config) => `
function step_action_brex_list_cards(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#brex): Implement action.brex:list_cards Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'brex', operation: 'action.brex:list_cards' });
  throw new Error('TODO[apps-script-backlog]: Implement action.brex:list_cards. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.brex:list_transactions': (_config) => `
function step_action_brex_list_transactions(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#brex): Implement action.brex:list_transactions Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'brex', operation: 'action.brex:list_transactions' });
  throw new Error('TODO[apps-script-backlog]: Implement action.brex:list_transactions. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.brex:list_users': (_config) => `
function step_action_brex_list_users(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#brex): Implement action.brex:list_users Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'brex', operation: 'action.brex:list_users' });
  throw new Error('TODO[apps-script-backlog]: Implement action.brex:list_users. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.brex:test_connection': (_config) => `
function step_action_brex_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#brex): Implement action.brex:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'brex', operation: 'action.brex:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.brex:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.brex:update_card': (_config) => `
function step_action_brex_update_card(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#brex): Implement action.brex:update_card Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'brex', operation: 'action.brex:update_card' });
  throw new Error('TODO[apps-script-backlog]: Implement action.brex:update_card. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.caldotcom:cancel_booking': (_config) => `
function step_action_caldotcom_cancel_booking(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#caldotcom): Implement action.caldotcom:cancel_booking Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'caldotcom', operation: 'action.caldotcom:cancel_booking' });
  throw new Error('TODO[apps-script-backlog]: Implement action.caldotcom:cancel_booking. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.caldotcom:create_booking': (_config) => `
function step_action_caldotcom_create_booking(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#caldotcom): Implement action.caldotcom:create_booking Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'caldotcom', operation: 'action.caldotcom:create_booking' });
  throw new Error('TODO[apps-script-backlog]: Implement action.caldotcom:create_booking. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.caldotcom:get_availability': (_config) => `
function step_action_caldotcom_get_availability(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#caldotcom): Implement action.caldotcom:get_availability Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'caldotcom', operation: 'action.caldotcom:get_availability' });
  throw new Error('TODO[apps-script-backlog]: Implement action.caldotcom:get_availability. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.caldotcom:get_booking': (_config) => `
function step_action_caldotcom_get_booking(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#caldotcom): Implement action.caldotcom:get_booking Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'caldotcom', operation: 'action.caldotcom:get_booking' });
  throw new Error('TODO[apps-script-backlog]: Implement action.caldotcom:get_booking. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.caldotcom:list_bookings': (_config) => `
function step_action_caldotcom_list_bookings(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#caldotcom): Implement action.caldotcom:list_bookings Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'caldotcom', operation: 'action.caldotcom:list_bookings' });
  throw new Error('TODO[apps-script-backlog]: Implement action.caldotcom:list_bookings. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.caldotcom:list_event_types': (_config) => `
function step_action_caldotcom_list_event_types(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#caldotcom): Implement action.caldotcom:list_event_types Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'caldotcom', operation: 'action.caldotcom:list_event_types' });
  throw new Error('TODO[apps-script-backlog]: Implement action.caldotcom:list_event_types. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.caldotcom:test_connection': (_config) => `
function step_action_caldotcom_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#caldotcom): Implement action.caldotcom:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'caldotcom', operation: 'action.caldotcom:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.caldotcom:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.caldotcom:update_booking': (_config) => `
function step_action_caldotcom_update_booking(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#caldotcom): Implement action.caldotcom:update_booking Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'caldotcom', operation: 'action.caldotcom:update_booking' });
  throw new Error('TODO[apps-script-backlog]: Implement action.caldotcom:update_booking. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.calendly:cancel_scheduled_event': (_config) => `
function step_action_calendly_cancel_scheduled_event(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#calendly): Implement action.calendly:cancel_scheduled_event Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'calendly', operation: 'action.calendly:cancel_scheduled_event' });
  throw new Error('TODO[apps-script-backlog]: Implement action.calendly:cancel_scheduled_event. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.calendly:get_event_invitees': (_config) => `
function step_action_calendly_get_event_invitees(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#calendly): Implement action.calendly:get_event_invitees Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'calendly', operation: 'action.calendly:get_event_invitees' });
  throw new Error('TODO[apps-script-backlog]: Implement action.calendly:get_event_invitees. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.calendly:get_event_types': (_config) => `
function step_action_calendly_get_event_types(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#calendly): Implement action.calendly:get_event_types Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'calendly', operation: 'action.calendly:get_event_types' });
  throw new Error('TODO[apps-script-backlog]: Implement action.calendly:get_event_types. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.calendly:get_scheduled_events': (_config) => `
function step_action_calendly_get_scheduled_events(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#calendly): Implement action.calendly:get_scheduled_events Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'calendly', operation: 'action.calendly:get_scheduled_events' });
  throw new Error('TODO[apps-script-backlog]: Implement action.calendly:get_scheduled_events. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.calendly:get_user_info': (_config) => `
function step_action_calendly_get_user_info(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#calendly): Implement action.calendly:get_user_info Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'calendly', operation: 'action.calendly:get_user_info' });
  throw new Error('TODO[apps-script-backlog]: Implement action.calendly:get_user_info. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.calendly:test_connection': (_config) => `
function step_action_calendly_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#calendly): Implement action.calendly:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'calendly', operation: 'action.calendly:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.calendly:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.circleci:cancel_workflow': (_config) => `
function step_action_circleci_cancel_workflow(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#circleci): Implement action.circleci:cancel_workflow Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'circleci', operation: 'action.circleci:cancel_workflow' });
  throw new Error('TODO[apps-script-backlog]: Implement action.circleci:cancel_workflow. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.circleci:get_jobs': (_config) => `
function step_action_circleci_get_jobs(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#circleci): Implement action.circleci:get_jobs Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'circleci', operation: 'action.circleci:get_jobs' });
  throw new Error('TODO[apps-script-backlog]: Implement action.circleci:get_jobs. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.circleci:get_pipeline': (_config) => `
function step_action_circleci_get_pipeline(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#circleci): Implement action.circleci:get_pipeline Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'circleci', operation: 'action.circleci:get_pipeline' });
  throw new Error('TODO[apps-script-backlog]: Implement action.circleci:get_pipeline. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.circleci:get_pipelines': (_config) => `
function step_action_circleci_get_pipelines(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#circleci): Implement action.circleci:get_pipelines Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'circleci', operation: 'action.circleci:get_pipelines' });
  throw new Error('TODO[apps-script-backlog]: Implement action.circleci:get_pipelines. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.circleci:get_workflows': (_config) => `
function step_action_circleci_get_workflows(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#circleci): Implement action.circleci:get_workflows Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'circleci', operation: 'action.circleci:get_workflows' });
  throw new Error('TODO[apps-script-backlog]: Implement action.circleci:get_workflows. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.circleci:rerun_workflow': (_config) => `
function step_action_circleci_rerun_workflow(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#circleci): Implement action.circleci:rerun_workflow Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'circleci', operation: 'action.circleci:rerun_workflow' });
  throw new Error('TODO[apps-script-backlog]: Implement action.circleci:rerun_workflow. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.circleci:test_connection': (_config) => `
function step_action_circleci_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#circleci): Implement action.circleci:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'circleci', operation: 'action.circleci:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.circleci:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.circleci:trigger_pipeline': (_config) => `
function step_action_circleci_trigger_pipeline(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#circleci): Implement action.circleci:trigger_pipeline Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'circleci', operation: 'action.circleci:trigger_pipeline' });
  throw new Error('TODO[apps-script-backlog]: Implement action.circleci:trigger_pipeline. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.clickup:create_comment': (_config) => `
function step_action_clickup_create_comment(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#clickup): Implement action.clickup:create_comment Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'clickup', operation: 'action.clickup:create_comment' });
  throw new Error('TODO[apps-script-backlog]: Implement action.clickup:create_comment. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.clickup:create_task': (_config) => `
function step_action_clickup_create_task(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#clickup): Implement action.clickup:create_task Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'clickup', operation: 'action.clickup:create_task' });
  throw new Error('TODO[apps-script-backlog]: Implement action.clickup:create_task. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.clickup:delete_task': (_config) => `
function step_action_clickup_delete_task(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#clickup): Implement action.clickup:delete_task Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'clickup', operation: 'action.clickup:delete_task' });
  throw new Error('TODO[apps-script-backlog]: Implement action.clickup:delete_task. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.clickup:get_lists': (_config) => `
function step_action_clickup_get_lists(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#clickup): Implement action.clickup:get_lists Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'clickup', operation: 'action.clickup:get_lists' });
  throw new Error('TODO[apps-script-backlog]: Implement action.clickup:get_lists. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.clickup:get_spaces': (_config) => `
function step_action_clickup_get_spaces(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#clickup): Implement action.clickup:get_spaces Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'clickup', operation: 'action.clickup:get_spaces' });
  throw new Error('TODO[apps-script-backlog]: Implement action.clickup:get_spaces. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.clickup:get_task': (_config) => `
function step_action_clickup_get_task(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#clickup): Implement action.clickup:get_task Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'clickup', operation: 'action.clickup:get_task' });
  throw new Error('TODO[apps-script-backlog]: Implement action.clickup:get_task. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.clickup:get_tasks': (_config) => `
function step_action_clickup_get_tasks(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#clickup): Implement action.clickup:get_tasks Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'clickup', operation: 'action.clickup:get_tasks' });
  throw new Error('TODO[apps-script-backlog]: Implement action.clickup:get_tasks. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.clickup:test_connection': (_config) => `
function step_action_clickup_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#clickup): Implement action.clickup:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'clickup', operation: 'action.clickup:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.clickup:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.clickup:update_task': (_config) => `
function step_action_clickup_update_task(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#clickup): Implement action.clickup:update_task Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'clickup', operation: 'action.clickup:update_task' });
  throw new Error('TODO[apps-script-backlog]: Implement action.clickup:update_task. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.coda:create_row': (_config) => `
function step_action_coda_create_row(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#coda): Implement action.coda:create_row Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'coda', operation: 'action.coda:create_row' });
  throw new Error('TODO[apps-script-backlog]: Implement action.coda:create_row. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.coda:delete_row': (_config) => `
function step_action_coda_delete_row(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#coda): Implement action.coda:delete_row Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'coda', operation: 'action.coda:delete_row' });
  throw new Error('TODO[apps-script-backlog]: Implement action.coda:delete_row. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.coda:get_doc': (_config) => `
function step_action_coda_get_doc(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#coda): Implement action.coda:get_doc Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'coda', operation: 'action.coda:get_doc' });
  throw new Error('TODO[apps-script-backlog]: Implement action.coda:get_doc. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.coda:get_table': (_config) => `
function step_action_coda_get_table(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#coda): Implement action.coda:get_table Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'coda', operation: 'action.coda:get_table' });
  throw new Error('TODO[apps-script-backlog]: Implement action.coda:get_table. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.coda:list_docs': (_config) => `
function step_action_coda_list_docs(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#coda): Implement action.coda:list_docs Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'coda', operation: 'action.coda:list_docs' });
  throw new Error('TODO[apps-script-backlog]: Implement action.coda:list_docs. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.coda:list_rows': (_config) => `
function step_action_coda_list_rows(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#coda): Implement action.coda:list_rows Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'coda', operation: 'action.coda:list_rows' });
  throw new Error('TODO[apps-script-backlog]: Implement action.coda:list_rows. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.coda:list_tables': (_config) => `
function step_action_coda_list_tables(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#coda): Implement action.coda:list_tables Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'coda', operation: 'action.coda:list_tables' });
  throw new Error('TODO[apps-script-backlog]: Implement action.coda:list_tables. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.coda:test_connection': (_config) => `
function step_action_coda_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#coda): Implement action.coda:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'coda', operation: 'action.coda:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.coda:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.coda:update_row': (_config) => `
function step_action_coda_update_row(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#coda): Implement action.coda:update_row Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'coda', operation: 'action.coda:update_row' });
  throw new Error('TODO[apps-script-backlog]: Implement action.coda:update_row. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.concur:create_expense_entry': (_config) => `
function step_action_concur_create_expense_entry(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#concur): Implement action.concur:create_expense_entry Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'concur', operation: 'action.concur:create_expense_entry' });
  throw new Error('TODO[apps-script-backlog]: Implement action.concur:create_expense_entry. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.concur:create_expense_report': (_config) => `
function step_action_concur_create_expense_report(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#concur): Implement action.concur:create_expense_report Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'concur', operation: 'action.concur:create_expense_report' });
  throw new Error('TODO[apps-script-backlog]: Implement action.concur:create_expense_report. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.concur:get_expense_entries': (_config) => `
function step_action_concur_get_expense_entries(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#concur): Implement action.concur:get_expense_entries Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'concur', operation: 'action.concur:get_expense_entries' });
  throw new Error('TODO[apps-script-backlog]: Implement action.concur:get_expense_entries. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.concur:get_expense_report': (_config) => `
function step_action_concur_get_expense_report(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#concur): Implement action.concur:get_expense_report Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'concur', operation: 'action.concur:get_expense_report' });
  throw new Error('TODO[apps-script-backlog]: Implement action.concur:get_expense_report. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.concur:get_expense_reports': (_config) => `
function step_action_concur_get_expense_reports(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#concur): Implement action.concur:get_expense_reports Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'concur', operation: 'action.concur:get_expense_reports' });
  throw new Error('TODO[apps-script-backlog]: Implement action.concur:get_expense_reports. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.concur:get_users': (_config) => `
function step_action_concur_get_users(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#concur): Implement action.concur:get_users Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'concur', operation: 'action.concur:get_users' });
  throw new Error('TODO[apps-script-backlog]: Implement action.concur:get_users. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.concur:test_connection': (_config) => `
function step_action_concur_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#concur): Implement action.concur:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'concur', operation: 'action.concur:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.concur:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.confluence:add_comment': (_config) => `
function step_action_confluence_add_comment(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#confluence): Implement action.confluence:add_comment Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'confluence', operation: 'action.confluence:add_comment' });
  throw new Error('TODO[apps-script-backlog]: Implement action.confluence:add_comment. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.confluence:create_page': (_config) => `
function step_action_confluence_create_page(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#confluence): Implement action.confluence:create_page Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'confluence', operation: 'action.confluence:create_page' });
  throw new Error('TODO[apps-script-backlog]: Implement action.confluence:create_page. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.confluence:delete_page': (_config) => `
function step_action_confluence_delete_page(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#confluence): Implement action.confluence:delete_page Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'confluence', operation: 'action.confluence:delete_page' });
  throw new Error('TODO[apps-script-backlog]: Implement action.confluence:delete_page. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.confluence:get_page': (_config) => `
function step_action_confluence_get_page(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#confluence): Implement action.confluence:get_page Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'confluence', operation: 'action.confluence:get_page' });
  throw new Error('TODO[apps-script-backlog]: Implement action.confluence:get_page. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.confluence:get_spaces': (_config) => `
function step_action_confluence_get_spaces(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#confluence): Implement action.confluence:get_spaces Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'confluence', operation: 'action.confluence:get_spaces' });
  throw new Error('TODO[apps-script-backlog]: Implement action.confluence:get_spaces. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.confluence:search_content': (_config) => `
function step_action_confluence_search_content(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#confluence): Implement action.confluence:search_content Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'confluence', operation: 'action.confluence:search_content' });
  throw new Error('TODO[apps-script-backlog]: Implement action.confluence:search_content. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.confluence:test_connection': (_config) => `
function step_action_confluence_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#confluence): Implement action.confluence:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'confluence', operation: 'action.confluence:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.confluence:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.confluence:update_page': (_config) => `
function step_action_confluence_update_page(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#confluence): Implement action.confluence:update_page Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'confluence', operation: 'action.confluence:update_page' });
  throw new Error('TODO[apps-script-backlog]: Implement action.confluence:update_page. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.coupa:approve_invoice': (_config) => `
function step_action_coupa_approve_invoice(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#coupa): Implement action.coupa:approve_invoice Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'coupa', operation: 'action.coupa:approve_invoice' });
  throw new Error('TODO[apps-script-backlog]: Implement action.coupa:approve_invoice. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.coupa:create_purchase_order': (_config) => `
function step_action_coupa_create_purchase_order(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#coupa): Implement action.coupa:create_purchase_order Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'coupa', operation: 'action.coupa:create_purchase_order' });
  throw new Error('TODO[apps-script-backlog]: Implement action.coupa:create_purchase_order. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.coupa:create_supplier': (_config) => `
function step_action_coupa_create_supplier(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#coupa): Implement action.coupa:create_supplier Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'coupa', operation: 'action.coupa:create_supplier' });
  throw new Error('TODO[apps-script-backlog]: Implement action.coupa:create_supplier. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.coupa:get_invoices': (_config) => `
function step_action_coupa_get_invoices(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#coupa): Implement action.coupa:get_invoices Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'coupa', operation: 'action.coupa:get_invoices' });
  throw new Error('TODO[apps-script-backlog]: Implement action.coupa:get_invoices. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.coupa:get_purchase_order': (_config) => `
function step_action_coupa_get_purchase_order(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#coupa): Implement action.coupa:get_purchase_order Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'coupa', operation: 'action.coupa:get_purchase_order' });
  throw new Error('TODO[apps-script-backlog]: Implement action.coupa:get_purchase_order. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.coupa:get_purchase_orders': (_config) => `
function step_action_coupa_get_purchase_orders(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#coupa): Implement action.coupa:get_purchase_orders Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'coupa', operation: 'action.coupa:get_purchase_orders' });
  throw new Error('TODO[apps-script-backlog]: Implement action.coupa:get_purchase_orders. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.coupa:get_suppliers': (_config) => `
function step_action_coupa_get_suppliers(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#coupa): Implement action.coupa:get_suppliers Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'coupa', operation: 'action.coupa:get_suppliers' });
  throw new Error('TODO[apps-script-backlog]: Implement action.coupa:get_suppliers. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.coupa:test_connection': (_config) => `
function step_action_coupa_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#coupa): Implement action.coupa:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'coupa', operation: 'action.coupa:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.coupa:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.databricks:cancel_run': (_config) => `
function step_action_databricks_cancel_run(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#databricks): Implement action.databricks:cancel_run Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'databricks', operation: 'action.databricks:cancel_run' });
  throw new Error('TODO[apps-script-backlog]: Implement action.databricks:cancel_run. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.databricks:create_job': (_config) => `
function step_action_databricks_create_job(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#databricks): Implement action.databricks:create_job Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'databricks', operation: 'action.databricks:create_job' });
  throw new Error('TODO[apps-script-backlog]: Implement action.databricks:create_job. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.databricks:get_cluster': (_config) => `
function step_action_databricks_get_cluster(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#databricks): Implement action.databricks:get_cluster Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'databricks', operation: 'action.databricks:get_cluster' });
  throw new Error('TODO[apps-script-backlog]: Implement action.databricks:get_cluster. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.databricks:get_run': (_config) => `
function step_action_databricks_get_run(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#databricks): Implement action.databricks:get_run Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'databricks', operation: 'action.databricks:get_run' });
  throw new Error('TODO[apps-script-backlog]: Implement action.databricks:get_run. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.databricks:list_clusters': (_config) => `
function step_action_databricks_list_clusters(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#databricks): Implement action.databricks:list_clusters Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'databricks', operation: 'action.databricks:list_clusters' });
  throw new Error('TODO[apps-script-backlog]: Implement action.databricks:list_clusters. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.databricks:list_jobs': (_config) => `
function step_action_databricks_list_jobs(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#databricks): Implement action.databricks:list_jobs Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'databricks', operation: 'action.databricks:list_jobs' });
  throw new Error('TODO[apps-script-backlog]: Implement action.databricks:list_jobs. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.databricks:start_cluster': (_config) => `
function step_action_databricks_start_cluster(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#databricks): Implement action.databricks:start_cluster Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'databricks', operation: 'action.databricks:start_cluster' });
  throw new Error('TODO[apps-script-backlog]: Implement action.databricks:start_cluster. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.databricks:stop_cluster': (_config) => `
function step_action_databricks_stop_cluster(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#databricks): Implement action.databricks:stop_cluster Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'databricks', operation: 'action.databricks:stop_cluster' });
  throw new Error('TODO[apps-script-backlog]: Implement action.databricks:stop_cluster. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.databricks:submit_run': (_config) => `
function step_action_databricks_submit_run(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#databricks): Implement action.databricks:submit_run Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'databricks', operation: 'action.databricks:submit_run' });
  throw new Error('TODO[apps-script-backlog]: Implement action.databricks:submit_run. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.databricks:test_connection': (_config) => `
function step_action_databricks_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#databricks): Implement action.databricks:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'databricks', operation: 'action.databricks:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.databricks:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.datadog:create_event': (_config) => `
function step_action_datadog_create_event(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#datadog): Implement action.datadog:create_event Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'datadog', operation: 'action.datadog:create_event' });
  throw new Error('TODO[apps-script-backlog]: Implement action.datadog:create_event. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.datadog:create_monitor': (_config) => `
function step_action_datadog_create_monitor(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#datadog): Implement action.datadog:create_monitor Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'datadog', operation: 'action.datadog:create_monitor' });
  throw new Error('TODO[apps-script-backlog]: Implement action.datadog:create_monitor. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.datadog:get_events': (_config) => `
function step_action_datadog_get_events(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#datadog): Implement action.datadog:get_events Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'datadog', operation: 'action.datadog:get_events' });
  throw new Error('TODO[apps-script-backlog]: Implement action.datadog:get_events. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.datadog:get_monitors': (_config) => `
function step_action_datadog_get_monitors(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#datadog): Implement action.datadog:get_monitors Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'datadog', operation: 'action.datadog:get_monitors' });
  throw new Error('TODO[apps-script-backlog]: Implement action.datadog:get_monitors. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.datadog:query_metrics': (_config) => `
function step_action_datadog_query_metrics(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#datadog): Implement action.datadog:query_metrics Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'datadog', operation: 'action.datadog:query_metrics' });
  throw new Error('TODO[apps-script-backlog]: Implement action.datadog:query_metrics. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.datadog:submit_metrics': (_config) => `
function step_action_datadog_submit_metrics(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#datadog): Implement action.datadog:submit_metrics Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'datadog', operation: 'action.datadog:submit_metrics' });
  throw new Error('TODO[apps-script-backlog]: Implement action.datadog:submit_metrics. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.datadog:test_connection': (_config) => `
function step_action_datadog_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#datadog): Implement action.datadog:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'datadog', operation: 'action.datadog:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.datadog:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.docker-hub:get_repository': (_config) => `
function step_action_docker_hub_get_repository(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#docker-hub): Implement action.docker-hub:get_repository Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'docker-hub', operation: 'action.docker-hub:get_repository' });
  throw new Error('TODO[apps-script-backlog]: Implement action.docker-hub:get_repository. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.docker-hub:get_tag': (_config) => `
function step_action_docker_hub_get_tag(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#docker-hub): Implement action.docker-hub:get_tag Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'docker-hub', operation: 'action.docker-hub:get_tag' });
  throw new Error('TODO[apps-script-backlog]: Implement action.docker-hub:get_tag. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.docker-hub:list_repositories': (_config) => `
function step_action_docker_hub_list_repositories(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#docker-hub): Implement action.docker-hub:list_repositories Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'docker-hub', operation: 'action.docker-hub:list_repositories' });
  throw new Error('TODO[apps-script-backlog]: Implement action.docker-hub:list_repositories. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.docker-hub:list_tags': (_config) => `
function step_action_docker_hub_list_tags(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#docker-hub): Implement action.docker-hub:list_tags Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'docker-hub', operation: 'action.docker-hub:list_tags' });
  throw new Error('TODO[apps-script-backlog]: Implement action.docker-hub:list_tags. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.docker-hub:test_connection': (_config) => `
function step_action_docker_hub_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#docker-hub): Implement action.docker-hub:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'docker-hub', operation: 'action.docker-hub:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.docker-hub:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.docusign:create_envelope': (_config) => `
function step_action_docusign_create_envelope(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#docusign): Implement action.docusign:create_envelope Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'docusign', operation: 'action.docusign:create_envelope' });
  throw new Error('TODO[apps-script-backlog]: Implement action.docusign:create_envelope. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.docusign:download_document': (_config) => `
function step_action_docusign_download_document(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#docusign): Implement action.docusign:download_document Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'docusign', operation: 'action.docusign:download_document' });
  throw new Error('TODO[apps-script-backlog]: Implement action.docusign:download_document. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.docusign:get_envelope': (_config) => `
function step_action_docusign_get_envelope(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#docusign): Implement action.docusign:get_envelope Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'docusign', operation: 'action.docusign:get_envelope' });
  throw new Error('TODO[apps-script-backlog]: Implement action.docusign:get_envelope. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.docusign:get_envelope_status': (_config) => `
function step_action_docusign_get_envelope_status(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#docusign): Implement action.docusign:get_envelope_status Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'docusign', operation: 'action.docusign:get_envelope_status' });
  throw new Error('TODO[apps-script-backlog]: Implement action.docusign:get_envelope_status. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.docusign:get_recipients': (_config) => `
function step_action_docusign_get_recipients(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#docusign): Implement action.docusign:get_recipients Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'docusign', operation: 'action.docusign:get_recipients' });
  throw new Error('TODO[apps-script-backlog]: Implement action.docusign:get_recipients. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.docusign:list_envelopes': (_config) => `
function step_action_docusign_list_envelopes(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#docusign): Implement action.docusign:list_envelopes Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'docusign', operation: 'action.docusign:list_envelopes' });
  throw new Error('TODO[apps-script-backlog]: Implement action.docusign:list_envelopes. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.docusign:test_connection': (_config) => `
function step_action_docusign_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#docusign): Implement action.docusign:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'docusign', operation: 'action.docusign:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.docusign:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.docusign:void_envelope': (_config) => `
function step_action_docusign_void_envelope(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#docusign): Implement action.docusign:void_envelope Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'docusign', operation: 'action.docusign:void_envelope' });
  throw new Error('TODO[apps-script-backlog]: Implement action.docusign:void_envelope. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.dropbox-enhanced:copy_file': (_config) => `
function step_action_dropbox_enhanced_copy_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dropbox-enhanced): Implement action.dropbox-enhanced:copy_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dropbox-enhanced', operation: 'action.dropbox-enhanced:copy_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.dropbox-enhanced:copy_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.dropbox-enhanced:create_folder': (_config) => `
function step_action_dropbox_enhanced_create_folder(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dropbox-enhanced): Implement action.dropbox-enhanced:create_folder Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dropbox-enhanced', operation: 'action.dropbox-enhanced:create_folder' });
  throw new Error('TODO[apps-script-backlog]: Implement action.dropbox-enhanced:create_folder. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.dropbox-enhanced:create_shared_link': (_config) => `
function step_action_dropbox_enhanced_create_shared_link(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dropbox-enhanced): Implement action.dropbox-enhanced:create_shared_link Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dropbox-enhanced', operation: 'action.dropbox-enhanced:create_shared_link' });
  throw new Error('TODO[apps-script-backlog]: Implement action.dropbox-enhanced:create_shared_link. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.dropbox-enhanced:delete_file': (_config) => `
function step_action_dropbox_enhanced_delete_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dropbox-enhanced): Implement action.dropbox-enhanced:delete_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dropbox-enhanced', operation: 'action.dropbox-enhanced:delete_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.dropbox-enhanced:delete_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.dropbox-enhanced:download_file': (_config) => `
function step_action_dropbox_enhanced_download_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dropbox-enhanced): Implement action.dropbox-enhanced:download_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dropbox-enhanced', operation: 'action.dropbox-enhanced:download_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.dropbox-enhanced:download_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.dropbox-enhanced:get_metadata': (_config) => `
function step_action_dropbox_enhanced_get_metadata(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dropbox-enhanced): Implement action.dropbox-enhanced:get_metadata Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dropbox-enhanced', operation: 'action.dropbox-enhanced:get_metadata' });
  throw new Error('TODO[apps-script-backlog]: Implement action.dropbox-enhanced:get_metadata. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.dropbox-enhanced:list_folder': (_config) => `
function step_action_dropbox_enhanced_list_folder(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dropbox-enhanced): Implement action.dropbox-enhanced:list_folder Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dropbox-enhanced', operation: 'action.dropbox-enhanced:list_folder' });
  throw new Error('TODO[apps-script-backlog]: Implement action.dropbox-enhanced:list_folder. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.dropbox-enhanced:move_file': (_config) => `
function step_action_dropbox_enhanced_move_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dropbox-enhanced): Implement action.dropbox-enhanced:move_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dropbox-enhanced', operation: 'action.dropbox-enhanced:move_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.dropbox-enhanced:move_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.dropbox-enhanced:search': (_config) => `
function step_action_dropbox_enhanced_search(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dropbox-enhanced): Implement action.dropbox-enhanced:search Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dropbox-enhanced', operation: 'action.dropbox-enhanced:search' });
  throw new Error('TODO[apps-script-backlog]: Implement action.dropbox-enhanced:search. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.dropbox-enhanced:test_connection': (_config) => `
function step_action_dropbox_enhanced_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dropbox-enhanced): Implement action.dropbox-enhanced:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dropbox-enhanced', operation: 'action.dropbox-enhanced:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.dropbox-enhanced:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.dropbox-enhanced:upload_file': (_config) => `
function step_action_dropbox_enhanced_upload_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dropbox-enhanced): Implement action.dropbox-enhanced:upload_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dropbox-enhanced', operation: 'action.dropbox-enhanced:upload_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.dropbox-enhanced:upload_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.dropbox:copy_file': (_config) => `
function step_action_dropbox_copy_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dropbox): Implement action.dropbox:copy_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dropbox', operation: 'action.dropbox:copy_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.dropbox:copy_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.dropbox:create_folder': (_config) => `
function step_action_dropbox_create_folder(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dropbox): Implement action.dropbox:create_folder Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dropbox', operation: 'action.dropbox:create_folder' });
  throw new Error('TODO[apps-script-backlog]: Implement action.dropbox:create_folder. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.dropbox:create_shared_link': (_config) => `
function step_action_dropbox_create_shared_link(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dropbox): Implement action.dropbox:create_shared_link Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dropbox', operation: 'action.dropbox:create_shared_link' });
  throw new Error('TODO[apps-script-backlog]: Implement action.dropbox:create_shared_link. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.dropbox:delete_file': (_config) => `
function step_action_dropbox_delete_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dropbox): Implement action.dropbox:delete_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dropbox', operation: 'action.dropbox:delete_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.dropbox:delete_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.dropbox:download_file': (_config) => `
function step_action_dropbox_download_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dropbox): Implement action.dropbox:download_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dropbox', operation: 'action.dropbox:download_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.dropbox:download_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.dropbox:get_metadata': (_config) => `
function step_action_dropbox_get_metadata(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dropbox): Implement action.dropbox:get_metadata Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dropbox', operation: 'action.dropbox:get_metadata' });
  throw new Error('TODO[apps-script-backlog]: Implement action.dropbox:get_metadata. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.dropbox:list_folder': (_config) => `
function step_action_dropbox_list_folder(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dropbox): Implement action.dropbox:list_folder Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dropbox', operation: 'action.dropbox:list_folder' });
  throw new Error('TODO[apps-script-backlog]: Implement action.dropbox:list_folder. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.dropbox:move_file': (_config) => `
function step_action_dropbox_move_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dropbox): Implement action.dropbox:move_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dropbox', operation: 'action.dropbox:move_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.dropbox:move_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.dropbox:search': (_config) => `
function step_action_dropbox_search(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dropbox): Implement action.dropbox:search Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dropbox', operation: 'action.dropbox:search' });
  throw new Error('TODO[apps-script-backlog]: Implement action.dropbox:search. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.dropbox:test_connection': (_config) => `
function step_action_dropbox_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dropbox): Implement action.dropbox:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dropbox', operation: 'action.dropbox:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.dropbox:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.dropbox:upload_file': (_config) => `
function step_action_dropbox_upload_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dropbox): Implement action.dropbox:upload_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dropbox', operation: 'action.dropbox:upload_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.dropbox:upload_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.dynamics365:create_account': (_config) => `
function step_action_dynamics365_create_account(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dynamics365): Implement action.dynamics365:create_account Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dynamics365', operation: 'action.dynamics365:create_account' });
  throw new Error('TODO[apps-script-backlog]: Implement action.dynamics365:create_account. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.dynamics365:create_contact': (_config) => `
function step_action_dynamics365_create_contact(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dynamics365): Implement action.dynamics365:create_contact Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dynamics365', operation: 'action.dynamics365:create_contact' });
  throw new Error('TODO[apps-script-backlog]: Implement action.dynamics365:create_contact. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.dynamics365:create_lead': (_config) => `
function step_action_dynamics365_create_lead(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dynamics365): Implement action.dynamics365:create_lead Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dynamics365', operation: 'action.dynamics365:create_lead' });
  throw new Error('TODO[apps-script-backlog]: Implement action.dynamics365:create_lead. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.dynamics365:create_opportunity': (_config) => `
function step_action_dynamics365_create_opportunity(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dynamics365): Implement action.dynamics365:create_opportunity Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dynamics365', operation: 'action.dynamics365:create_opportunity' });
  throw new Error('TODO[apps-script-backlog]: Implement action.dynamics365:create_opportunity. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.dynamics365:get_account': (_config) => `
function step_action_dynamics365_get_account(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dynamics365): Implement action.dynamics365:get_account Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dynamics365', operation: 'action.dynamics365:get_account' });
  throw new Error('TODO[apps-script-backlog]: Implement action.dynamics365:get_account. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.dynamics365:list_accounts': (_config) => `
function step_action_dynamics365_list_accounts(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dynamics365): Implement action.dynamics365:list_accounts Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dynamics365', operation: 'action.dynamics365:list_accounts' });
  throw new Error('TODO[apps-script-backlog]: Implement action.dynamics365:list_accounts. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.dynamics365:test_connection': (_config) => `
function step_action_dynamics365_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dynamics365): Implement action.dynamics365:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dynamics365', operation: 'action.dynamics365:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.dynamics365:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.dynamics365:update_account': (_config) => `
function step_action_dynamics365_update_account(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dynamics365): Implement action.dynamics365:update_account Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dynamics365', operation: 'action.dynamics365:update_account' });
  throw new Error('TODO[apps-script-backlog]: Implement action.dynamics365:update_account. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.egnyte:copy_file': (_config) => `
function step_action_egnyte_copy_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#egnyte): Implement action.egnyte:copy_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'egnyte', operation: 'action.egnyte:copy_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.egnyte:copy_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.egnyte:create_folder': (_config) => `
function step_action_egnyte_create_folder(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#egnyte): Implement action.egnyte:create_folder Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'egnyte', operation: 'action.egnyte:create_folder' });
  throw new Error('TODO[apps-script-backlog]: Implement action.egnyte:create_folder. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.egnyte:create_link': (_config) => `
function step_action_egnyte_create_link(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#egnyte): Implement action.egnyte:create_link Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'egnyte', operation: 'action.egnyte:create_link' });
  throw new Error('TODO[apps-script-backlog]: Implement action.egnyte:create_link. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.egnyte:delete_file': (_config) => `
function step_action_egnyte_delete_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#egnyte): Implement action.egnyte:delete_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'egnyte', operation: 'action.egnyte:delete_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.egnyte:delete_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.egnyte:download_file': (_config) => `
function step_action_egnyte_download_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#egnyte): Implement action.egnyte:download_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'egnyte', operation: 'action.egnyte:download_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.egnyte:download_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.egnyte:list_folder': (_config) => `
function step_action_egnyte_list_folder(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#egnyte): Implement action.egnyte:list_folder Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'egnyte', operation: 'action.egnyte:list_folder' });
  throw new Error('TODO[apps-script-backlog]: Implement action.egnyte:list_folder. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.egnyte:move_file': (_config) => `
function step_action_egnyte_move_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#egnyte): Implement action.egnyte:move_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'egnyte', operation: 'action.egnyte:move_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.egnyte:move_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.egnyte:search': (_config) => `
function step_action_egnyte_search(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#egnyte): Implement action.egnyte:search Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'egnyte', operation: 'action.egnyte:search' });
  throw new Error('TODO[apps-script-backlog]: Implement action.egnyte:search. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.egnyte:test_connection': (_config) => `
function step_action_egnyte_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#egnyte): Implement action.egnyte:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'egnyte', operation: 'action.egnyte:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.egnyte:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.egnyte:upload_file': (_config) => `
function step_action_egnyte_upload_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#egnyte): Implement action.egnyte:upload_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'egnyte', operation: 'action.egnyte:upload_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.egnyte:upload_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.excel-online:add_row': (_config) => `
function step_action_excel_online_add_row(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#excel-online): Implement action.excel-online:add_row Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'excel-online', operation: 'action.excel-online:add_row' });
  throw new Error('TODO[apps-script-backlog]: Implement action.excel-online:add_row. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.excel-online:create_chart': (_config) => `
function step_action_excel_online_create_chart(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#excel-online): Implement action.excel-online:create_chart Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'excel-online', operation: 'action.excel-online:create_chart' });
  throw new Error('TODO[apps-script-backlog]: Implement action.excel-online:create_chart. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.excel-online:create_table': (_config) => `
function step_action_excel_online_create_table(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#excel-online): Implement action.excel-online:create_table Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'excel-online', operation: 'action.excel-online:create_table' });
  throw new Error('TODO[apps-script-backlog]: Implement action.excel-online:create_table. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.excel-online:create_workbook': (_config) => `
function step_action_excel_online_create_workbook(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#excel-online): Implement action.excel-online:create_workbook Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'excel-online', operation: 'action.excel-online:create_workbook' });
  throw new Error('TODO[apps-script-backlog]: Implement action.excel-online:create_workbook. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.excel-online:create_worksheet': (_config) => `
function step_action_excel_online_create_worksheet(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#excel-online): Implement action.excel-online:create_worksheet Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'excel-online', operation: 'action.excel-online:create_worksheet' });
  throw new Error('TODO[apps-script-backlog]: Implement action.excel-online:create_worksheet. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.excel-online:get_range': (_config) => `
function step_action_excel_online_get_range(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#excel-online): Implement action.excel-online:get_range Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'excel-online', operation: 'action.excel-online:get_range' });
  throw new Error('TODO[apps-script-backlog]: Implement action.excel-online:get_range. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.excel-online:get_workbook': (_config) => `
function step_action_excel_online_get_workbook(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#excel-online): Implement action.excel-online:get_workbook Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'excel-online', operation: 'action.excel-online:get_workbook' });
  throw new Error('TODO[apps-script-backlog]: Implement action.excel-online:get_workbook. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.excel-online:list_tables': (_config) => `
function step_action_excel_online_list_tables(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#excel-online): Implement action.excel-online:list_tables Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'excel-online', operation: 'action.excel-online:list_tables' });
  throw new Error('TODO[apps-script-backlog]: Implement action.excel-online:list_tables. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.excel-online:list_worksheets': (_config) => `
function step_action_excel_online_list_worksheets(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#excel-online): Implement action.excel-online:list_worksheets Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'excel-online', operation: 'action.excel-online:list_worksheets' });
  throw new Error('TODO[apps-script-backlog]: Implement action.excel-online:list_worksheets. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.excel-online:test_connection': (_config) => `
function step_action_excel_online_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#excel-online): Implement action.excel-online:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'excel-online', operation: 'action.excel-online:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.excel-online:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.excel-online:update_range': (_config) => `
function step_action_excel_online_update_range(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#excel-online): Implement action.excel-online:update_range Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'excel-online', operation: 'action.excel-online:update_range' });
  throw new Error('TODO[apps-script-backlog]: Implement action.excel-online:update_range. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.expensify:create_expense': (_config) => `
function step_action_expensify_create_expense(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#expensify): Implement action.expensify:create_expense Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'expensify', operation: 'action.expensify:create_expense' });
  throw new Error('TODO[apps-script-backlog]: Implement action.expensify:create_expense. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.expensify:create_policy_tags': (_config) => `
function step_action_expensify_create_policy_tags(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#expensify): Implement action.expensify:create_policy_tags Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'expensify', operation: 'action.expensify:create_policy_tags' });
  throw new Error('TODO[apps-script-backlog]: Implement action.expensify:create_policy_tags. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.expensify:export_report': (_config) => `
function step_action_expensify_export_report(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#expensify): Implement action.expensify:export_report Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'expensify', operation: 'action.expensify:export_report' });
  throw new Error('TODO[apps-script-backlog]: Implement action.expensify:export_report. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.expensify:get_expense_report': (_config) => `
function step_action_expensify_get_expense_report(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#expensify): Implement action.expensify:get_expense_report Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'expensify', operation: 'action.expensify:get_expense_report' });
  throw new Error('TODO[apps-script-backlog]: Implement action.expensify:get_expense_report. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.expensify:get_expense_reports': (_config) => `
function step_action_expensify_get_expense_reports(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#expensify): Implement action.expensify:get_expense_reports Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'expensify', operation: 'action.expensify:get_expense_reports' });
  throw new Error('TODO[apps-script-backlog]: Implement action.expensify:get_expense_reports. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.expensify:get_policies': (_config) => `
function step_action_expensify_get_policies(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#expensify): Implement action.expensify:get_policies Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'expensify', operation: 'action.expensify:get_policies' });
  throw new Error('TODO[apps-script-backlog]: Implement action.expensify:get_policies. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.expensify:test_connection': (_config) => `
function step_action_expensify_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#expensify): Implement action.expensify:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'expensify', operation: 'action.expensify:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.expensify:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.expensify:upload_receipt': (_config) => `
function step_action_expensify_upload_receipt(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#expensify): Implement action.expensify:upload_receipt Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'expensify', operation: 'action.expensify:upload_receipt' });
  throw new Error('TODO[apps-script-backlog]: Implement action.expensify:upload_receipt. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.freshdesk:create_note': (_config) => `
function step_action_freshdesk_create_note(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#freshdesk): Implement action.freshdesk:create_note Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'freshdesk', operation: 'action.freshdesk:create_note' });
  throw new Error('TODO[apps-script-backlog]: Implement action.freshdesk:create_note. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.freshdesk:create_reply': (_config) => `
function step_action_freshdesk_create_reply(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#freshdesk): Implement action.freshdesk:create_reply Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'freshdesk', operation: 'action.freshdesk:create_reply' });
  throw new Error('TODO[apps-script-backlog]: Implement action.freshdesk:create_reply. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.freshdesk:create_ticket': (_config) => `
function step_action_freshdesk_create_ticket(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#freshdesk): Implement action.freshdesk:create_ticket Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'freshdesk', operation: 'action.freshdesk:create_ticket' });
  throw new Error('TODO[apps-script-backlog]: Implement action.freshdesk:create_ticket. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.freshdesk:get_ticket': (_config) => `
function step_action_freshdesk_get_ticket(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#freshdesk): Implement action.freshdesk:get_ticket Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'freshdesk', operation: 'action.freshdesk:get_ticket' });
  throw new Error('TODO[apps-script-backlog]: Implement action.freshdesk:get_ticket. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.freshdesk:list_tickets': (_config) => `
function step_action_freshdesk_list_tickets(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#freshdesk): Implement action.freshdesk:list_tickets Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'freshdesk', operation: 'action.freshdesk:list_tickets' });
  throw new Error('TODO[apps-script-backlog]: Implement action.freshdesk:list_tickets. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.freshdesk:search_tickets': (_config) => `
function step_action_freshdesk_search_tickets(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#freshdesk): Implement action.freshdesk:search_tickets Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'freshdesk', operation: 'action.freshdesk:search_tickets' });
  throw new Error('TODO[apps-script-backlog]: Implement action.freshdesk:search_tickets. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.freshdesk:test_connection': (_config) => `
function step_action_freshdesk_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#freshdesk): Implement action.freshdesk:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'freshdesk', operation: 'action.freshdesk:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.freshdesk:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.freshdesk:update_ticket': (_config) => `
function step_action_freshdesk_update_ticket(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#freshdesk): Implement action.freshdesk:update_ticket Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'freshdesk', operation: 'action.freshdesk:update_ticket' });
  throw new Error('TODO[apps-script-backlog]: Implement action.freshdesk:update_ticket. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.github-enhanced:create_issue': (_config) => `
function step_action_github_enhanced_create_issue(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#github-enhanced): Implement action.github-enhanced:create_issue Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'github-enhanced', operation: 'action.github-enhanced:create_issue' });
  throw new Error('TODO[apps-script-backlog]: Implement action.github-enhanced:create_issue. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.github-enhanced:create_pull_request': (_config) => `
function step_action_github_enhanced_create_pull_request(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#github-enhanced): Implement action.github-enhanced:create_pull_request Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'github-enhanced', operation: 'action.github-enhanced:create_pull_request' });
  throw new Error('TODO[apps-script-backlog]: Implement action.github-enhanced:create_pull_request. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.github-enhanced:create_repository': (_config) => `
function step_action_github_enhanced_create_repository(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#github-enhanced): Implement action.github-enhanced:create_repository Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'github-enhanced', operation: 'action.github-enhanced:create_repository' });
  throw new Error('TODO[apps-script-backlog]: Implement action.github-enhanced:create_repository. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.github-enhanced:create_webhook': (_config) => `
function step_action_github_enhanced_create_webhook(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#github-enhanced): Implement action.github-enhanced:create_webhook Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'github-enhanced', operation: 'action.github-enhanced:create_webhook' });
  throw new Error('TODO[apps-script-backlog]: Implement action.github-enhanced:create_webhook. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.github-enhanced:merge_pull_request': (_config) => `
function step_action_github_enhanced_merge_pull_request(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#github-enhanced): Implement action.github-enhanced:merge_pull_request Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'github-enhanced', operation: 'action.github-enhanced:merge_pull_request' });
  throw new Error('TODO[apps-script-backlog]: Implement action.github-enhanced:merge_pull_request. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.github-enhanced:search_repositories': (_config) => `
function step_action_github_enhanced_search_repositories(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#github-enhanced): Implement action.github-enhanced:search_repositories Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'github-enhanced', operation: 'action.github-enhanced:search_repositories' });
  throw new Error('TODO[apps-script-backlog]: Implement action.github-enhanced:search_repositories. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.github-enhanced:test_connection': (_config) => `
function step_action_github_enhanced_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#github-enhanced): Implement action.github-enhanced:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'github-enhanced', operation: 'action.github-enhanced:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.github-enhanced:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.github-enhanced:update_issue': (_config) => `
function step_action_github_enhanced_update_issue(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#github-enhanced): Implement action.github-enhanced:update_issue Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'github-enhanced', operation: 'action.github-enhanced:update_issue' });
  throw new Error('TODO[apps-script-backlog]: Implement action.github-enhanced:update_issue. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.github:add_labels_to_issue': (_config) => `
function step_action_github_add_labels_to_issue(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#github): Implement action.github:add_labels_to_issue Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'github', operation: 'action.github:add_labels_to_issue' });
  throw new Error('TODO[apps-script-backlog]: Implement action.github:add_labels_to_issue. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.github:close_issue': (_config) => `
function step_action_github_close_issue(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#github): Implement action.github:close_issue Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'github', operation: 'action.github:close_issue' });
  throw new Error('TODO[apps-script-backlog]: Implement action.github:close_issue. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.github:create_comment': (_config) => `
function step_action_github_create_comment(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#github): Implement action.github:create_comment Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'github', operation: 'action.github:create_comment' });
  throw new Error('TODO[apps-script-backlog]: Implement action.github:create_comment. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.github:create_issue': (_config) => `
function step_action_github_create_issue(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#github): Implement action.github:create_issue Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'github', operation: 'action.github:create_issue' });
  throw new Error('TODO[apps-script-backlog]: Implement action.github:create_issue. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.github:create_pull_request': (_config) => `
function step_action_github_create_pull_request(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#github): Implement action.github:create_pull_request Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'github', operation: 'action.github:create_pull_request' });
  throw new Error('TODO[apps-script-backlog]: Implement action.github:create_pull_request. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.github:create_webhook': (_config) => `
function step_action_github_create_webhook(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#github): Implement action.github:create_webhook Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'github', operation: 'action.github:create_webhook' });
  throw new Error('TODO[apps-script-backlog]: Implement action.github:create_webhook. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.github:get_issue': (_config) => `
function step_action_github_get_issue(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#github): Implement action.github:get_issue Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'github', operation: 'action.github:get_issue' });
  throw new Error('TODO[apps-script-backlog]: Implement action.github:get_issue. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.github:get_repository': (_config) => `
function step_action_github_get_repository(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#github): Implement action.github:get_repository Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'github', operation: 'action.github:get_repository' });
  throw new Error('TODO[apps-script-backlog]: Implement action.github:get_repository. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.github:list_issues': (_config) => `
function step_action_github_list_issues(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#github): Implement action.github:list_issues Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'github', operation: 'action.github:list_issues' });
  throw new Error('TODO[apps-script-backlog]: Implement action.github:list_issues. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.github:list_pull_requests': (_config) => `
function step_action_github_list_pull_requests(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#github): Implement action.github:list_pull_requests Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'github', operation: 'action.github:list_pull_requests' });
  throw new Error('TODO[apps-script-backlog]: Implement action.github:list_pull_requests. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.github:list_repositories': (_config) => `
function step_action_github_list_repositories(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#github): Implement action.github:list_repositories Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'github', operation: 'action.github:list_repositories' });
  throw new Error('TODO[apps-script-backlog]: Implement action.github:list_repositories. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.github:merge_pull_request': (_config) => `
function step_action_github_merge_pull_request(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#github): Implement action.github:merge_pull_request Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'github', operation: 'action.github:merge_pull_request' });
  throw new Error('TODO[apps-script-backlog]: Implement action.github:merge_pull_request. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.github:test_connection': (_config) => `
function step_action_github_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#github): Implement action.github:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'github', operation: 'action.github:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.github:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.github:update_issue': (_config) => `
function step_action_github_update_issue(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#github): Implement action.github:update_issue Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'github', operation: 'action.github:update_issue' });
  throw new Error('TODO[apps-script-backlog]: Implement action.github:update_issue. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.github:update_pull_request': (_config) => `
function step_action_github_update_pull_request(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#github): Implement action.github:update_pull_request Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'github', operation: 'action.github:update_pull_request' });
  throw new Error('TODO[apps-script-backlog]: Implement action.github:update_pull_request. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.gitlab:create_issue': (_config) => `
function step_action_gitlab_create_issue(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#gitlab): Implement action.gitlab:create_issue Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'gitlab', operation: 'action.gitlab:create_issue' });
  throw new Error('TODO[apps-script-backlog]: Implement action.gitlab:create_issue. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.gitlab:create_merge_request': (_config) => `
function step_action_gitlab_create_merge_request(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#gitlab): Implement action.gitlab:create_merge_request Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'gitlab', operation: 'action.gitlab:create_merge_request' });
  throw new Error('TODO[apps-script-backlog]: Implement action.gitlab:create_merge_request. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.gitlab:create_project': (_config) => `
function step_action_gitlab_create_project(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#gitlab): Implement action.gitlab:create_project Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'gitlab', operation: 'action.gitlab:create_project' });
  throw new Error('TODO[apps-script-backlog]: Implement action.gitlab:create_project. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.gitlab:list_projects': (_config) => `
function step_action_gitlab_list_projects(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#gitlab): Implement action.gitlab:list_projects Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'gitlab', operation: 'action.gitlab:list_projects' });
  throw new Error('TODO[apps-script-backlog]: Implement action.gitlab:list_projects. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.gitlab:test_connection': (_config) => `
function step_action_gitlab_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#gitlab): Implement action.gitlab:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'gitlab', operation: 'action.gitlab:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.gitlab:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.gmail-enhanced:create_draft': (_config) => `
function step_action_gmail_enhanced_create_draft(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#gmail-enhanced): Implement action.gmail-enhanced:create_draft Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'gmail-enhanced', operation: 'action.gmail-enhanced:create_draft' });
  throw new Error('TODO[apps-script-backlog]: Implement action.gmail-enhanced:create_draft. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.gmail-enhanced:create_label': (_config) => `
function step_action_gmail_enhanced_create_label(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#gmail-enhanced): Implement action.gmail-enhanced:create_label Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'gmail-enhanced', operation: 'action.gmail-enhanced:create_label' });
  throw new Error('TODO[apps-script-backlog]: Implement action.gmail-enhanced:create_label. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.gmail-enhanced:delete_message': (_config) => `
function step_action_gmail_enhanced_delete_message(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#gmail-enhanced): Implement action.gmail-enhanced:delete_message Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'gmail-enhanced', operation: 'action.gmail-enhanced:delete_message' });
  throw new Error('TODO[apps-script-backlog]: Implement action.gmail-enhanced:delete_message. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.gmail-enhanced:get_message': (_config) => `
function step_action_gmail_enhanced_get_message(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#gmail-enhanced): Implement action.gmail-enhanced:get_message Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'gmail-enhanced', operation: 'action.gmail-enhanced:get_message' });
  throw new Error('TODO[apps-script-backlog]: Implement action.gmail-enhanced:get_message. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.gmail-enhanced:list_labels': (_config) => `
function step_action_gmail_enhanced_list_labels(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#gmail-enhanced): Implement action.gmail-enhanced:list_labels Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'gmail-enhanced', operation: 'action.gmail-enhanced:list_labels' });
  throw new Error('TODO[apps-script-backlog]: Implement action.gmail-enhanced:list_labels. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.gmail-enhanced:list_messages': (_config) => `
function step_action_gmail_enhanced_list_messages(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#gmail-enhanced): Implement action.gmail-enhanced:list_messages Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'gmail-enhanced', operation: 'action.gmail-enhanced:list_messages' });
  throw new Error('TODO[apps-script-backlog]: Implement action.gmail-enhanced:list_messages. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.gmail-enhanced:modify_message': (_config) => `
function step_action_gmail_enhanced_modify_message(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#gmail-enhanced): Implement action.gmail-enhanced:modify_message Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'gmail-enhanced', operation: 'action.gmail-enhanced:modify_message' });
  throw new Error('TODO[apps-script-backlog]: Implement action.gmail-enhanced:modify_message. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.gmail-enhanced:search_messages': (_config) => `
function step_action_gmail_enhanced_search_messages(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#gmail-enhanced): Implement action.gmail-enhanced:search_messages Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'gmail-enhanced', operation: 'action.gmail-enhanced:search_messages' });
  throw new Error('TODO[apps-script-backlog]: Implement action.gmail-enhanced:search_messages. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.gmail-enhanced:send_email': (_config) => `
function step_action_gmail_enhanced_send_email(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#gmail-enhanced): Implement action.gmail-enhanced:send_email Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'gmail-enhanced', operation: 'action.gmail-enhanced:send_email' });
  throw new Error('TODO[apps-script-backlog]: Implement action.gmail-enhanced:send_email. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.gmail-enhanced:test_connection': (_config) => `
function step_action_gmail_enhanced_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#gmail-enhanced): Implement action.gmail-enhanced:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'gmail-enhanced', operation: 'action.gmail-enhanced:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.gmail-enhanced:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.gmail:add_label': (_config) => `
function step_action_gmail_add_label(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#gmail): Implement action.gmail:add_label Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'gmail', operation: 'action.gmail:add_label' });
  throw new Error('TODO[apps-script-backlog]: Implement action.gmail:add_label. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.gmail:get_email': (_config) => `
function step_action_gmail_get_email(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#gmail): Implement action.gmail:get_email Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'gmail', operation: 'action.gmail:get_email' });
  throw new Error('TODO[apps-script-backlog]: Implement action.gmail:get_email. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.gmail:mark_as_read': (_config) => `
function step_action_gmail_mark_as_read(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#gmail): Implement action.gmail:mark_as_read Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'gmail', operation: 'action.gmail:mark_as_read' });
  throw new Error('TODO[apps-script-backlog]: Implement action.gmail:mark_as_read. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.gmail:search_emails': (_config) => `
function step_action_gmail_search_emails(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#gmail): Implement action.gmail:search_emails Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'gmail', operation: 'action.gmail:search_emails' });
  throw new Error('TODO[apps-script-backlog]: Implement action.gmail:search_emails. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.gmail:send_email': (_config) => `
function step_action_gmail_send_email(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#gmail): Implement action.gmail:send_email Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'gmail', operation: 'action.gmail:send_email' });
  throw new Error('TODO[apps-script-backlog]: Implement action.gmail:send_email. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.gmail:send_reply': (_config) => `
function step_action_gmail_send_reply(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#gmail): Implement action.gmail:send_reply Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'gmail', operation: 'action.gmail:send_reply' });
  throw new Error('TODO[apps-script-backlog]: Implement action.gmail:send_reply. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.gmail:test_connection': (_config) => `
function step_action_gmail_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#gmail): Implement action.gmail:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'gmail', operation: 'action.gmail:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.gmail:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-admin:add_group_member': (_config) => `
function step_action_google_admin_add_group_member(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-admin): Implement action.google-admin:add_group_member Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-admin', operation: 'action.google-admin:add_group_member' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-admin:add_group_member. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-admin:create_group': (_config) => `
function step_action_google_admin_create_group(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-admin): Implement action.google-admin:create_group Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-admin', operation: 'action.google-admin:create_group' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-admin:create_group. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-admin:create_user': (_config) => `
function step_action_google_admin_create_user(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-admin): Implement action.google-admin:create_user Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-admin', operation: 'action.google-admin:create_user' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-admin:create_user. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-admin:delete_user': (_config) => `
function step_action_google_admin_delete_user(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-admin): Implement action.google-admin:delete_user Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-admin', operation: 'action.google-admin:delete_user' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-admin:delete_user. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-admin:get_user': (_config) => `
function step_action_google_admin_get_user(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-admin): Implement action.google-admin:get_user Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-admin', operation: 'action.google-admin:get_user' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-admin:get_user. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-admin:list_users': (_config) => `
function step_action_google_admin_list_users(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-admin): Implement action.google-admin:list_users Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-admin', operation: 'action.google-admin:list_users' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-admin:list_users. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-admin:remove_group_member': (_config) => `
function step_action_google_admin_remove_group_member(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-admin): Implement action.google-admin:remove_group_member Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-admin', operation: 'action.google-admin:remove_group_member' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-admin:remove_group_member. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-admin:test_connection': (_config) => `
function step_action_google_admin_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-admin): Implement action.google-admin:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-admin', operation: 'action.google-admin:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-admin:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-admin:update_user': (_config) => `
function step_action_google_admin_update_user(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-admin): Implement action.google-admin:update_user Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-admin', operation: 'action.google-admin:update_user' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-admin:update_user. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-calendar:create_calendar': (_config) => `
function step_action_google_calendar_create_calendar(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-calendar): Implement action.google-calendar:create_calendar Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-calendar', operation: 'action.google-calendar:create_calendar' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-calendar:create_calendar. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-calendar:create_event': (_config) => `
function step_action_google_calendar_create_event(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-calendar): Implement action.google-calendar:create_event Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-calendar', operation: 'action.google-calendar:create_event' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-calendar:create_event. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-calendar:delete_event': (_config) => `
function step_action_google_calendar_delete_event(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-calendar): Implement action.google-calendar:delete_event Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-calendar', operation: 'action.google-calendar:delete_event' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-calendar:delete_event. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-calendar:get_event': (_config) => `
function step_action_google_calendar_get_event(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-calendar): Implement action.google-calendar:get_event Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-calendar', operation: 'action.google-calendar:get_event' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-calendar:get_event. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-calendar:get_freebusy': (_config) => `
function step_action_google_calendar_get_freebusy(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-calendar): Implement action.google-calendar:get_freebusy Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-calendar', operation: 'action.google-calendar:get_freebusy' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-calendar:get_freebusy. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-calendar:list_calendars': (_config) => `
function step_action_google_calendar_list_calendars(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-calendar): Implement action.google-calendar:list_calendars Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-calendar', operation: 'action.google-calendar:list_calendars' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-calendar:list_calendars. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-calendar:list_events': (_config) => `
function step_action_google_calendar_list_events(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-calendar): Implement action.google-calendar:list_events Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-calendar', operation: 'action.google-calendar:list_events' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-calendar:list_events. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-calendar:quick_add': (_config) => `
function step_action_google_calendar_quick_add(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-calendar): Implement action.google-calendar:quick_add Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-calendar', operation: 'action.google-calendar:quick_add' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-calendar:quick_add. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-calendar:stop_channel': (_config) => `
function step_action_google_calendar_stop_channel(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-calendar): Implement action.google-calendar:stop_channel Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-calendar', operation: 'action.google-calendar:stop_channel' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-calendar:stop_channel. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-calendar:test_connection': (_config) => `
function step_action_google_calendar_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-calendar): Implement action.google-calendar:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-calendar', operation: 'action.google-calendar:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-calendar:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-calendar:update_calendar': (_config) => `
function step_action_google_calendar_update_calendar(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-calendar): Implement action.google-calendar:update_calendar Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-calendar', operation: 'action.google-calendar:update_calendar' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-calendar:update_calendar. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-calendar:update_event': (_config) => `
function step_action_google_calendar_update_event(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-calendar): Implement action.google-calendar:update_event Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-calendar', operation: 'action.google-calendar:update_event' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-calendar:update_event. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-calendar:watch_events': (_config) => `
function step_action_google_calendar_watch_events(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-calendar): Implement action.google-calendar:watch_events Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-calendar', operation: 'action.google-calendar:watch_events' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-calendar:watch_events. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-chat:create_membership': (_config) => `
function step_action_google_chat_create_membership(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-chat): Implement action.google-chat:create_membership Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-chat', operation: 'action.google-chat:create_membership' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-chat:create_membership. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-chat:create_space': (_config) => `
function step_action_google_chat_create_space(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-chat): Implement action.google-chat:create_space Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-chat', operation: 'action.google-chat:create_space' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-chat:create_space. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-chat:delete_message': (_config) => `
function step_action_google_chat_delete_message(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-chat): Implement action.google-chat:delete_message Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-chat', operation: 'action.google-chat:delete_message' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-chat:delete_message. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-chat:get_message': (_config) => `
function step_action_google_chat_get_message(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-chat): Implement action.google-chat:get_message Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-chat', operation: 'action.google-chat:get_message' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-chat:get_message. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-chat:get_space': (_config) => `
function step_action_google_chat_get_space(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-chat): Implement action.google-chat:get_space Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-chat', operation: 'action.google-chat:get_space' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-chat:get_space. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-chat:list_members': (_config) => `
function step_action_google_chat_list_members(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-chat): Implement action.google-chat:list_members Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-chat', operation: 'action.google-chat:list_members' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-chat:list_members. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-chat:list_messages': (_config) => `
function step_action_google_chat_list_messages(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-chat): Implement action.google-chat:list_messages Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-chat', operation: 'action.google-chat:list_messages' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-chat:list_messages. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-chat:list_spaces': (_config) => `
function step_action_google_chat_list_spaces(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-chat): Implement action.google-chat:list_spaces Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-chat', operation: 'action.google-chat:list_spaces' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-chat:list_spaces. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-chat:send_message': (_config) => `
function step_action_google_chat_send_message(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-chat): Implement action.google-chat:send_message Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-chat', operation: 'action.google-chat:send_message' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-chat:send_message. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-chat:test_connection': (_config) => `
function step_action_google_chat_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-chat): Implement action.google-chat:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-chat', operation: 'action.google-chat:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-chat:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-chat:update_message': (_config) => `
function step_action_google_chat_update_message(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-chat): Implement action.google-chat:update_message Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-chat', operation: 'action.google-chat:update_message' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-chat:update_message. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-contacts:create_contact': (_config) => `
function step_action_google_contacts_create_contact(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-contacts): Implement action.google-contacts:create_contact Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-contacts', operation: 'action.google-contacts:create_contact' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-contacts:create_contact. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-contacts:create_contact_group': (_config) => `
function step_action_google_contacts_create_contact_group(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-contacts): Implement action.google-contacts:create_contact_group Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-contacts', operation: 'action.google-contacts:create_contact_group' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-contacts:create_contact_group. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-contacts:delete_contact': (_config) => `
function step_action_google_contacts_delete_contact(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-contacts): Implement action.google-contacts:delete_contact Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-contacts', operation: 'action.google-contacts:delete_contact' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-contacts:delete_contact. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-contacts:get_contact': (_config) => `
function step_action_google_contacts_get_contact(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-contacts): Implement action.google-contacts:get_contact Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-contacts', operation: 'action.google-contacts:get_contact' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-contacts:get_contact. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-contacts:list_contact_groups': (_config) => `
function step_action_google_contacts_list_contact_groups(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-contacts): Implement action.google-contacts:list_contact_groups Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-contacts', operation: 'action.google-contacts:list_contact_groups' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-contacts:list_contact_groups. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-contacts:list_contacts': (_config) => `
function step_action_google_contacts_list_contacts(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-contacts): Implement action.google-contacts:list_contacts Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-contacts', operation: 'action.google-contacts:list_contacts' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-contacts:list_contacts. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-contacts:search_contacts': (_config) => `
function step_action_google_contacts_search_contacts(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-contacts): Implement action.google-contacts:search_contacts Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-contacts', operation: 'action.google-contacts:search_contacts' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-contacts:search_contacts. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-contacts:test_connection': (_config) => `
function step_action_google_contacts_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-contacts): Implement action.google-contacts:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-contacts', operation: 'action.google-contacts:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-contacts:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-contacts:update_contact': (_config) => `
function step_action_google_contacts_update_contact(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-contacts): Implement action.google-contacts:update_contact Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-contacts', operation: 'action.google-contacts:update_contact' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-contacts:update_contact. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-docs:batch_update': (_config) => `
function step_action_google_docs_batch_update(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-docs): Implement action.google-docs:batch_update Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-docs', operation: 'action.google-docs:batch_update' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-docs:batch_update. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-docs:create_document': (_config) => `
function step_action_google_docs_create_document(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-docs): Implement action.google-docs:create_document Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-docs', operation: 'action.google-docs:create_document' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-docs:create_document. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-docs:delete_content_range': (_config) => `
function step_action_google_docs_delete_content_range(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-docs): Implement action.google-docs:delete_content_range Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-docs', operation: 'action.google-docs:delete_content_range' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-docs:delete_content_range. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-docs:get_document': (_config) => `
function step_action_google_docs_get_document(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-docs): Implement action.google-docs:get_document Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-docs', operation: 'action.google-docs:get_document' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-docs:get_document. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-docs:insert_image': (_config) => `
function step_action_google_docs_insert_image(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-docs): Implement action.google-docs:insert_image Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-docs', operation: 'action.google-docs:insert_image' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-docs:insert_image. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-docs:insert_table': (_config) => `
function step_action_google_docs_insert_table(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-docs): Implement action.google-docs:insert_table Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-docs', operation: 'action.google-docs:insert_table' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-docs:insert_table. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-docs:insert_text': (_config) => `
function step_action_google_docs_insert_text(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-docs): Implement action.google-docs:insert_text Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-docs', operation: 'action.google-docs:insert_text' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-docs:insert_text. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-docs:replace_text': (_config) => `
function step_action_google_docs_replace_text(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-docs): Implement action.google-docs:replace_text Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-docs', operation: 'action.google-docs:replace_text' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-docs:replace_text. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-docs:test_connection': (_config) => `
function step_action_google_docs_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-docs): Implement action.google-docs:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-docs', operation: 'action.google-docs:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-docs:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-docs:update_text_style': (_config) => `
function step_action_google_docs_update_text_style(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-docs): Implement action.google-docs:update_text_style Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-docs', operation: 'action.google-docs:update_text_style' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-docs:update_text_style. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-drive:copy_file': (_config) => `
function step_action_google_drive_copy_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-drive): Implement action.google-drive:copy_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-drive', operation: 'action.google-drive:copy_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-drive:copy_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-drive:create_file': (_config) => `
function step_action_google_drive_create_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-drive): Implement action.google-drive:create_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-drive', operation: 'action.google-drive:create_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-drive:create_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-drive:create_folder': (_config) => `
function step_action_google_drive_create_folder(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-drive): Implement action.google-drive:create_folder Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-drive', operation: 'action.google-drive:create_folder' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-drive:create_folder. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-drive:delete_file': (_config) => `
function step_action_google_drive_delete_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-drive): Implement action.google-drive:delete_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-drive', operation: 'action.google-drive:delete_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-drive:delete_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-drive:delete_permission': (_config) => `
function step_action_google_drive_delete_permission(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-drive): Implement action.google-drive:delete_permission Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-drive', operation: 'action.google-drive:delete_permission' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-drive:delete_permission. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-drive:download_file': (_config) => `
function step_action_google_drive_download_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-drive): Implement action.google-drive:download_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-drive', operation: 'action.google-drive:download_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-drive:download_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-drive:get_file': (_config) => `
function step_action_google_drive_get_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-drive): Implement action.google-drive:get_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-drive', operation: 'action.google-drive:get_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-drive:get_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-drive:get_file_permissions': (_config) => `
function step_action_google_drive_get_file_permissions(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-drive): Implement action.google-drive:get_file_permissions Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-drive', operation: 'action.google-drive:get_file_permissions' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-drive:get_file_permissions. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-drive:list_files': (_config) => `
function step_action_google_drive_list_files(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-drive): Implement action.google-drive:list_files Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-drive', operation: 'action.google-drive:list_files' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-drive:list_files. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-drive:move_file': (_config) => `
function step_action_google_drive_move_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-drive): Implement action.google-drive:move_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-drive', operation: 'action.google-drive:move_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-drive:move_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-drive:share_file': (_config) => `
function step_action_google_drive_share_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-drive): Implement action.google-drive:share_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-drive', operation: 'action.google-drive:share_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-drive:share_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-drive:test_connection': (_config) => `
function step_action_google_drive_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-drive): Implement action.google-drive:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-drive', operation: 'action.google-drive:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-drive:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-drive:update_file_metadata': (_config) => `
function step_action_google_drive_update_file_metadata(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-drive): Implement action.google-drive:update_file_metadata Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-drive', operation: 'action.google-drive:update_file_metadata' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-drive:update_file_metadata. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-drive:update_permission': (_config) => `
function step_action_google_drive_update_permission(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-drive): Implement action.google-drive:update_permission Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-drive', operation: 'action.google-drive:update_permission' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-drive:update_permission. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-drive:upload_file': (_config) => `
function step_action_google_drive_upload_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-drive): Implement action.google-drive:upload_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-drive', operation: 'action.google-drive:upload_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-drive:upload_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-forms:add_question': (_config) => `
function step_action_google_forms_add_question(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-forms): Implement action.google-forms:add_question Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-forms', operation: 'action.google-forms:add_question' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-forms:add_question. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-forms:batch_update': (_config) => `
function step_action_google_forms_batch_update(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-forms): Implement action.google-forms:batch_update Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-forms', operation: 'action.google-forms:batch_update' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-forms:batch_update. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-forms:create_form': (_config) => `
function step_action_google_forms_create_form(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-forms): Implement action.google-forms:create_form Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-forms', operation: 'action.google-forms:create_form' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-forms:create_form. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-forms:delete_item': (_config) => `
function step_action_google_forms_delete_item(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-forms): Implement action.google-forms:delete_item Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-forms', operation: 'action.google-forms:delete_item' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-forms:delete_item. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-forms:get_form': (_config) => `
function step_action_google_forms_get_form(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-forms): Implement action.google-forms:get_form Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-forms', operation: 'action.google-forms:get_form' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-forms:get_form. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-forms:get_response': (_config) => `
function step_action_google_forms_get_response(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-forms): Implement action.google-forms:get_response Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-forms', operation: 'action.google-forms:get_response' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-forms:get_response. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-forms:list_responses': (_config) => `
function step_action_google_forms_list_responses(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-forms): Implement action.google-forms:list_responses Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-forms', operation: 'action.google-forms:list_responses' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-forms:list_responses. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-forms:test_connection': (_config) => `
function step_action_google_forms_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-forms): Implement action.google-forms:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-forms', operation: 'action.google-forms:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-forms:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-forms:update_form_info': (_config) => `
function step_action_google_forms_update_form_info(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-forms): Implement action.google-forms:update_form_info Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-forms', operation: 'action.google-forms:update_form_info' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-forms:update_form_info. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-forms:update_settings': (_config) => `
function step_action_google_forms_update_settings(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-forms): Implement action.google-forms:update_settings Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-forms', operation: 'action.google-forms:update_settings' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-forms:update_settings. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-meet:create_space': (_config) => `
function step_action_google_meet_create_space(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-meet): Implement action.google-meet:create_space Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-meet', operation: 'action.google-meet:create_space' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-meet:create_space. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-meet:end_active_conference': (_config) => `
function step_action_google_meet_end_active_conference(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-meet): Implement action.google-meet:end_active_conference Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-meet', operation: 'action.google-meet:end_active_conference' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-meet:end_active_conference. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-meet:get_conference_record': (_config) => `
function step_action_google_meet_get_conference_record(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-meet): Implement action.google-meet:get_conference_record Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-meet', operation: 'action.google-meet:get_conference_record' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-meet:get_conference_record. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-meet:get_participant': (_config) => `
function step_action_google_meet_get_participant(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-meet): Implement action.google-meet:get_participant Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-meet', operation: 'action.google-meet:get_participant' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-meet:get_participant. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-meet:get_participant_session': (_config) => `
function step_action_google_meet_get_participant_session(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-meet): Implement action.google-meet:get_participant_session Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-meet', operation: 'action.google-meet:get_participant_session' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-meet:get_participant_session. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-meet:get_space': (_config) => `
function step_action_google_meet_get_space(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-meet): Implement action.google-meet:get_space Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-meet', operation: 'action.google-meet:get_space' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-meet:get_space. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-meet:list_conference_records': (_config) => `
function step_action_google_meet_list_conference_records(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-meet): Implement action.google-meet:list_conference_records Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-meet', operation: 'action.google-meet:list_conference_records' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-meet:list_conference_records. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-meet:list_participant_sessions': (_config) => `
function step_action_google_meet_list_participant_sessions(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-meet): Implement action.google-meet:list_participant_sessions Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-meet', operation: 'action.google-meet:list_participant_sessions' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-meet:list_participant_sessions. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-meet:list_participants': (_config) => `
function step_action_google_meet_list_participants(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-meet): Implement action.google-meet:list_participants Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-meet', operation: 'action.google-meet:list_participants' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-meet:list_participants. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-meet:test_connection': (_config) => `
function step_action_google_meet_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-meet): Implement action.google-meet:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-meet', operation: 'action.google-meet:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-meet:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-sheets-enhanced:append_row': (_config) => `
function step_action_google_sheets_enhanced_append_row(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-sheets-enhanced): Implement action.google-sheets-enhanced:append_row Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-sheets-enhanced', operation: 'action.google-sheets-enhanced:append_row' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-sheets-enhanced:append_row. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-sheets-enhanced:clear_range': (_config) => `
function step_action_google_sheets_enhanced_clear_range(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-sheets-enhanced): Implement action.google-sheets-enhanced:clear_range Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-sheets-enhanced', operation: 'action.google-sheets-enhanced:clear_range' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-sheets-enhanced:clear_range. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-sheets-enhanced:create_sheet': (_config) => `
function step_action_google_sheets_enhanced_create_sheet(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-sheets-enhanced): Implement action.google-sheets-enhanced:create_sheet Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-sheets-enhanced', operation: 'action.google-sheets-enhanced:create_sheet' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-sheets-enhanced:create_sheet. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-sheets-enhanced:delete_sheet': (_config) => `
function step_action_google_sheets_enhanced_delete_sheet(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-sheets-enhanced): Implement action.google-sheets-enhanced:delete_sheet Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-sheets-enhanced', operation: 'action.google-sheets-enhanced:delete_sheet' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-sheets-enhanced:delete_sheet. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-sheets-enhanced:duplicate_sheet': (_config) => `
function step_action_google_sheets_enhanced_duplicate_sheet(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-sheets-enhanced): Implement action.google-sheets-enhanced:duplicate_sheet Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-sheets-enhanced', operation: 'action.google-sheets-enhanced:duplicate_sheet' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-sheets-enhanced:duplicate_sheet. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-sheets-enhanced:find_replace': (_config) => `
function step_action_google_sheets_enhanced_find_replace(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-sheets-enhanced): Implement action.google-sheets-enhanced:find_replace Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-sheets-enhanced', operation: 'action.google-sheets-enhanced:find_replace' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-sheets-enhanced:find_replace. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-sheets-enhanced:format_cells': (_config) => `
function step_action_google_sheets_enhanced_format_cells(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-sheets-enhanced): Implement action.google-sheets-enhanced:format_cells Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-sheets-enhanced', operation: 'action.google-sheets-enhanced:format_cells' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-sheets-enhanced:format_cells. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-sheets-enhanced:get_values': (_config) => `
function step_action_google_sheets_enhanced_get_values(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-sheets-enhanced): Implement action.google-sheets-enhanced:get_values Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-sheets-enhanced', operation: 'action.google-sheets-enhanced:get_values' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-sheets-enhanced:get_values. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-sheets-enhanced:sort_range': (_config) => `
function step_action_google_sheets_enhanced_sort_range(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-sheets-enhanced): Implement action.google-sheets-enhanced:sort_range Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-sheets-enhanced', operation: 'action.google-sheets-enhanced:sort_range' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-sheets-enhanced:sort_range. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-sheets-enhanced:test_connection': (_config) => `
function step_action_google_sheets_enhanced_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-sheets-enhanced): Implement action.google-sheets-enhanced:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-sheets-enhanced', operation: 'action.google-sheets-enhanced:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-sheets-enhanced:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-sheets-enhanced:update_cell': (_config) => `
function step_action_google_sheets_enhanced_update_cell(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-sheets-enhanced): Implement action.google-sheets-enhanced:update_cell Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-sheets-enhanced', operation: 'action.google-sheets-enhanced:update_cell' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-sheets-enhanced:update_cell. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-sheets-enhanced:update_range': (_config) => `
function step_action_google_sheets_enhanced_update_range(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-sheets-enhanced): Implement action.google-sheets-enhanced:update_range Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-sheets-enhanced', operation: 'action.google-sheets-enhanced:update_range' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-sheets-enhanced:update_range. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-slides:batch_update': (_config) => `
function step_action_google_slides_batch_update(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-slides): Implement action.google-slides:batch_update Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-slides', operation: 'action.google-slides:batch_update' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-slides:batch_update. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-slides:create_image': (_config) => `
function step_action_google_slides_create_image(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-slides): Implement action.google-slides:create_image Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-slides', operation: 'action.google-slides:create_image' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-slides:create_image. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-slides:create_presentation': (_config) => `
function step_action_google_slides_create_presentation(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-slides): Implement action.google-slides:create_presentation Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-slides', operation: 'action.google-slides:create_presentation' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-slides:create_presentation. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-slides:create_shape': (_config) => `
function step_action_google_slides_create_shape(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-slides): Implement action.google-slides:create_shape Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-slides', operation: 'action.google-slides:create_shape' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-slides:create_shape. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-slides:create_slide': (_config) => `
function step_action_google_slides_create_slide(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-slides): Implement action.google-slides:create_slide Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-slides', operation: 'action.google-slides:create_slide' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-slides:create_slide. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-slides:delete_object': (_config) => `
function step_action_google_slides_delete_object(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-slides): Implement action.google-slides:delete_object Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-slides', operation: 'action.google-slides:delete_object' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-slides:delete_object. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-slides:get_presentation': (_config) => `
function step_action_google_slides_get_presentation(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-slides): Implement action.google-slides:get_presentation Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-slides', operation: 'action.google-slides:get_presentation' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-slides:get_presentation. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-slides:insert_text': (_config) => `
function step_action_google_slides_insert_text(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-slides): Implement action.google-slides:insert_text Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-slides', operation: 'action.google-slides:insert_text' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-slides:insert_text. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-slides:replace_all_text': (_config) => `
function step_action_google_slides_replace_all_text(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-slides): Implement action.google-slides:replace_all_text Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-slides', operation: 'action.google-slides:replace_all_text' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-slides:replace_all_text. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.google-slides:test_connection': (_config) => `
function step_action_google_slides_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-slides): Implement action.google-slides:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-slides', operation: 'action.google-slides:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.google-slides:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.grafana:create_alert_rule': (_config) => `
function step_action_grafana_create_alert_rule(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#grafana): Implement action.grafana:create_alert_rule Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'grafana', operation: 'action.grafana:create_alert_rule' });
  throw new Error('TODO[apps-script-backlog]: Implement action.grafana:create_alert_rule. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.grafana:create_dashboard': (_config) => `
function step_action_grafana_create_dashboard(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#grafana): Implement action.grafana:create_dashboard Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'grafana', operation: 'action.grafana:create_dashboard' });
  throw new Error('TODO[apps-script-backlog]: Implement action.grafana:create_dashboard. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.grafana:create_datasource': (_config) => `
function step_action_grafana_create_datasource(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#grafana): Implement action.grafana:create_datasource Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'grafana', operation: 'action.grafana:create_datasource' });
  throw new Error('TODO[apps-script-backlog]: Implement action.grafana:create_datasource. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.grafana:get_dashboard': (_config) => `
function step_action_grafana_get_dashboard(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#grafana): Implement action.grafana:get_dashboard Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'grafana', operation: 'action.grafana:get_dashboard' });
  throw new Error('TODO[apps-script-backlog]: Implement action.grafana:get_dashboard. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.grafana:test_connection': (_config) => `
function step_action_grafana_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#grafana): Implement action.grafana:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'grafana', operation: 'action.grafana:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.grafana:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.greenhouse:advance_application': (_config) => `
function step_action_greenhouse_advance_application(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#greenhouse): Implement action.greenhouse:advance_application Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'greenhouse', operation: 'action.greenhouse:advance_application' });
  throw new Error('TODO[apps-script-backlog]: Implement action.greenhouse:advance_application. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.greenhouse:create_candidate': (_config) => `
function step_action_greenhouse_create_candidate(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#greenhouse): Implement action.greenhouse:create_candidate Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'greenhouse', operation: 'action.greenhouse:create_candidate' });
  throw new Error('TODO[apps-script-backlog]: Implement action.greenhouse:create_candidate. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.greenhouse:get_application': (_config) => `
function step_action_greenhouse_get_application(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#greenhouse): Implement action.greenhouse:get_application Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'greenhouse', operation: 'action.greenhouse:get_application' });
  throw new Error('TODO[apps-script-backlog]: Implement action.greenhouse:get_application. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.greenhouse:get_candidate': (_config) => `
function step_action_greenhouse_get_candidate(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#greenhouse): Implement action.greenhouse:get_candidate Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'greenhouse', operation: 'action.greenhouse:get_candidate' });
  throw new Error('TODO[apps-script-backlog]: Implement action.greenhouse:get_candidate. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.greenhouse:get_job': (_config) => `
function step_action_greenhouse_get_job(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#greenhouse): Implement action.greenhouse:get_job Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'greenhouse', operation: 'action.greenhouse:get_job' });
  throw new Error('TODO[apps-script-backlog]: Implement action.greenhouse:get_job. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.greenhouse:list_applications': (_config) => `
function step_action_greenhouse_list_applications(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#greenhouse): Implement action.greenhouse:list_applications Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'greenhouse', operation: 'action.greenhouse:list_applications' });
  throw new Error('TODO[apps-script-backlog]: Implement action.greenhouse:list_applications. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.greenhouse:list_candidates': (_config) => `
function step_action_greenhouse_list_candidates(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#greenhouse): Implement action.greenhouse:list_candidates Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'greenhouse', operation: 'action.greenhouse:list_candidates' });
  throw new Error('TODO[apps-script-backlog]: Implement action.greenhouse:list_candidates. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.greenhouse:list_jobs': (_config) => `
function step_action_greenhouse_list_jobs(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#greenhouse): Implement action.greenhouse:list_jobs Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'greenhouse', operation: 'action.greenhouse:list_jobs' });
  throw new Error('TODO[apps-script-backlog]: Implement action.greenhouse:list_jobs. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.greenhouse:reject_application': (_config) => `
function step_action_greenhouse_reject_application(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#greenhouse): Implement action.greenhouse:reject_application Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'greenhouse', operation: 'action.greenhouse:reject_application' });
  throw new Error('TODO[apps-script-backlog]: Implement action.greenhouse:reject_application. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.greenhouse:test_connection': (_config) => `
function step_action_greenhouse_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#greenhouse): Implement action.greenhouse:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'greenhouse', operation: 'action.greenhouse:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.greenhouse:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.greenhouse:unreject_application': (_config) => `
function step_action_greenhouse_unreject_application(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#greenhouse): Implement action.greenhouse:unreject_application Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'greenhouse', operation: 'action.greenhouse:unreject_application' });
  throw new Error('TODO[apps-script-backlog]: Implement action.greenhouse:unreject_application. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.greenhouse:update_candidate': (_config) => `
function step_action_greenhouse_update_candidate(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#greenhouse): Implement action.greenhouse:update_candidate Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'greenhouse', operation: 'action.greenhouse:update_candidate' });
  throw new Error('TODO[apps-script-backlog]: Implement action.greenhouse:update_candidate. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.guru:add_team_member': (_config) => `
function step_action_guru_add_team_member(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#guru): Implement action.guru:add_team_member Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'guru', operation: 'action.guru:add_team_member' });
  throw new Error('TODO[apps-script-backlog]: Implement action.guru:add_team_member. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.guru:create_card': (_config) => `
function step_action_guru_create_card(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#guru): Implement action.guru:create_card Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'guru', operation: 'action.guru:create_card' });
  throw new Error('TODO[apps-script-backlog]: Implement action.guru:create_card. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.guru:delete_card': (_config) => `
function step_action_guru_delete_card(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#guru): Implement action.guru:delete_card Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'guru', operation: 'action.guru:delete_card' });
  throw new Error('TODO[apps-script-backlog]: Implement action.guru:delete_card. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.guru:get_analytics': (_config) => `
function step_action_guru_get_analytics(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#guru): Implement action.guru:get_analytics Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'guru', operation: 'action.guru:get_analytics' });
  throw new Error('TODO[apps-script-backlog]: Implement action.guru:get_analytics. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.guru:get_card': (_config) => `
function step_action_guru_get_card(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#guru): Implement action.guru:get_card Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'guru', operation: 'action.guru:get_card' });
  throw new Error('TODO[apps-script-backlog]: Implement action.guru:get_card. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.guru:get_cards': (_config) => `
function step_action_guru_get_cards(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#guru): Implement action.guru:get_cards Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'guru', operation: 'action.guru:get_cards' });
  throw new Error('TODO[apps-script-backlog]: Implement action.guru:get_cards. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.guru:get_collection': (_config) => `
function step_action_guru_get_collection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#guru): Implement action.guru:get_collection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'guru', operation: 'action.guru:get_collection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.guru:get_collection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.guru:get_collections': (_config) => `
function step_action_guru_get_collections(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#guru): Implement action.guru:get_collections Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'guru', operation: 'action.guru:get_collections' });
  throw new Error('TODO[apps-script-backlog]: Implement action.guru:get_collections. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.guru:get_team_members': (_config) => `
function step_action_guru_get_team_members(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#guru): Implement action.guru:get_team_members Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'guru', operation: 'action.guru:get_team_members' });
  throw new Error('TODO[apps-script-backlog]: Implement action.guru:get_team_members. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.guru:search_cards': (_config) => `
function step_action_guru_search_cards(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#guru): Implement action.guru:search_cards Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'guru', operation: 'action.guru:search_cards' });
  throw new Error('TODO[apps-script-backlog]: Implement action.guru:search_cards. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.guru:test_connection': (_config) => `
function step_action_guru_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#guru): Implement action.guru:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'guru', operation: 'action.guru:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.guru:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.guru:update_card': (_config) => `
function step_action_guru_update_card(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#guru): Implement action.guru:update_card Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'guru', operation: 'action.guru:update_card' });
  throw new Error('TODO[apps-script-backlog]: Implement action.guru:update_card. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hashicorp-vault:create_policy': (_config) => `
function step_action_hashicorp_vault_create_policy(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hashicorp-vault): Implement action.hashicorp-vault:create_policy Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hashicorp-vault', operation: 'action.hashicorp-vault:create_policy' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hashicorp-vault:create_policy. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hashicorp-vault:delete_secret': (_config) => `
function step_action_hashicorp_vault_delete_secret(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hashicorp-vault): Implement action.hashicorp-vault:delete_secret Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hashicorp-vault', operation: 'action.hashicorp-vault:delete_secret' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hashicorp-vault:delete_secret. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hashicorp-vault:read_secret': (_config) => `
function step_action_hashicorp_vault_read_secret(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hashicorp-vault): Implement action.hashicorp-vault:read_secret Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hashicorp-vault', operation: 'action.hashicorp-vault:read_secret' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hashicorp-vault:read_secret. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hashicorp-vault:test_connection': (_config) => `
function step_action_hashicorp_vault_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hashicorp-vault): Implement action.hashicorp-vault:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hashicorp-vault', operation: 'action.hashicorp-vault:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hashicorp-vault:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hashicorp-vault:write_secret': (_config) => `
function step_action_hashicorp_vault_write_secret(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hashicorp-vault): Implement action.hashicorp-vault:write_secret Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hashicorp-vault', operation: 'action.hashicorp-vault:write_secret' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hashicorp-vault:write_secret. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hellosign:cancel_signature_request': (_config) => `
function step_action_hellosign_cancel_signature_request(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hellosign): Implement action.hellosign:cancel_signature_request Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hellosign', operation: 'action.hellosign:cancel_signature_request' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hellosign:cancel_signature_request. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hellosign:create_embedded_signature_request': (_config) => `
function step_action_hellosign_create_embedded_signature_request(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hellosign): Implement action.hellosign:create_embedded_signature_request Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hellosign', operation: 'action.hellosign:create_embedded_signature_request' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hellosign:create_embedded_signature_request. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hellosign:create_template': (_config) => `
function step_action_hellosign_create_template(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hellosign): Implement action.hellosign:create_template Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hellosign', operation: 'action.hellosign:create_template' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hellosign:create_template. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hellosign:download_files': (_config) => `
function step_action_hellosign_download_files(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hellosign): Implement action.hellosign:download_files Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hellosign', operation: 'action.hellosign:download_files' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hellosign:download_files. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hellosign:get_account': (_config) => `
function step_action_hellosign_get_account(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hellosign): Implement action.hellosign:get_account Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hellosign', operation: 'action.hellosign:get_account' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hellosign:get_account. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hellosign:get_embedded_sign_url': (_config) => `
function step_action_hellosign_get_embedded_sign_url(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hellosign): Implement action.hellosign:get_embedded_sign_url Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hellosign', operation: 'action.hellosign:get_embedded_sign_url' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hellosign:get_embedded_sign_url. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hellosign:get_signature_request': (_config) => `
function step_action_hellosign_get_signature_request(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hellosign): Implement action.hellosign:get_signature_request Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hellosign', operation: 'action.hellosign:get_signature_request' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hellosign:get_signature_request. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hellosign:get_template': (_config) => `
function step_action_hellosign_get_template(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hellosign): Implement action.hellosign:get_template Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hellosign', operation: 'action.hellosign:get_template' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hellosign:get_template. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hellosign:list_signature_requests': (_config) => `
function step_action_hellosign_list_signature_requests(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hellosign): Implement action.hellosign:list_signature_requests Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hellosign', operation: 'action.hellosign:list_signature_requests' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hellosign:list_signature_requests. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hellosign:remind_signature_request': (_config) => `
function step_action_hellosign_remind_signature_request(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hellosign): Implement action.hellosign:remind_signature_request Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hellosign', operation: 'action.hellosign:remind_signature_request' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hellosign:remind_signature_request. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hellosign:send_signature_request': (_config) => `
function step_action_hellosign_send_signature_request(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hellosign): Implement action.hellosign:send_signature_request Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hellosign', operation: 'action.hellosign:send_signature_request' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hellosign:send_signature_request. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hellosign:send_with_template': (_config) => `
function step_action_hellosign_send_with_template(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hellosign): Implement action.hellosign:send_with_template Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hellosign', operation: 'action.hellosign:send_with_template' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hellosign:send_with_template. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hellosign:test_connection': (_config) => `
function step_action_hellosign_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hellosign): Implement action.hellosign:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hellosign', operation: 'action.hellosign:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hellosign:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.helm:install_chart': (_config) => `
function step_action_helm_install_chart(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#helm): Implement action.helm:install_chart Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'helm', operation: 'action.helm:install_chart' });
  throw new Error('TODO[apps-script-backlog]: Implement action.helm:install_chart. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.helm:list_releases': (_config) => `
function step_action_helm_list_releases(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#helm): Implement action.helm:list_releases Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'helm', operation: 'action.helm:list_releases' });
  throw new Error('TODO[apps-script-backlog]: Implement action.helm:list_releases. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.helm:test_connection': (_config) => `
function step_action_helm_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#helm): Implement action.helm:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'helm', operation: 'action.helm:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.helm:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.helm:uninstall_release': (_config) => `
function step_action_helm_uninstall_release(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#helm): Implement action.helm:uninstall_release Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'helm', operation: 'action.helm:uninstall_release' });
  throw new Error('TODO[apps-script-backlog]: Implement action.helm:uninstall_release. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.helm:upgrade_release': (_config) => `
function step_action_helm_upgrade_release(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#helm): Implement action.helm:upgrade_release Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'helm', operation: 'action.helm:upgrade_release' });
  throw new Error('TODO[apps-script-backlog]: Implement action.helm:upgrade_release. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hubspot-enhanced:bulk_create_contacts': (_config) => `
function step_action_hubspot_enhanced_bulk_create_contacts(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot-enhanced): Implement action.hubspot-enhanced:bulk_create_contacts Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot-enhanced', operation: 'action.hubspot-enhanced:bulk_create_contacts' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hubspot-enhanced:bulk_create_contacts. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hubspot-enhanced:create_company': (_config) => `
function step_action_hubspot_enhanced_create_company(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot-enhanced): Implement action.hubspot-enhanced:create_company Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot-enhanced', operation: 'action.hubspot-enhanced:create_company' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hubspot-enhanced:create_company. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hubspot-enhanced:create_contact': (_config) => `
function step_action_hubspot_enhanced_create_contact(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot-enhanced): Implement action.hubspot-enhanced:create_contact Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot-enhanced', operation: 'action.hubspot-enhanced:create_contact' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hubspot-enhanced:create_contact. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hubspot-enhanced:create_deal': (_config) => `
function step_action_hubspot_enhanced_create_deal(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot-enhanced): Implement action.hubspot-enhanced:create_deal Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot-enhanced', operation: 'action.hubspot-enhanced:create_deal' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hubspot-enhanced:create_deal. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hubspot-enhanced:create_note': (_config) => `
function step_action_hubspot_enhanced_create_note(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot-enhanced): Implement action.hubspot-enhanced:create_note Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot-enhanced', operation: 'action.hubspot-enhanced:create_note' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hubspot-enhanced:create_note. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hubspot-enhanced:create_task': (_config) => `
function step_action_hubspot_enhanced_create_task(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot-enhanced): Implement action.hubspot-enhanced:create_task Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot-enhanced', operation: 'action.hubspot-enhanced:create_task' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hubspot-enhanced:create_task. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hubspot-enhanced:get_contact': (_config) => `
function step_action_hubspot_enhanced_get_contact(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot-enhanced): Implement action.hubspot-enhanced:get_contact Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot-enhanced', operation: 'action.hubspot-enhanced:get_contact' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hubspot-enhanced:get_contact. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hubspot-enhanced:search_contacts': (_config) => `
function step_action_hubspot_enhanced_search_contacts(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot-enhanced): Implement action.hubspot-enhanced:search_contacts Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot-enhanced', operation: 'action.hubspot-enhanced:search_contacts' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hubspot-enhanced:search_contacts. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hubspot-enhanced:test_connection': (_config) => `
function step_action_hubspot_enhanced_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot-enhanced): Implement action.hubspot-enhanced:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot-enhanced', operation: 'action.hubspot-enhanced:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hubspot-enhanced:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hubspot-enhanced:update_company': (_config) => `
function step_action_hubspot_enhanced_update_company(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot-enhanced): Implement action.hubspot-enhanced:update_company Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot-enhanced', operation: 'action.hubspot-enhanced:update_company' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hubspot-enhanced:update_company. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hubspot-enhanced:update_contact': (_config) => `
function step_action_hubspot_enhanced_update_contact(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot-enhanced): Implement action.hubspot-enhanced:update_contact Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot-enhanced', operation: 'action.hubspot-enhanced:update_contact' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hubspot-enhanced:update_contact. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hubspot-enhanced:update_deal': (_config) => `
function step_action_hubspot_enhanced_update_deal(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot-enhanced): Implement action.hubspot-enhanced:update_deal Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot-enhanced', operation: 'action.hubspot-enhanced:update_deal' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hubspot-enhanced:update_deal. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hubspot:create_company': (_config) => `
function step_action_hubspot_create_company(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot): Implement action.hubspot:create_company Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot', operation: 'action.hubspot:create_company' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hubspot:create_company. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hubspot:create_contact': (_config) => `
function step_action_hubspot_create_contact(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot): Implement action.hubspot:create_contact Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot', operation: 'action.hubspot:create_contact' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hubspot:create_contact. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hubspot:create_deal': (_config) => `
function step_action_hubspot_create_deal(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot): Implement action.hubspot:create_deal Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot', operation: 'action.hubspot:create_deal' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hubspot:create_deal. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hubspot:create_note': (_config) => `
function step_action_hubspot_create_note(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot): Implement action.hubspot:create_note Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot', operation: 'action.hubspot:create_note' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hubspot:create_note. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hubspot:create_ticket': (_config) => `
function step_action_hubspot_create_ticket(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot): Implement action.hubspot:create_ticket Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot', operation: 'action.hubspot:create_ticket' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hubspot:create_ticket. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hubspot:get_contact': (_config) => `
function step_action_hubspot_get_contact(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot): Implement action.hubspot:get_contact Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot', operation: 'action.hubspot:get_contact' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hubspot:get_contact. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hubspot:get_deal': (_config) => `
function step_action_hubspot_get_deal(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot): Implement action.hubspot:get_deal Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot', operation: 'action.hubspot:get_deal' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hubspot:get_deal. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hubspot:list_deals': (_config) => `
function step_action_hubspot_list_deals(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot): Implement action.hubspot:list_deals Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot', operation: 'action.hubspot:list_deals' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hubspot:list_deals. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hubspot:search_contacts': (_config) => `
function step_action_hubspot_search_contacts(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot): Implement action.hubspot:search_contacts Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot', operation: 'action.hubspot:search_contacts' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hubspot:search_contacts. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hubspot:search_deals': (_config) => `
function step_action_hubspot_search_deals(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot): Implement action.hubspot:search_deals Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot', operation: 'action.hubspot:search_deals' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hubspot:search_deals. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hubspot:send_email': (_config) => `
function step_action_hubspot_send_email(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot): Implement action.hubspot:send_email Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot', operation: 'action.hubspot:send_email' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hubspot:send_email. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hubspot:test_connection': (_config) => `
function step_action_hubspot_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot): Implement action.hubspot:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot', operation: 'action.hubspot:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hubspot:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hubspot:update_contact': (_config) => `
function step_action_hubspot_update_contact(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot): Implement action.hubspot:update_contact Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot', operation: 'action.hubspot:update_contact' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hubspot:update_contact. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hubspot:update_deal': (_config) => `
function step_action_hubspot_update_deal(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot): Implement action.hubspot:update_deal Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot', operation: 'action.hubspot:update_deal' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hubspot:update_deal. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.hubspot:update_deal_stage': (_config) => `
function step_action_hubspot_update_deal_stage(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot): Implement action.hubspot:update_deal_stage Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot', operation: 'action.hubspot:update_deal_stage' });
  throw new Error('TODO[apps-script-backlog]: Implement action.hubspot:update_deal_stage. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.intercom:assign_conversation': (_config) => `
function step_action_intercom_assign_conversation(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#intercom): Implement action.intercom:assign_conversation Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'intercom', operation: 'action.intercom:assign_conversation' });
  throw new Error('TODO[apps-script-backlog]: Implement action.intercom:assign_conversation. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.intercom:close_conversation': (_config) => `
function step_action_intercom_close_conversation(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#intercom): Implement action.intercom:close_conversation Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'intercom', operation: 'action.intercom:close_conversation' });
  throw new Error('TODO[apps-script-backlog]: Implement action.intercom:close_conversation. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.intercom:create_contact': (_config) => `
function step_action_intercom_create_contact(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#intercom): Implement action.intercom:create_contact Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'intercom', operation: 'action.intercom:create_contact' });
  throw new Error('TODO[apps-script-backlog]: Implement action.intercom:create_contact. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.intercom:create_conversation': (_config) => `
function step_action_intercom_create_conversation(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#intercom): Implement action.intercom:create_conversation Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'intercom', operation: 'action.intercom:create_conversation' });
  throw new Error('TODO[apps-script-backlog]: Implement action.intercom:create_conversation. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.intercom:create_note': (_config) => `
function step_action_intercom_create_note(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#intercom): Implement action.intercom:create_note Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'intercom', operation: 'action.intercom:create_note' });
  throw new Error('TODO[apps-script-backlog]: Implement action.intercom:create_note. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.intercom:delete_contact': (_config) => `
function step_action_intercom_delete_contact(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#intercom): Implement action.intercom:delete_contact Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'intercom', operation: 'action.intercom:delete_contact' });
  throw new Error('TODO[apps-script-backlog]: Implement action.intercom:delete_contact. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.intercom:get_contact': (_config) => `
function step_action_intercom_get_contact(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#intercom): Implement action.intercom:get_contact Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'intercom', operation: 'action.intercom:get_contact' });
  throw new Error('TODO[apps-script-backlog]: Implement action.intercom:get_contact. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.intercom:list_admins': (_config) => `
function step_action_intercom_list_admins(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#intercom): Implement action.intercom:list_admins Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'intercom', operation: 'action.intercom:list_admins' });
  throw new Error('TODO[apps-script-backlog]: Implement action.intercom:list_admins. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.intercom:list_contacts': (_config) => `
function step_action_intercom_list_contacts(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#intercom): Implement action.intercom:list_contacts Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'intercom', operation: 'action.intercom:list_contacts' });
  throw new Error('TODO[apps-script-backlog]: Implement action.intercom:list_contacts. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.intercom:reply_conversation': (_config) => `
function step_action_intercom_reply_conversation(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#intercom): Implement action.intercom:reply_conversation Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'intercom', operation: 'action.intercom:reply_conversation' });
  throw new Error('TODO[apps-script-backlog]: Implement action.intercom:reply_conversation. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.intercom:search_contacts': (_config) => `
function step_action_intercom_search_contacts(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#intercom): Implement action.intercom:search_contacts Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'intercom', operation: 'action.intercom:search_contacts' });
  throw new Error('TODO[apps-script-backlog]: Implement action.intercom:search_contacts. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.intercom:test_connection': (_config) => `
function step_action_intercom_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#intercom): Implement action.intercom:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'intercom', operation: 'action.intercom:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.intercom:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.intercom:update_contact': (_config) => `
function step_action_intercom_update_contact(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#intercom): Implement action.intercom:update_contact Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'intercom', operation: 'action.intercom:update_contact' });
  throw new Error('TODO[apps-script-backlog]: Implement action.intercom:update_contact. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.iterable:create_list': (_config) => `
function step_action_iterable_create_list(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#iterable): Implement action.iterable:create_list Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'iterable', operation: 'action.iterable:create_list' });
  throw new Error('TODO[apps-script-backlog]: Implement action.iterable:create_list. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.iterable:delete_user': (_config) => `
function step_action_iterable_delete_user(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#iterable): Implement action.iterable:delete_user Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'iterable', operation: 'action.iterable:delete_user' });
  throw new Error('TODO[apps-script-backlog]: Implement action.iterable:delete_user. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.iterable:export_data': (_config) => `
function step_action_iterable_export_data(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#iterable): Implement action.iterable:export_data Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'iterable', operation: 'action.iterable:export_data' });
  throw new Error('TODO[apps-script-backlog]: Implement action.iterable:export_data. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.iterable:get_campaigns': (_config) => `
function step_action_iterable_get_campaigns(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#iterable): Implement action.iterable:get_campaigns Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'iterable', operation: 'action.iterable:get_campaigns' });
  throw new Error('TODO[apps-script-backlog]: Implement action.iterable:get_campaigns. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.iterable:get_lists': (_config) => `
function step_action_iterable_get_lists(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#iterable): Implement action.iterable:get_lists Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'iterable', operation: 'action.iterable:get_lists' });
  throw new Error('TODO[apps-script-backlog]: Implement action.iterable:get_lists. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.iterable:get_templates': (_config) => `
function step_action_iterable_get_templates(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#iterable): Implement action.iterable:get_templates Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'iterable', operation: 'action.iterable:get_templates' });
  throw new Error('TODO[apps-script-backlog]: Implement action.iterable:get_templates. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.iterable:get_user': (_config) => `
function step_action_iterable_get_user(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#iterable): Implement action.iterable:get_user Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'iterable', operation: 'action.iterable:get_user' });
  throw new Error('TODO[apps-script-backlog]: Implement action.iterable:get_user. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.iterable:send_email': (_config) => `
function step_action_iterable_send_email(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#iterable): Implement action.iterable:send_email Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'iterable', operation: 'action.iterable:send_email' });
  throw new Error('TODO[apps-script-backlog]: Implement action.iterable:send_email. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.iterable:subscribe_user': (_config) => `
function step_action_iterable_subscribe_user(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#iterable): Implement action.iterable:subscribe_user Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'iterable', operation: 'action.iterable:subscribe_user' });
  throw new Error('TODO[apps-script-backlog]: Implement action.iterable:subscribe_user. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.iterable:test_connection': (_config) => `
function step_action_iterable_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#iterable): Implement action.iterable:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'iterable', operation: 'action.iterable:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.iterable:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.iterable:track_event': (_config) => `
function step_action_iterable_track_event(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#iterable): Implement action.iterable:track_event Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'iterable', operation: 'action.iterable:track_event' });
  throw new Error('TODO[apps-script-backlog]: Implement action.iterable:track_event. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.iterable:track_purchase': (_config) => `
function step_action_iterable_track_purchase(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#iterable): Implement action.iterable:track_purchase Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'iterable', operation: 'action.iterable:track_purchase' });
  throw new Error('TODO[apps-script-backlog]: Implement action.iterable:track_purchase. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.iterable:unsubscribe_user': (_config) => `
function step_action_iterable_unsubscribe_user(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#iterable): Implement action.iterable:unsubscribe_user Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'iterable', operation: 'action.iterable:unsubscribe_user' });
  throw new Error('TODO[apps-script-backlog]: Implement action.iterable:unsubscribe_user. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.iterable:update_user': (_config) => `
function step_action_iterable_update_user(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#iterable): Implement action.iterable:update_user Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'iterable', operation: 'action.iterable:update_user' });
  throw new Error('TODO[apps-script-backlog]: Implement action.iterable:update_user. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jenkins:cancel_queue_item': (_config) => `
function step_action_jenkins_cancel_queue_item(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jenkins): Implement action.jenkins:cancel_queue_item Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jenkins', operation: 'action.jenkins:cancel_queue_item' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jenkins:cancel_queue_item. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jenkins:copy_job': (_config) => `
function step_action_jenkins_copy_job(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jenkins): Implement action.jenkins:copy_job Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jenkins', operation: 'action.jenkins:copy_job' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jenkins:copy_job. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jenkins:create_job': (_config) => `
function step_action_jenkins_create_job(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jenkins): Implement action.jenkins:create_job Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jenkins', operation: 'action.jenkins:create_job' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jenkins:create_job. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jenkins:delete_job': (_config) => `
function step_action_jenkins_delete_job(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jenkins): Implement action.jenkins:delete_job Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jenkins', operation: 'action.jenkins:delete_job' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jenkins:delete_job. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jenkins:disable_job': (_config) => `
function step_action_jenkins_disable_job(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jenkins): Implement action.jenkins:disable_job Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jenkins', operation: 'action.jenkins:disable_job' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jenkins:disable_job. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jenkins:enable_job': (_config) => `
function step_action_jenkins_enable_job(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jenkins): Implement action.jenkins:enable_job Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jenkins', operation: 'action.jenkins:enable_job' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jenkins:enable_job. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jenkins:get_build_console': (_config) => `
function step_action_jenkins_get_build_console(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jenkins): Implement action.jenkins:get_build_console Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jenkins', operation: 'action.jenkins:get_build_console' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jenkins:get_build_console. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jenkins:get_build_status': (_config) => `
function step_action_jenkins_get_build_status(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jenkins): Implement action.jenkins:get_build_status Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jenkins', operation: 'action.jenkins:get_build_status' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jenkins:get_build_status. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jenkins:get_job_info': (_config) => `
function step_action_jenkins_get_job_info(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jenkins): Implement action.jenkins:get_job_info Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jenkins', operation: 'action.jenkins:get_job_info' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jenkins:get_job_info. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jenkins:get_last_build': (_config) => `
function step_action_jenkins_get_last_build(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jenkins): Implement action.jenkins:get_last_build Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jenkins', operation: 'action.jenkins:get_last_build' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jenkins:get_last_build. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jenkins:get_queue': (_config) => `
function step_action_jenkins_get_queue(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jenkins): Implement action.jenkins:get_queue Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jenkins', operation: 'action.jenkins:get_queue' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jenkins:get_queue. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jenkins:list_jobs': (_config) => `
function step_action_jenkins_list_jobs(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jenkins): Implement action.jenkins:list_jobs Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jenkins', operation: 'action.jenkins:list_jobs' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jenkins:list_jobs. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jenkins:stop_build': (_config) => `
function step_action_jenkins_stop_build(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jenkins): Implement action.jenkins:stop_build Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jenkins', operation: 'action.jenkins:stop_build' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jenkins:stop_build. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jenkins:test_connection': (_config) => `
function step_action_jenkins_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jenkins): Implement action.jenkins:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jenkins', operation: 'action.jenkins:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jenkins:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jenkins:trigger_build': (_config) => `
function step_action_jenkins_trigger_build(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jenkins): Implement action.jenkins:trigger_build Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jenkins', operation: 'action.jenkins:trigger_build' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jenkins:trigger_build. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jenkins:update_job': (_config) => `
function step_action_jenkins_update_job(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jenkins): Implement action.jenkins:update_job Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jenkins', operation: 'action.jenkins:update_job' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jenkins:update_job. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jira-service-management:add_attachment': (_config) => `
function step_action_jira_service_management_add_attachment(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira-service-management): Implement action.jira-service-management:add_attachment Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira-service-management', operation: 'action.jira-service-management:add_attachment' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jira-service-management:add_attachment. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jira-service-management:add_customer_request_comment': (_config) => `
function step_action_jira_service_management_add_customer_request_comment(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira-service-management): Implement action.jira-service-management:add_customer_request_comment Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira-service-management', operation: 'action.jira-service-management:add_customer_request_comment' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jira-service-management:add_customer_request_comment. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jira-service-management:create_customer': (_config) => `
function step_action_jira_service_management_create_customer(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira-service-management): Implement action.jira-service-management:create_customer Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira-service-management', operation: 'action.jira-service-management:create_customer' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jira-service-management:create_customer. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jira-service-management:create_customer_request': (_config) => `
function step_action_jira_service_management_create_customer_request(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira-service-management): Implement action.jira-service-management:create_customer_request Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira-service-management', operation: 'action.jira-service-management:create_customer_request' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jira-service-management:create_customer_request. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jira-service-management:get_customer_request': (_config) => `
function step_action_jira_service_management_get_customer_request(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira-service-management): Implement action.jira-service-management:get_customer_request Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira-service-management', operation: 'action.jira-service-management:get_customer_request' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jira-service-management:get_customer_request. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jira-service-management:get_customer_request_comments': (_config) => `
function step_action_jira_service_management_get_customer_request_comments(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira-service-management): Implement action.jira-service-management:get_customer_request_comments Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira-service-management', operation: 'action.jira-service-management:get_customer_request_comments' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jira-service-management:get_customer_request_comments. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jira-service-management:get_customer_requests': (_config) => `
function step_action_jira_service_management_get_customer_requests(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira-service-management): Implement action.jira-service-management:get_customer_requests Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira-service-management', operation: 'action.jira-service-management:get_customer_requests' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jira-service-management:get_customer_requests. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jira-service-management:get_organizations': (_config) => `
function step_action_jira_service_management_get_organizations(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira-service-management): Implement action.jira-service-management:get_organizations Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira-service-management', operation: 'action.jira-service-management:get_organizations' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jira-service-management:get_organizations. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jira-service-management:get_queue': (_config) => `
function step_action_jira_service_management_get_queue(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira-service-management): Implement action.jira-service-management:get_queue Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira-service-management', operation: 'action.jira-service-management:get_queue' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jira-service-management:get_queue. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jira-service-management:get_request_types': (_config) => `
function step_action_jira_service_management_get_request_types(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira-service-management): Implement action.jira-service-management:get_request_types Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira-service-management', operation: 'action.jira-service-management:get_request_types' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jira-service-management:get_request_types. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jira-service-management:get_service_desk': (_config) => `
function step_action_jira_service_management_get_service_desk(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira-service-management): Implement action.jira-service-management:get_service_desk Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira-service-management', operation: 'action.jira-service-management:get_service_desk' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jira-service-management:get_service_desk. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jira-service-management:get_service_desks': (_config) => `
function step_action_jira_service_management_get_service_desks(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira-service-management): Implement action.jira-service-management:get_service_desks Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira-service-management', operation: 'action.jira-service-management:get_service_desks' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jira-service-management:get_service_desks. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jira-service-management:get_sla_information': (_config) => `
function step_action_jira_service_management_get_sla_information(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira-service-management): Implement action.jira-service-management:get_sla_information Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira-service-management', operation: 'action.jira-service-management:get_sla_information' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jira-service-management:get_sla_information. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jira-service-management:test_connection': (_config) => `
function step_action_jira_service_management_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira-service-management): Implement action.jira-service-management:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira-service-management', operation: 'action.jira-service-management:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jira-service-management:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jira-service-management:transition_customer_request': (_config) => `
function step_action_jira_service_management_transition_customer_request(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira-service-management): Implement action.jira-service-management:transition_customer_request Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira-service-management', operation: 'action.jira-service-management:transition_customer_request' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jira-service-management:transition_customer_request. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jira:add_comment': (_config) => `
function step_action_jira_add_comment(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira): Implement action.jira:add_comment Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira', operation: 'action.jira:add_comment' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jira:add_comment. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jira:assign_issue': (_config) => `
function step_action_jira_assign_issue(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira): Implement action.jira:assign_issue Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira', operation: 'action.jira:assign_issue' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jira:assign_issue. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jira:create_issue': (_config) => `
function step_action_jira_create_issue(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira): Implement action.jira:create_issue Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira', operation: 'action.jira:create_issue' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jira:create_issue. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jira:create_project': (_config) => `
function step_action_jira_create_project(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira): Implement action.jira:create_project Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira', operation: 'action.jira:create_project' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jira:create_project. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jira:create_version': (_config) => `
function step_action_jira_create_version(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira): Implement action.jira:create_version Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira', operation: 'action.jira:create_version' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jira:create_version. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jira:get_issue': (_config) => `
function step_action_jira_get_issue(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira): Implement action.jira:get_issue Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira', operation: 'action.jira:get_issue' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jira:get_issue. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jira:get_project': (_config) => `
function step_action_jira_get_project(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira): Implement action.jira:get_project Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira', operation: 'action.jira:get_project' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jira:get_project. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jira:list_projects': (_config) => `
function step_action_jira_list_projects(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira): Implement action.jira:list_projects Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira', operation: 'action.jira:list_projects' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jira:list_projects. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jira:search_issues': (_config) => `
function step_action_jira_search_issues(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira): Implement action.jira:search_issues Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira', operation: 'action.jira:search_issues' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jira:search_issues. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jira:test_connection': (_config) => `
function step_action_jira_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira): Implement action.jira:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira', operation: 'action.jira:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jira:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jira:transition_issue': (_config) => `
function step_action_jira_transition_issue(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira): Implement action.jira:transition_issue Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira', operation: 'action.jira:transition_issue' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jira:transition_issue. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jira:update_issue': (_config) => `
function step_action_jira_update_issue(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira): Implement action.jira:update_issue Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira', operation: 'action.jira:update_issue' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jira:update_issue. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jotform:clone_form': (_config) => `
function step_action_jotform_clone_form(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jotform): Implement action.jotform:clone_form Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jotform', operation: 'action.jotform:clone_form' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jotform:clone_form. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jotform:create_form': (_config) => `
function step_action_jotform_create_form(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jotform): Implement action.jotform:create_form Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jotform', operation: 'action.jotform:create_form' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jotform:create_form. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jotform:create_report': (_config) => `
function step_action_jotform_create_report(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jotform): Implement action.jotform:create_report Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jotform', operation: 'action.jotform:create_report' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jotform:create_report. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jotform:delete_form': (_config) => `
function step_action_jotform_delete_form(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jotform): Implement action.jotform:delete_form Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jotform', operation: 'action.jotform:delete_form' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jotform:delete_form. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jotform:delete_submission': (_config) => `
function step_action_jotform_delete_submission(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jotform): Implement action.jotform:delete_submission Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jotform', operation: 'action.jotform:delete_submission' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jotform:delete_submission. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jotform:edit_submission': (_config) => `
function step_action_jotform_edit_submission(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jotform): Implement action.jotform:edit_submission Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jotform', operation: 'action.jotform:edit_submission' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jotform:edit_submission. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jotform:get_form': (_config) => `
function step_action_jotform_get_form(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jotform): Implement action.jotform:get_form Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jotform', operation: 'action.jotform:get_form' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jotform:get_form. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jotform:get_form_files': (_config) => `
function step_action_jotform_get_form_files(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jotform): Implement action.jotform:get_form_files Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jotform', operation: 'action.jotform:get_form_files' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jotform:get_form_files. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jotform:get_form_properties': (_config) => `
function step_action_jotform_get_form_properties(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jotform): Implement action.jotform:get_form_properties Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jotform', operation: 'action.jotform:get_form_properties' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jotform:get_form_properties. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jotform:get_form_questions': (_config) => `
function step_action_jotform_get_form_questions(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jotform): Implement action.jotform:get_form_questions Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jotform', operation: 'action.jotform:get_form_questions' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jotform:get_form_questions. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jotform:get_forms': (_config) => `
function step_action_jotform_get_forms(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jotform): Implement action.jotform:get_forms Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jotform', operation: 'action.jotform:get_forms' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jotform:get_forms. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jotform:get_reports': (_config) => `
function step_action_jotform_get_reports(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jotform): Implement action.jotform:get_reports Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jotform', operation: 'action.jotform:get_reports' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jotform:get_reports. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jotform:get_submission': (_config) => `
function step_action_jotform_get_submission(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jotform): Implement action.jotform:get_submission Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jotform', operation: 'action.jotform:get_submission' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jotform:get_submission. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jotform:get_submissions': (_config) => `
function step_action_jotform_get_submissions(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jotform): Implement action.jotform:get_submissions Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jotform', operation: 'action.jotform:get_submissions' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jotform:get_submissions. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jotform:get_user': (_config) => `
function step_action_jotform_get_user(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jotform): Implement action.jotform:get_user Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jotform', operation: 'action.jotform:get_user' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jotform:get_user. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.jotform:test_connection': (_config) => `
function step_action_jotform_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jotform): Implement action.jotform:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jotform', operation: 'action.jotform:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.jotform:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.klaviyo:create_event': (_config) => `
function step_action_klaviyo_create_event(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#klaviyo): Implement action.klaviyo:create_event Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'klaviyo', operation: 'action.klaviyo:create_event' });
  throw new Error('TODO[apps-script-backlog]: Implement action.klaviyo:create_event. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.klaviyo:create_list': (_config) => `
function step_action_klaviyo_create_list(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#klaviyo): Implement action.klaviyo:create_list Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'klaviyo', operation: 'action.klaviyo:create_list' });
  throw new Error('TODO[apps-script-backlog]: Implement action.klaviyo:create_list. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.klaviyo:create_profile': (_config) => `
function step_action_klaviyo_create_profile(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#klaviyo): Implement action.klaviyo:create_profile Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'klaviyo', operation: 'action.klaviyo:create_profile' });
  throw new Error('TODO[apps-script-backlog]: Implement action.klaviyo:create_profile. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.klaviyo:get_campaigns': (_config) => `
function step_action_klaviyo_get_campaigns(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#klaviyo): Implement action.klaviyo:get_campaigns Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'klaviyo', operation: 'action.klaviyo:get_campaigns' });
  throw new Error('TODO[apps-script-backlog]: Implement action.klaviyo:get_campaigns. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.klaviyo:get_flows': (_config) => `
function step_action_klaviyo_get_flows(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#klaviyo): Implement action.klaviyo:get_flows Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'klaviyo', operation: 'action.klaviyo:get_flows' });
  throw new Error('TODO[apps-script-backlog]: Implement action.klaviyo:get_flows. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.klaviyo:get_lists': (_config) => `
function step_action_klaviyo_get_lists(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#klaviyo): Implement action.klaviyo:get_lists Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'klaviyo', operation: 'action.klaviyo:get_lists' });
  throw new Error('TODO[apps-script-backlog]: Implement action.klaviyo:get_lists. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.klaviyo:get_profile': (_config) => `
function step_action_klaviyo_get_profile(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#klaviyo): Implement action.klaviyo:get_profile Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'klaviyo', operation: 'action.klaviyo:get_profile' });
  throw new Error('TODO[apps-script-backlog]: Implement action.klaviyo:get_profile. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.klaviyo:list_profiles': (_config) => `
function step_action_klaviyo_list_profiles(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#klaviyo): Implement action.klaviyo:list_profiles Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'klaviyo', operation: 'action.klaviyo:list_profiles' });
  throw new Error('TODO[apps-script-backlog]: Implement action.klaviyo:list_profiles. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.klaviyo:subscribe_profiles': (_config) => `
function step_action_klaviyo_subscribe_profiles(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#klaviyo): Implement action.klaviyo:subscribe_profiles Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'klaviyo', operation: 'action.klaviyo:subscribe_profiles' });
  throw new Error('TODO[apps-script-backlog]: Implement action.klaviyo:subscribe_profiles. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.klaviyo:test_connection': (_config) => `
function step_action_klaviyo_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#klaviyo): Implement action.klaviyo:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'klaviyo', operation: 'action.klaviyo:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.klaviyo:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.klaviyo:unsubscribe_profiles': (_config) => `
function step_action_klaviyo_unsubscribe_profiles(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#klaviyo): Implement action.klaviyo:unsubscribe_profiles Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'klaviyo', operation: 'action.klaviyo:unsubscribe_profiles' });
  throw new Error('TODO[apps-script-backlog]: Implement action.klaviyo:unsubscribe_profiles. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.klaviyo:update_profile': (_config) => `
function step_action_klaviyo_update_profile(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#klaviyo): Implement action.klaviyo:update_profile Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'klaviyo', operation: 'action.klaviyo:update_profile' });
  throw new Error('TODO[apps-script-backlog]: Implement action.klaviyo:update_profile. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.kubernetes:create_deployment': (_config) => `
function step_action_kubernetes_create_deployment(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#kubernetes): Implement action.kubernetes:create_deployment Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'kubernetes', operation: 'action.kubernetes:create_deployment' });
  throw new Error('TODO[apps-script-backlog]: Implement action.kubernetes:create_deployment. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.kubernetes:create_service': (_config) => `
function step_action_kubernetes_create_service(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#kubernetes): Implement action.kubernetes:create_service Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'kubernetes', operation: 'action.kubernetes:create_service' });
  throw new Error('TODO[apps-script-backlog]: Implement action.kubernetes:create_service. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.kubernetes:get_pod_logs': (_config) => `
function step_action_kubernetes_get_pod_logs(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#kubernetes): Implement action.kubernetes:get_pod_logs Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'kubernetes', operation: 'action.kubernetes:get_pod_logs' });
  throw new Error('TODO[apps-script-backlog]: Implement action.kubernetes:get_pod_logs. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.kubernetes:scale_deployment': (_config) => `
function step_action_kubernetes_scale_deployment(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#kubernetes): Implement action.kubernetes:scale_deployment Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'kubernetes', operation: 'action.kubernetes:scale_deployment' });
  throw new Error('TODO[apps-script-backlog]: Implement action.kubernetes:scale_deployment. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.kubernetes:test_connection': (_config) => `
function step_action_kubernetes_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#kubernetes): Implement action.kubernetes:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'kubernetes', operation: 'action.kubernetes:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.kubernetes:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.kustomer:create_conversation': (_config) => `
function step_action_kustomer_create_conversation(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#kustomer): Implement action.kustomer:create_conversation Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'kustomer', operation: 'action.kustomer:create_conversation' });
  throw new Error('TODO[apps-script-backlog]: Implement action.kustomer:create_conversation. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.kustomer:create_customer': (_config) => `
function step_action_kustomer_create_customer(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#kustomer): Implement action.kustomer:create_customer Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'kustomer', operation: 'action.kustomer:create_customer' });
  throw new Error('TODO[apps-script-backlog]: Implement action.kustomer:create_customer. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.kustomer:create_message': (_config) => `
function step_action_kustomer_create_message(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#kustomer): Implement action.kustomer:create_message Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'kustomer', operation: 'action.kustomer:create_message' });
  throw new Error('TODO[apps-script-backlog]: Implement action.kustomer:create_message. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.kustomer:create_note': (_config) => `
function step_action_kustomer_create_note(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#kustomer): Implement action.kustomer:create_note Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'kustomer', operation: 'action.kustomer:create_note' });
  throw new Error('TODO[apps-script-backlog]: Implement action.kustomer:create_note. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.kustomer:get_conversation': (_config) => `
function step_action_kustomer_get_conversation(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#kustomer): Implement action.kustomer:get_conversation Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'kustomer', operation: 'action.kustomer:get_conversation' });
  throw new Error('TODO[apps-script-backlog]: Implement action.kustomer:get_conversation. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.kustomer:get_customer': (_config) => `
function step_action_kustomer_get_customer(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#kustomer): Implement action.kustomer:get_customer Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'kustomer', operation: 'action.kustomer:get_customer' });
  throw new Error('TODO[apps-script-backlog]: Implement action.kustomer:get_customer. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.kustomer:get_messages': (_config) => `
function step_action_kustomer_get_messages(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#kustomer): Implement action.kustomer:get_messages Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'kustomer', operation: 'action.kustomer:get_messages' });
  throw new Error('TODO[apps-script-backlog]: Implement action.kustomer:get_messages. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.kustomer:get_teams': (_config) => `
function step_action_kustomer_get_teams(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#kustomer): Implement action.kustomer:get_teams Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'kustomer', operation: 'action.kustomer:get_teams' });
  throw new Error('TODO[apps-script-backlog]: Implement action.kustomer:get_teams. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.kustomer:get_users': (_config) => `
function step_action_kustomer_get_users(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#kustomer): Implement action.kustomer:get_users Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'kustomer', operation: 'action.kustomer:get_users' });
  throw new Error('TODO[apps-script-backlog]: Implement action.kustomer:get_users. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.kustomer:search_conversations': (_config) => `
function step_action_kustomer_search_conversations(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#kustomer): Implement action.kustomer:search_conversations Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'kustomer', operation: 'action.kustomer:search_conversations' });
  throw new Error('TODO[apps-script-backlog]: Implement action.kustomer:search_conversations. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.kustomer:search_customers': (_config) => `
function step_action_kustomer_search_customers(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#kustomer): Implement action.kustomer:search_customers Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'kustomer', operation: 'action.kustomer:search_customers' });
  throw new Error('TODO[apps-script-backlog]: Implement action.kustomer:search_customers. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.kustomer:test_connection': (_config) => `
function step_action_kustomer_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#kustomer): Implement action.kustomer:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'kustomer', operation: 'action.kustomer:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.kustomer:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.kustomer:update_conversation': (_config) => `
function step_action_kustomer_update_conversation(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#kustomer): Implement action.kustomer:update_conversation Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'kustomer', operation: 'action.kustomer:update_conversation' });
  throw new Error('TODO[apps-script-backlog]: Implement action.kustomer:update_conversation. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.kustomer:update_customer': (_config) => `
function step_action_kustomer_update_customer(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#kustomer): Implement action.kustomer:update_customer Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'kustomer', operation: 'action.kustomer:update_customer' });
  throw new Error('TODO[apps-script-backlog]: Implement action.kustomer:update_customer. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.lever:add_note': (_config) => `
function step_action_lever_add_note(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#lever): Implement action.lever:add_note Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'lever', operation: 'action.lever:add_note' });
  throw new Error('TODO[apps-script-backlog]: Implement action.lever:add_note. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.lever:advance_opportunity': (_config) => `
function step_action_lever_advance_opportunity(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#lever): Implement action.lever:advance_opportunity Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'lever', operation: 'action.lever:advance_opportunity' });
  throw new Error('TODO[apps-script-backlog]: Implement action.lever:advance_opportunity. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.lever:archive_opportunity': (_config) => `
function step_action_lever_archive_opportunity(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#lever): Implement action.lever:archive_opportunity Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'lever', operation: 'action.lever:archive_opportunity' });
  throw new Error('TODO[apps-script-backlog]: Implement action.lever:archive_opportunity. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.lever:create_opportunity': (_config) => `
function step_action_lever_create_opportunity(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#lever): Implement action.lever:create_opportunity Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'lever', operation: 'action.lever:create_opportunity' });
  throw new Error('TODO[apps-script-backlog]: Implement action.lever:create_opportunity. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.lever:get_opportunity': (_config) => `
function step_action_lever_get_opportunity(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#lever): Implement action.lever:get_opportunity Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'lever', operation: 'action.lever:get_opportunity' });
  throw new Error('TODO[apps-script-backlog]: Implement action.lever:get_opportunity. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.lever:get_posting': (_config) => `
function step_action_lever_get_posting(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#lever): Implement action.lever:get_posting Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'lever', operation: 'action.lever:get_posting' });
  throw new Error('TODO[apps-script-backlog]: Implement action.lever:get_posting. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.lever:get_user': (_config) => `
function step_action_lever_get_user(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#lever): Implement action.lever:get_user Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'lever', operation: 'action.lever:get_user' });
  throw new Error('TODO[apps-script-backlog]: Implement action.lever:get_user. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.lever:list_opportunities': (_config) => `
function step_action_lever_list_opportunities(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#lever): Implement action.lever:list_opportunities Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'lever', operation: 'action.lever:list_opportunities' });
  throw new Error('TODO[apps-script-backlog]: Implement action.lever:list_opportunities. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.lever:list_postings': (_config) => `
function step_action_lever_list_postings(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#lever): Implement action.lever:list_postings Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'lever', operation: 'action.lever:list_postings' });
  throw new Error('TODO[apps-script-backlog]: Implement action.lever:list_postings. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.lever:list_users': (_config) => `
function step_action_lever_list_users(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#lever): Implement action.lever:list_users Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'lever', operation: 'action.lever:list_users' });
  throw new Error('TODO[apps-script-backlog]: Implement action.lever:list_users. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.lever:test_connection': (_config) => `
function step_action_lever_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#lever): Implement action.lever:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'lever', operation: 'action.lever:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.lever:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.lever:update_opportunity': (_config) => `
function step_action_lever_update_opportunity(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#lever): Implement action.lever:update_opportunity Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'lever', operation: 'action.lever:update_opportunity' });
  throw new Error('TODO[apps-script-backlog]: Implement action.lever:update_opportunity. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.linear:create_comment': (_config) => `
function step_action_linear_create_comment(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#linear): Implement action.linear:create_comment Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'linear', operation: 'action.linear:create_comment' });
  throw new Error('TODO[apps-script-backlog]: Implement action.linear:create_comment. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.linear:create_issue': (_config) => `
function step_action_linear_create_issue(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#linear): Implement action.linear:create_issue Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'linear', operation: 'action.linear:create_issue' });
  throw new Error('TODO[apps-script-backlog]: Implement action.linear:create_issue. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.linear:create_project': (_config) => `
function step_action_linear_create_project(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#linear): Implement action.linear:create_project Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'linear', operation: 'action.linear:create_project' });
  throw new Error('TODO[apps-script-backlog]: Implement action.linear:create_project. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.linear:get_issue': (_config) => `
function step_action_linear_get_issue(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#linear): Implement action.linear:get_issue Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'linear', operation: 'action.linear:get_issue' });
  throw new Error('TODO[apps-script-backlog]: Implement action.linear:get_issue. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.linear:list_issues': (_config) => `
function step_action_linear_list_issues(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#linear): Implement action.linear:list_issues Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'linear', operation: 'action.linear:list_issues' });
  throw new Error('TODO[apps-script-backlog]: Implement action.linear:list_issues. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.linear:list_labels': (_config) => `
function step_action_linear_list_labels(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#linear): Implement action.linear:list_labels Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'linear', operation: 'action.linear:list_labels' });
  throw new Error('TODO[apps-script-backlog]: Implement action.linear:list_labels. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.linear:list_projects': (_config) => `
function step_action_linear_list_projects(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#linear): Implement action.linear:list_projects Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'linear', operation: 'action.linear:list_projects' });
  throw new Error('TODO[apps-script-backlog]: Implement action.linear:list_projects. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.linear:list_teams': (_config) => `
function step_action_linear_list_teams(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#linear): Implement action.linear:list_teams Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'linear', operation: 'action.linear:list_teams' });
  throw new Error('TODO[apps-script-backlog]: Implement action.linear:list_teams. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.linear:list_users': (_config) => `
function step_action_linear_list_users(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#linear): Implement action.linear:list_users Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'linear', operation: 'action.linear:list_users' });
  throw new Error('TODO[apps-script-backlog]: Implement action.linear:list_users. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.linear:list_workflow_states': (_config) => `
function step_action_linear_list_workflow_states(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#linear): Implement action.linear:list_workflow_states Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'linear', operation: 'action.linear:list_workflow_states' });
  throw new Error('TODO[apps-script-backlog]: Implement action.linear:list_workflow_states. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.linear:test_connection': (_config) => `
function step_action_linear_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#linear): Implement action.linear:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'linear', operation: 'action.linear:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.linear:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.linear:update_issue': (_config) => `
function step_action_linear_update_issue(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#linear): Implement action.linear:update_issue Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'linear', operation: 'action.linear:update_issue' });
  throw new Error('TODO[apps-script-backlog]: Implement action.linear:update_issue. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.llm:chat_completion': (_config) => `
function step_action_llm_chat_completion(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#llm): Implement action.llm:chat_completion Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'llm', operation: 'action.llm:chat_completion' });
  throw new Error('TODO[apps-script-backlog]: Implement action.llm:chat_completion. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.llm:generate_text': (_config) => `
function step_action_llm_generate_text(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#llm): Implement action.llm:generate_text Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'llm', operation: 'action.llm:generate_text' });
  throw new Error('TODO[apps-script-backlog]: Implement action.llm:generate_text. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.looker:create_query': (_config) => `
function step_action_looker_create_query(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#looker): Implement action.looker:create_query Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'looker', operation: 'action.looker:create_query' });
  throw new Error('TODO[apps-script-backlog]: Implement action.looker:create_query. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.looker:create_scheduled_plan': (_config) => `
function step_action_looker_create_scheduled_plan(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#looker): Implement action.looker:create_scheduled_plan Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'looker', operation: 'action.looker:create_scheduled_plan' });
  throw new Error('TODO[apps-script-backlog]: Implement action.looker:create_scheduled_plan. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.looker:get_dashboard': (_config) => `
function step_action_looker_get_dashboard(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#looker): Implement action.looker:get_dashboard Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'looker', operation: 'action.looker:get_dashboard' });
  throw new Error('TODO[apps-script-backlog]: Implement action.looker:get_dashboard. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.looker:get_look': (_config) => `
function step_action_looker_get_look(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#looker): Implement action.looker:get_look Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'looker', operation: 'action.looker:get_look' });
  throw new Error('TODO[apps-script-backlog]: Implement action.looker:get_look. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.looker:get_model_explore': (_config) => `
function step_action_looker_get_model_explore(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#looker): Implement action.looker:get_model_explore Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'looker', operation: 'action.looker:get_model_explore' });
  throw new Error('TODO[apps-script-backlog]: Implement action.looker:get_model_explore. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.looker:get_user': (_config) => `
function step_action_looker_get_user(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#looker): Implement action.looker:get_user Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'looker', operation: 'action.looker:get_user' });
  throw new Error('TODO[apps-script-backlog]: Implement action.looker:get_user. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.looker:list_dashboards': (_config) => `
function step_action_looker_list_dashboards(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#looker): Implement action.looker:list_dashboards Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'looker', operation: 'action.looker:list_dashboards' });
  throw new Error('TODO[apps-script-backlog]: Implement action.looker:list_dashboards. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.looker:list_looks': (_config) => `
function step_action_looker_list_looks(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#looker): Implement action.looker:list_looks Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'looker', operation: 'action.looker:list_looks' });
  throw new Error('TODO[apps-script-backlog]: Implement action.looker:list_looks. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.looker:list_models': (_config) => `
function step_action_looker_list_models(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#looker): Implement action.looker:list_models Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'looker', operation: 'action.looker:list_models' });
  throw new Error('TODO[apps-script-backlog]: Implement action.looker:list_models. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.looker:list_users': (_config) => `
function step_action_looker_list_users(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#looker): Implement action.looker:list_users Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'looker', operation: 'action.looker:list_users' });
  throw new Error('TODO[apps-script-backlog]: Implement action.looker:list_users. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.looker:run_dashboard': (_config) => `
function step_action_looker_run_dashboard(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#looker): Implement action.looker:run_dashboard Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'looker', operation: 'action.looker:run_dashboard' });
  throw new Error('TODO[apps-script-backlog]: Implement action.looker:run_dashboard. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.looker:run_look': (_config) => `
function step_action_looker_run_look(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#looker): Implement action.looker:run_look Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'looker', operation: 'action.looker:run_look' });
  throw new Error('TODO[apps-script-backlog]: Implement action.looker:run_look. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.looker:run_query': (_config) => `
function step_action_looker_run_query(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#looker): Implement action.looker:run_query Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'looker', operation: 'action.looker:run_query' });
  throw new Error('TODO[apps-script-backlog]: Implement action.looker:run_query. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.looker:test_connection': (_config) => `
function step_action_looker_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#looker): Implement action.looker:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'looker', operation: 'action.looker:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.looker:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.luma:cancel_registration': (_config) => `
function step_action_luma_cancel_registration(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#luma): Implement action.luma:cancel_registration Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'luma', operation: 'action.luma:cancel_registration' });
  throw new Error('TODO[apps-script-backlog]: Implement action.luma:cancel_registration. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.luma:create_event': (_config) => `
function step_action_luma_create_event(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#luma): Implement action.luma:create_event Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'luma', operation: 'action.luma:create_event' });
  throw new Error('TODO[apps-script-backlog]: Implement action.luma:create_event. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.luma:create_registration': (_config) => `
function step_action_luma_create_registration(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#luma): Implement action.luma:create_registration Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'luma', operation: 'action.luma:create_registration' });
  throw new Error('TODO[apps-script-backlog]: Implement action.luma:create_registration. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.luma:create_series': (_config) => `
function step_action_luma_create_series(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#luma): Implement action.luma:create_series Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'luma', operation: 'action.luma:create_series' });
  throw new Error('TODO[apps-script-backlog]: Implement action.luma:create_series. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.luma:delete_event': (_config) => `
function step_action_luma_delete_event(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#luma): Implement action.luma:delete_event Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'luma', operation: 'action.luma:delete_event' });
  throw new Error('TODO[apps-script-backlog]: Implement action.luma:delete_event. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.luma:get_event': (_config) => `
function step_action_luma_get_event(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#luma): Implement action.luma:get_event Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'luma', operation: 'action.luma:get_event' });
  throw new Error('TODO[apps-script-backlog]: Implement action.luma:get_event. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.luma:get_registrations': (_config) => `
function step_action_luma_get_registrations(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#luma): Implement action.luma:get_registrations Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'luma', operation: 'action.luma:get_registrations' });
  throw new Error('TODO[apps-script-backlog]: Implement action.luma:get_registrations. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.luma:get_series': (_config) => `
function step_action_luma_get_series(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#luma): Implement action.luma:get_series Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'luma', operation: 'action.luma:get_series' });
  throw new Error('TODO[apps-script-backlog]: Implement action.luma:get_series. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.luma:list_events': (_config) => `
function step_action_luma_list_events(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#luma): Implement action.luma:list_events Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'luma', operation: 'action.luma:list_events' });
  throw new Error('TODO[apps-script-backlog]: Implement action.luma:list_events. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.luma:list_series': (_config) => `
function step_action_luma_list_series(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#luma): Implement action.luma:list_series Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'luma', operation: 'action.luma:list_series' });
  throw new Error('TODO[apps-script-backlog]: Implement action.luma:list_series. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.luma:send_message': (_config) => `
function step_action_luma_send_message(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#luma): Implement action.luma:send_message Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'luma', operation: 'action.luma:send_message' });
  throw new Error('TODO[apps-script-backlog]: Implement action.luma:send_message. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.luma:test_connection': (_config) => `
function step_action_luma_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#luma): Implement action.luma:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'luma', operation: 'action.luma:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.luma:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.luma:update_event': (_config) => `
function step_action_luma_update_event(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#luma): Implement action.luma:update_event Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'luma', operation: 'action.luma:update_event' });
  throw new Error('TODO[apps-script-backlog]: Implement action.luma:update_event. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.magento:create_customer': (_config) => `
function step_action_magento_create_customer(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#magento): Implement action.magento:create_customer Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'magento', operation: 'action.magento:create_customer' });
  throw new Error('TODO[apps-script-backlog]: Implement action.magento:create_customer. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.magento:create_order': (_config) => `
function step_action_magento_create_order(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#magento): Implement action.magento:create_order Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'magento', operation: 'action.magento:create_order' });
  throw new Error('TODO[apps-script-backlog]: Implement action.magento:create_order. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.magento:create_product': (_config) => `
function step_action_magento_create_product(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#magento): Implement action.magento:create_product Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'magento', operation: 'action.magento:create_product' });
  throw new Error('TODO[apps-script-backlog]: Implement action.magento:create_product. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.magento:delete_product': (_config) => `
function step_action_magento_delete_product(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#magento): Implement action.magento:delete_product Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'magento', operation: 'action.magento:delete_product' });
  throw new Error('TODO[apps-script-backlog]: Implement action.magento:delete_product. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.magento:get_order': (_config) => `
function step_action_magento_get_order(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#magento): Implement action.magento:get_order Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'magento', operation: 'action.magento:get_order' });
  throw new Error('TODO[apps-script-backlog]: Implement action.magento:get_order. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.magento:get_product': (_config) => `
function step_action_magento_get_product(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#magento): Implement action.magento:get_product Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'magento', operation: 'action.magento:get_product' });
  throw new Error('TODO[apps-script-backlog]: Implement action.magento:get_product. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.magento:search_products': (_config) => `
function step_action_magento_search_products(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#magento): Implement action.magento:search_products Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'magento', operation: 'action.magento:search_products' });
  throw new Error('TODO[apps-script-backlog]: Implement action.magento:search_products. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.magento:test_connection': (_config) => `
function step_action_magento_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#magento): Implement action.magento:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'magento', operation: 'action.magento:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.magento:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.magento:update_product': (_config) => `
function step_action_magento_update_product(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#magento): Implement action.magento:update_product Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'magento', operation: 'action.magento:update_product' });
  throw new Error('TODO[apps-script-backlog]: Implement action.magento:update_product. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailchimp-enhanced:add_automation_subscriber': (_config) => `
function step_action_mailchimp_enhanced_add_automation_subscriber(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailchimp-enhanced): Implement action.mailchimp-enhanced:add_automation_subscriber Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailchimp-enhanced', operation: 'action.mailchimp-enhanced:add_automation_subscriber' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailchimp-enhanced:add_automation_subscriber. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailchimp-enhanced:add_subscriber': (_config) => `
function step_action_mailchimp_enhanced_add_subscriber(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailchimp-enhanced): Implement action.mailchimp-enhanced:add_subscriber Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailchimp-enhanced', operation: 'action.mailchimp-enhanced:add_subscriber' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailchimp-enhanced:add_subscriber. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailchimp-enhanced:create_automation': (_config) => `
function step_action_mailchimp_enhanced_create_automation(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailchimp-enhanced): Implement action.mailchimp-enhanced:create_automation Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailchimp-enhanced', operation: 'action.mailchimp-enhanced:create_automation' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailchimp-enhanced:create_automation. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailchimp-enhanced:create_campaign': (_config) => `
function step_action_mailchimp_enhanced_create_campaign(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailchimp-enhanced): Implement action.mailchimp-enhanced:create_campaign Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailchimp-enhanced', operation: 'action.mailchimp-enhanced:create_campaign' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailchimp-enhanced:create_campaign. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailchimp-enhanced:delete_subscriber': (_config) => `
function step_action_mailchimp_enhanced_delete_subscriber(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailchimp-enhanced): Implement action.mailchimp-enhanced:delete_subscriber Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailchimp-enhanced', operation: 'action.mailchimp-enhanced:delete_subscriber' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailchimp-enhanced:delete_subscriber. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailchimp-enhanced:get_campaign_reports': (_config) => `
function step_action_mailchimp_enhanced_get_campaign_reports(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailchimp-enhanced): Implement action.mailchimp-enhanced:get_campaign_reports Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailchimp-enhanced', operation: 'action.mailchimp-enhanced:get_campaign_reports' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailchimp-enhanced:get_campaign_reports. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailchimp-enhanced:get_subscriber': (_config) => `
function step_action_mailchimp_enhanced_get_subscriber(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailchimp-enhanced): Implement action.mailchimp-enhanced:get_subscriber Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailchimp-enhanced', operation: 'action.mailchimp-enhanced:get_subscriber' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailchimp-enhanced:get_subscriber. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailchimp-enhanced:schedule_campaign': (_config) => `
function step_action_mailchimp_enhanced_schedule_campaign(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailchimp-enhanced): Implement action.mailchimp-enhanced:schedule_campaign Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailchimp-enhanced', operation: 'action.mailchimp-enhanced:schedule_campaign' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailchimp-enhanced:schedule_campaign. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailchimp-enhanced:send_campaign': (_config) => `
function step_action_mailchimp_enhanced_send_campaign(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailchimp-enhanced): Implement action.mailchimp-enhanced:send_campaign Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailchimp-enhanced', operation: 'action.mailchimp-enhanced:send_campaign' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailchimp-enhanced:send_campaign. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailchimp-enhanced:test_connection': (_config) => `
function step_action_mailchimp_enhanced_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailchimp-enhanced): Implement action.mailchimp-enhanced:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailchimp-enhanced', operation: 'action.mailchimp-enhanced:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailchimp-enhanced:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailchimp-enhanced:update_subscriber': (_config) => `
function step_action_mailchimp_enhanced_update_subscriber(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailchimp-enhanced): Implement action.mailchimp-enhanced:update_subscriber Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailchimp-enhanced', operation: 'action.mailchimp-enhanced:update_subscriber' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailchimp-enhanced:update_subscriber. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailchimp:add_member': (_config) => `
function step_action_mailchimp_add_member(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailchimp): Implement action.mailchimp:add_member Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailchimp', operation: 'action.mailchimp:add_member' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailchimp:add_member. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailchimp:create_campaign': (_config) => `
function step_action_mailchimp_create_campaign(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailchimp): Implement action.mailchimp:create_campaign Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailchimp', operation: 'action.mailchimp:create_campaign' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailchimp:create_campaign. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailchimp:create_list': (_config) => `
function step_action_mailchimp_create_list(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailchimp): Implement action.mailchimp:create_list Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailchimp', operation: 'action.mailchimp:create_list' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailchimp:create_list. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailchimp:delete_member': (_config) => `
function step_action_mailchimp_delete_member(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailchimp): Implement action.mailchimp:delete_member Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailchimp', operation: 'action.mailchimp:delete_member' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailchimp:delete_member. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailchimp:get_campaign_content': (_config) => `
function step_action_mailchimp_get_campaign_content(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailchimp): Implement action.mailchimp:get_campaign_content Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailchimp', operation: 'action.mailchimp:get_campaign_content' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailchimp:get_campaign_content. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailchimp:get_campaigns': (_config) => `
function step_action_mailchimp_get_campaigns(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailchimp): Implement action.mailchimp:get_campaigns Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailchimp', operation: 'action.mailchimp:get_campaigns' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailchimp:get_campaigns. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailchimp:get_list': (_config) => `
function step_action_mailchimp_get_list(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailchimp): Implement action.mailchimp:get_list Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailchimp', operation: 'action.mailchimp:get_list' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailchimp:get_list. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailchimp:get_lists': (_config) => `
function step_action_mailchimp_get_lists(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailchimp): Implement action.mailchimp:get_lists Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailchimp', operation: 'action.mailchimp:get_lists' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailchimp:get_lists. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailchimp:get_member': (_config) => `
function step_action_mailchimp_get_member(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailchimp): Implement action.mailchimp:get_member Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailchimp', operation: 'action.mailchimp:get_member' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailchimp:get_member. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailchimp:get_members': (_config) => `
function step_action_mailchimp_get_members(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailchimp): Implement action.mailchimp:get_members Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailchimp', operation: 'action.mailchimp:get_members' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailchimp:get_members. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailchimp:send_campaign': (_config) => `
function step_action_mailchimp_send_campaign(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailchimp): Implement action.mailchimp:send_campaign Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailchimp', operation: 'action.mailchimp:send_campaign' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailchimp:send_campaign. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailchimp:set_campaign_content': (_config) => `
function step_action_mailchimp_set_campaign_content(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailchimp): Implement action.mailchimp:set_campaign_content Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailchimp', operation: 'action.mailchimp:set_campaign_content' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailchimp:set_campaign_content. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailchimp:test_connection': (_config) => `
function step_action_mailchimp_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailchimp): Implement action.mailchimp:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailchimp', operation: 'action.mailchimp:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailchimp:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailchimp:update_member': (_config) => `
function step_action_mailchimp_update_member(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailchimp): Implement action.mailchimp:update_member Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailchimp', operation: 'action.mailchimp:update_member' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailchimp:update_member. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailgun:add_member': (_config) => `
function step_action_mailgun_add_member(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailgun): Implement action.mailgun:add_member Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailgun', operation: 'action.mailgun:add_member' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailgun:add_member. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailgun:create_mailing_list': (_config) => `
function step_action_mailgun_create_mailing_list(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailgun): Implement action.mailgun:create_mailing_list Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailgun', operation: 'action.mailgun:create_mailing_list' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailgun:create_mailing_list. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailgun:get_domain': (_config) => `
function step_action_mailgun_get_domain(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailgun): Implement action.mailgun:get_domain Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailgun', operation: 'action.mailgun:get_domain' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailgun:get_domain. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailgun:get_events': (_config) => `
function step_action_mailgun_get_events(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailgun): Implement action.mailgun:get_events Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailgun', operation: 'action.mailgun:get_events' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailgun:get_events. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailgun:get_mailing_list': (_config) => `
function step_action_mailgun_get_mailing_list(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailgun): Implement action.mailgun:get_mailing_list Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailgun', operation: 'action.mailgun:get_mailing_list' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailgun:get_mailing_list. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailgun:get_member': (_config) => `
function step_action_mailgun_get_member(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailgun): Implement action.mailgun:get_member Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailgun', operation: 'action.mailgun:get_member' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailgun:get_member. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailgun:get_stats': (_config) => `
function step_action_mailgun_get_stats(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailgun): Implement action.mailgun:get_stats Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailgun', operation: 'action.mailgun:get_stats' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailgun:get_stats. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailgun:list_domains': (_config) => `
function step_action_mailgun_list_domains(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailgun): Implement action.mailgun:list_domains Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailgun', operation: 'action.mailgun:list_domains' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailgun:list_domains. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailgun:list_mailing_lists': (_config) => `
function step_action_mailgun_list_mailing_lists(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailgun): Implement action.mailgun:list_mailing_lists Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailgun', operation: 'action.mailgun:list_mailing_lists' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailgun:list_mailing_lists. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailgun:send_email': (_config) => `
function step_action_mailgun_send_email(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailgun): Implement action.mailgun:send_email Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailgun', operation: 'action.mailgun:send_email' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailgun:send_email. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailgun:test_connection': (_config) => `
function step_action_mailgun_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailgun): Implement action.mailgun:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailgun', operation: 'action.mailgun:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailgun:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailgun:validate_email': (_config) => `
function step_action_mailgun_validate_email(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailgun): Implement action.mailgun:validate_email Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailgun', operation: 'action.mailgun:validate_email' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailgun:validate_email. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mailgun:verify_domain': (_config) => `
function step_action_mailgun_verify_domain(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailgun): Implement action.mailgun:verify_domain Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailgun', operation: 'action.mailgun:verify_domain' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mailgun:verify_domain. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.marketo:add_to_list': (_config) => `
function step_action_marketo_add_to_list(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#marketo): Implement action.marketo:add_to_list Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'marketo', operation: 'action.marketo:add_to_list' });
  throw new Error('TODO[apps-script-backlog]: Implement action.marketo:add_to_list. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.marketo:create_campaign': (_config) => `
function step_action_marketo_create_campaign(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#marketo): Implement action.marketo:create_campaign Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'marketo', operation: 'action.marketo:create_campaign' });
  throw new Error('TODO[apps-script-backlog]: Implement action.marketo:create_campaign. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.marketo:create_email': (_config) => `
function step_action_marketo_create_email(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#marketo): Implement action.marketo:create_email Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'marketo', operation: 'action.marketo:create_email' });
  throw new Error('TODO[apps-script-backlog]: Implement action.marketo:create_email. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.marketo:create_lead': (_config) => `
function step_action_marketo_create_lead(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#marketo): Implement action.marketo:create_lead Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'marketo', operation: 'action.marketo:create_lead' });
  throw new Error('TODO[apps-script-backlog]: Implement action.marketo:create_lead. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.marketo:create_program': (_config) => `
function step_action_marketo_create_program(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#marketo): Implement action.marketo:create_program Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'marketo', operation: 'action.marketo:create_program' });
  throw new Error('TODO[apps-script-backlog]: Implement action.marketo:create_program. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.marketo:delete_lead': (_config) => `
function step_action_marketo_delete_lead(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#marketo): Implement action.marketo:delete_lead Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'marketo', operation: 'action.marketo:delete_lead' });
  throw new Error('TODO[apps-script-backlog]: Implement action.marketo:delete_lead. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.marketo:get_campaigns': (_config) => `
function step_action_marketo_get_campaigns(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#marketo): Implement action.marketo:get_campaigns Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'marketo', operation: 'action.marketo:get_campaigns' });
  throw new Error('TODO[apps-script-backlog]: Implement action.marketo:get_campaigns. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.marketo:get_emails': (_config) => `
function step_action_marketo_get_emails(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#marketo): Implement action.marketo:get_emails Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'marketo', operation: 'action.marketo:get_emails' });
  throw new Error('TODO[apps-script-backlog]: Implement action.marketo:get_emails. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.marketo:get_lead_by_id': (_config) => `
function step_action_marketo_get_lead_by_id(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#marketo): Implement action.marketo:get_lead_by_id Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'marketo', operation: 'action.marketo:get_lead_by_id' });
  throw new Error('TODO[apps-script-backlog]: Implement action.marketo:get_lead_by_id. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.marketo:get_leads_by_filter': (_config) => `
function step_action_marketo_get_leads_by_filter(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#marketo): Implement action.marketo:get_leads_by_filter Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'marketo', operation: 'action.marketo:get_leads_by_filter' });
  throw new Error('TODO[apps-script-backlog]: Implement action.marketo:get_leads_by_filter. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.marketo:get_programs': (_config) => `
function step_action_marketo_get_programs(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#marketo): Implement action.marketo:get_programs Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'marketo', operation: 'action.marketo:get_programs' });
  throw new Error('TODO[apps-script-backlog]: Implement action.marketo:get_programs. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.marketo:remove_from_list': (_config) => `
function step_action_marketo_remove_from_list(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#marketo): Implement action.marketo:remove_from_list Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'marketo', operation: 'action.marketo:remove_from_list' });
  throw new Error('TODO[apps-script-backlog]: Implement action.marketo:remove_from_list. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.marketo:request_campaign': (_config) => `
function step_action_marketo_request_campaign(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#marketo): Implement action.marketo:request_campaign Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'marketo', operation: 'action.marketo:request_campaign' });
  throw new Error('TODO[apps-script-backlog]: Implement action.marketo:request_campaign. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.marketo:send_sample_email': (_config) => `
function step_action_marketo_send_sample_email(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#marketo): Implement action.marketo:send_sample_email Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'marketo', operation: 'action.marketo:send_sample_email' });
  throw new Error('TODO[apps-script-backlog]: Implement action.marketo:send_sample_email. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.marketo:test_connection': (_config) => `
function step_action_marketo_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#marketo): Implement action.marketo:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'marketo', operation: 'action.marketo:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.marketo:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.marketo:update_lead': (_config) => `
function step_action_marketo_update_lead(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#marketo): Implement action.marketo:update_lead Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'marketo', operation: 'action.marketo:update_lead' });
  throw new Error('TODO[apps-script-backlog]: Implement action.marketo:update_lead. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.microsoft-teams:add_team_member': (_config) => `
function step_action_microsoft_teams_add_team_member(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#microsoft-teams): Implement action.microsoft-teams:add_team_member Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'microsoft-teams', operation: 'action.microsoft-teams:add_team_member' });
  throw new Error('TODO[apps-script-backlog]: Implement action.microsoft-teams:add_team_member. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.microsoft-teams:create_channel': (_config) => `
function step_action_microsoft_teams_create_channel(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#microsoft-teams): Implement action.microsoft-teams:create_channel Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'microsoft-teams', operation: 'action.microsoft-teams:create_channel' });
  throw new Error('TODO[apps-script-backlog]: Implement action.microsoft-teams:create_channel. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.microsoft-teams:create_meeting': (_config) => `
function step_action_microsoft_teams_create_meeting(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#microsoft-teams): Implement action.microsoft-teams:create_meeting Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'microsoft-teams', operation: 'action.microsoft-teams:create_meeting' });
  throw new Error('TODO[apps-script-backlog]: Implement action.microsoft-teams:create_meeting. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.microsoft-teams:create_team': (_config) => `
function step_action_microsoft_teams_create_team(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#microsoft-teams): Implement action.microsoft-teams:create_team Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'microsoft-teams', operation: 'action.microsoft-teams:create_team' });
  throw new Error('TODO[apps-script-backlog]: Implement action.microsoft-teams:create_team. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.microsoft-teams:list_channels': (_config) => `
function step_action_microsoft_teams_list_channels(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#microsoft-teams): Implement action.microsoft-teams:list_channels Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'microsoft-teams', operation: 'action.microsoft-teams:list_channels' });
  throw new Error('TODO[apps-script-backlog]: Implement action.microsoft-teams:list_channels. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.microsoft-teams:list_teams': (_config) => `
function step_action_microsoft_teams_list_teams(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#microsoft-teams): Implement action.microsoft-teams:list_teams Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'microsoft-teams', operation: 'action.microsoft-teams:list_teams' });
  throw new Error('TODO[apps-script-backlog]: Implement action.microsoft-teams:list_teams. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.microsoft-teams:send_chat_message': (_config) => `
function step_action_microsoft_teams_send_chat_message(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#microsoft-teams): Implement action.microsoft-teams:send_chat_message Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'microsoft-teams', operation: 'action.microsoft-teams:send_chat_message' });
  throw new Error('TODO[apps-script-backlog]: Implement action.microsoft-teams:send_chat_message. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.microsoft-teams:send_message': (_config) => `
function step_action_microsoft_teams_send_message(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#microsoft-teams): Implement action.microsoft-teams:send_message Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'microsoft-teams', operation: 'action.microsoft-teams:send_message' });
  throw new Error('TODO[apps-script-backlog]: Implement action.microsoft-teams:send_message. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.microsoft-teams:test_connection': (_config) => `
function step_action_microsoft_teams_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#microsoft-teams): Implement action.microsoft-teams:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'microsoft-teams', operation: 'action.microsoft-teams:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.microsoft-teams:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.microsoft-todo:complete_task': (_config) => `
function step_action_microsoft_todo_complete_task(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#microsoft-todo): Implement action.microsoft-todo:complete_task Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'microsoft-todo', operation: 'action.microsoft-todo:complete_task' });
  throw new Error('TODO[apps-script-backlog]: Implement action.microsoft-todo:complete_task. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.microsoft-todo:create_task': (_config) => `
function step_action_microsoft_todo_create_task(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#microsoft-todo): Implement action.microsoft-todo:create_task Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'microsoft-todo', operation: 'action.microsoft-todo:create_task' });
  throw new Error('TODO[apps-script-backlog]: Implement action.microsoft-todo:create_task. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.microsoft-todo:create_task_list': (_config) => `
function step_action_microsoft_todo_create_task_list(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#microsoft-todo): Implement action.microsoft-todo:create_task_list Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'microsoft-todo', operation: 'action.microsoft-todo:create_task_list' });
  throw new Error('TODO[apps-script-backlog]: Implement action.microsoft-todo:create_task_list. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.microsoft-todo:delete_task': (_config) => `
function step_action_microsoft_todo_delete_task(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#microsoft-todo): Implement action.microsoft-todo:delete_task Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'microsoft-todo', operation: 'action.microsoft-todo:delete_task' });
  throw new Error('TODO[apps-script-backlog]: Implement action.microsoft-todo:delete_task. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.microsoft-todo:get_task_lists': (_config) => `
function step_action_microsoft_todo_get_task_lists(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#microsoft-todo): Implement action.microsoft-todo:get_task_lists Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'microsoft-todo', operation: 'action.microsoft-todo:get_task_lists' });
  throw new Error('TODO[apps-script-backlog]: Implement action.microsoft-todo:get_task_lists. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.microsoft-todo:get_tasks': (_config) => `
function step_action_microsoft_todo_get_tasks(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#microsoft-todo): Implement action.microsoft-todo:get_tasks Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'microsoft-todo', operation: 'action.microsoft-todo:get_tasks' });
  throw new Error('TODO[apps-script-backlog]: Implement action.microsoft-todo:get_tasks. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.microsoft-todo:test_connection': (_config) => `
function step_action_microsoft_todo_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#microsoft-todo): Implement action.microsoft-todo:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'microsoft-todo', operation: 'action.microsoft-todo:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.microsoft-todo:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.microsoft-todo:update_task': (_config) => `
function step_action_microsoft_todo_update_task(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#microsoft-todo): Implement action.microsoft-todo:update_task Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'microsoft-todo', operation: 'action.microsoft-todo:update_task' });
  throw new Error('TODO[apps-script-backlog]: Implement action.microsoft-todo:update_task. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.miro:create_board': (_config) => `
function step_action_miro_create_board(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#miro): Implement action.miro:create_board Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'miro', operation: 'action.miro:create_board' });
  throw new Error('TODO[apps-script-backlog]: Implement action.miro:create_board. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.miro:create_card': (_config) => `
function step_action_miro_create_card(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#miro): Implement action.miro:create_card Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'miro', operation: 'action.miro:create_card' });
  throw new Error('TODO[apps-script-backlog]: Implement action.miro:create_card. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.miro:create_shape': (_config) => `
function step_action_miro_create_shape(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#miro): Implement action.miro:create_shape Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'miro', operation: 'action.miro:create_shape' });
  throw new Error('TODO[apps-script-backlog]: Implement action.miro:create_shape. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.miro:create_sticky_note': (_config) => `
function step_action_miro_create_sticky_note(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#miro): Implement action.miro:create_sticky_note Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'miro', operation: 'action.miro:create_sticky_note' });
  throw new Error('TODO[apps-script-backlog]: Implement action.miro:create_sticky_note. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.miro:create_text': (_config) => `
function step_action_miro_create_text(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#miro): Implement action.miro:create_text Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'miro', operation: 'action.miro:create_text' });
  throw new Error('TODO[apps-script-backlog]: Implement action.miro:create_text. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.miro:delete_board': (_config) => `
function step_action_miro_delete_board(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#miro): Implement action.miro:delete_board Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'miro', operation: 'action.miro:delete_board' });
  throw new Error('TODO[apps-script-backlog]: Implement action.miro:delete_board. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.miro:delete_item': (_config) => `
function step_action_miro_delete_item(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#miro): Implement action.miro:delete_item Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'miro', operation: 'action.miro:delete_item' });
  throw new Error('TODO[apps-script-backlog]: Implement action.miro:delete_item. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.miro:get_board': (_config) => `
function step_action_miro_get_board(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#miro): Implement action.miro:get_board Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'miro', operation: 'action.miro:get_board' });
  throw new Error('TODO[apps-script-backlog]: Implement action.miro:get_board. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.miro:get_board_items': (_config) => `
function step_action_miro_get_board_items(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#miro): Implement action.miro:get_board_items Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'miro', operation: 'action.miro:get_board_items' });
  throw new Error('TODO[apps-script-backlog]: Implement action.miro:get_board_items. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.miro:get_board_members': (_config) => `
function step_action_miro_get_board_members(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#miro): Implement action.miro:get_board_members Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'miro', operation: 'action.miro:get_board_members' });
  throw new Error('TODO[apps-script-backlog]: Implement action.miro:get_board_members. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.miro:get_boards': (_config) => `
function step_action_miro_get_boards(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#miro): Implement action.miro:get_boards Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'miro', operation: 'action.miro:get_boards' });
  throw new Error('TODO[apps-script-backlog]: Implement action.miro:get_boards. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.miro:share_board': (_config) => `
function step_action_miro_share_board(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#miro): Implement action.miro:share_board Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'miro', operation: 'action.miro:share_board' });
  throw new Error('TODO[apps-script-backlog]: Implement action.miro:share_board. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.miro:test_connection': (_config) => `
function step_action_miro_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#miro): Implement action.miro:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'miro', operation: 'action.miro:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.miro:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.miro:update_board': (_config) => `
function step_action_miro_update_board(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#miro): Implement action.miro:update_board Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'miro', operation: 'action.miro:update_board' });
  throw new Error('TODO[apps-script-backlog]: Implement action.miro:update_board. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.miro:update_item': (_config) => `
function step_action_miro_update_item(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#miro): Implement action.miro:update_item Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'miro', operation: 'action.miro:update_item' });
  throw new Error('TODO[apps-script-backlog]: Implement action.miro:update_item. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mixpanel:alias': (_config) => `
function step_action_mixpanel_alias(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mixpanel): Implement action.mixpanel:alias Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mixpanel', operation: 'action.mixpanel:alias' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mixpanel:alias. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mixpanel:engage_profile_append': (_config) => `
function step_action_mixpanel_engage_profile_append(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mixpanel): Implement action.mixpanel:engage_profile_append Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mixpanel', operation: 'action.mixpanel:engage_profile_append' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mixpanel:engage_profile_append. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mixpanel:engage_profile_delete': (_config) => `
function step_action_mixpanel_engage_profile_delete(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mixpanel): Implement action.mixpanel:engage_profile_delete Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mixpanel', operation: 'action.mixpanel:engage_profile_delete' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mixpanel:engage_profile_delete. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mixpanel:engage_profile_increment': (_config) => `
function step_action_mixpanel_engage_profile_increment(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mixpanel): Implement action.mixpanel:engage_profile_increment Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mixpanel', operation: 'action.mixpanel:engage_profile_increment' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mixpanel:engage_profile_increment. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mixpanel:engage_profile_remove': (_config) => `
function step_action_mixpanel_engage_profile_remove(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mixpanel): Implement action.mixpanel:engage_profile_remove Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mixpanel', operation: 'action.mixpanel:engage_profile_remove' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mixpanel:engage_profile_remove. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mixpanel:engage_profile_set': (_config) => `
function step_action_mixpanel_engage_profile_set(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mixpanel): Implement action.mixpanel:engage_profile_set Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mixpanel', operation: 'action.mixpanel:engage_profile_set' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mixpanel:engage_profile_set. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mixpanel:engage_profile_set_once': (_config) => `
function step_action_mixpanel_engage_profile_set_once(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mixpanel): Implement action.mixpanel:engage_profile_set_once Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mixpanel', operation: 'action.mixpanel:engage_profile_set_once' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mixpanel:engage_profile_set_once. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mixpanel:engage_profile_union': (_config) => `
function step_action_mixpanel_engage_profile_union(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mixpanel): Implement action.mixpanel:engage_profile_union Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mixpanel', operation: 'action.mixpanel:engage_profile_union' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mixpanel:engage_profile_union. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mixpanel:engage_profile_unset': (_config) => `
function step_action_mixpanel_engage_profile_unset(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mixpanel): Implement action.mixpanel:engage_profile_unset Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mixpanel', operation: 'action.mixpanel:engage_profile_unset' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mixpanel:engage_profile_unset. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mixpanel:export_events': (_config) => `
function step_action_mixpanel_export_events(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mixpanel): Implement action.mixpanel:export_events Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mixpanel', operation: 'action.mixpanel:export_events' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mixpanel:export_events. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mixpanel:import_events': (_config) => `
function step_action_mixpanel_import_events(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mixpanel): Implement action.mixpanel:import_events Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mixpanel', operation: 'action.mixpanel:import_events' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mixpanel:import_events. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mixpanel:query_cohorts': (_config) => `
function step_action_mixpanel_query_cohorts(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mixpanel): Implement action.mixpanel:query_cohorts Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mixpanel', operation: 'action.mixpanel:query_cohorts' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mixpanel:query_cohorts. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mixpanel:query_funnels': (_config) => `
function step_action_mixpanel_query_funnels(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mixpanel): Implement action.mixpanel:query_funnels Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mixpanel', operation: 'action.mixpanel:query_funnels' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mixpanel:query_funnels. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mixpanel:query_insights': (_config) => `
function step_action_mixpanel_query_insights(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mixpanel): Implement action.mixpanel:query_insights Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mixpanel', operation: 'action.mixpanel:query_insights' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mixpanel:query_insights. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mixpanel:test_connection': (_config) => `
function step_action_mixpanel_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mixpanel): Implement action.mixpanel:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mixpanel', operation: 'action.mixpanel:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mixpanel:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.mixpanel:track_event': (_config) => `
function step_action_mixpanel_track_event(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mixpanel): Implement action.mixpanel:track_event Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mixpanel', operation: 'action.mixpanel:track_event' });
  throw new Error('TODO[apps-script-backlog]: Implement action.mixpanel:track_event. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.monday-enhanced:create_board': (_config) => `
function step_action_monday_enhanced_create_board(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#monday-enhanced): Implement action.monday-enhanced:create_board Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'monday-enhanced', operation: 'action.monday-enhanced:create_board' });
  throw new Error('TODO[apps-script-backlog]: Implement action.monday-enhanced:create_board. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.monday-enhanced:create_item': (_config) => `
function step_action_monday_enhanced_create_item(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#monday-enhanced): Implement action.monday-enhanced:create_item Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'monday-enhanced', operation: 'action.monday-enhanced:create_item' });
  throw new Error('TODO[apps-script-backlog]: Implement action.monday-enhanced:create_item. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.monday-enhanced:create_update': (_config) => `
function step_action_monday_enhanced_create_update(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#monday-enhanced): Implement action.monday-enhanced:create_update Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'monday-enhanced', operation: 'action.monday-enhanced:create_update' });
  throw new Error('TODO[apps-script-backlog]: Implement action.monday-enhanced:create_update. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.monday-enhanced:create_webhook': (_config) => `
function step_action_monday_enhanced_create_webhook(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#monday-enhanced): Implement action.monday-enhanced:create_webhook Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'monday-enhanced', operation: 'action.monday-enhanced:create_webhook' });
  throw new Error('TODO[apps-script-backlog]: Implement action.monday-enhanced:create_webhook. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.monday-enhanced:delete_item': (_config) => `
function step_action_monday_enhanced_delete_item(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#monday-enhanced): Implement action.monday-enhanced:delete_item Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'monday-enhanced', operation: 'action.monday-enhanced:delete_item' });
  throw new Error('TODO[apps-script-backlog]: Implement action.monday-enhanced:delete_item. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.monday-enhanced:execute_graphql': (_config) => `
function step_action_monday_enhanced_execute_graphql(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#monday-enhanced): Implement action.monday-enhanced:execute_graphql Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'monday-enhanced', operation: 'action.monday-enhanced:execute_graphql' });
  throw new Error('TODO[apps-script-backlog]: Implement action.monday-enhanced:execute_graphql. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.monday-enhanced:get_boards': (_config) => `
function step_action_monday_enhanced_get_boards(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#monday-enhanced): Implement action.monday-enhanced:get_boards Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'monday-enhanced', operation: 'action.monday-enhanced:get_boards' });
  throw new Error('TODO[apps-script-backlog]: Implement action.monday-enhanced:get_boards. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.monday-enhanced:get_items': (_config) => `
function step_action_monday_enhanced_get_items(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#monday-enhanced): Implement action.monday-enhanced:get_items Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'monday-enhanced', operation: 'action.monday-enhanced:get_items' });
  throw new Error('TODO[apps-script-backlog]: Implement action.monday-enhanced:get_items. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.monday-enhanced:get_users': (_config) => `
function step_action_monday_enhanced_get_users(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#monday-enhanced): Implement action.monday-enhanced:get_users Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'monday-enhanced', operation: 'action.monday-enhanced:get_users' });
  throw new Error('TODO[apps-script-backlog]: Implement action.monday-enhanced:get_users. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.monday-enhanced:get_workspaces': (_config) => `
function step_action_monday_enhanced_get_workspaces(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#monday-enhanced): Implement action.monday-enhanced:get_workspaces Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'monday-enhanced', operation: 'action.monday-enhanced:get_workspaces' });
  throw new Error('TODO[apps-script-backlog]: Implement action.monday-enhanced:get_workspaces. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.monday-enhanced:test_connection': (_config) => `
function step_action_monday_enhanced_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#monday-enhanced): Implement action.monday-enhanced:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'monday-enhanced', operation: 'action.monday-enhanced:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.monday-enhanced:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.monday-enhanced:update_item': (_config) => `
function step_action_monday_enhanced_update_item(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#monday-enhanced): Implement action.monday-enhanced:update_item Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'monday-enhanced', operation: 'action.monday-enhanced:update_item' });
  throw new Error('TODO[apps-script-backlog]: Implement action.monday-enhanced:update_item. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.monday:archive_item': (_config) => `
function step_action_monday_archive_item(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#monday): Implement action.monday:archive_item Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'monday', operation: 'action.monday:archive_item' });
  throw new Error('TODO[apps-script-backlog]: Implement action.monday:archive_item. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.monday:create_board': (_config) => `
function step_action_monday_create_board(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#monday): Implement action.monday:create_board Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'monday', operation: 'action.monday:create_board' });
  throw new Error('TODO[apps-script-backlog]: Implement action.monday:create_board. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.monday:create_column': (_config) => `
function step_action_monday_create_column(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#monday): Implement action.monday:create_column Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'monday', operation: 'action.monday:create_column' });
  throw new Error('TODO[apps-script-backlog]: Implement action.monday:create_column. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.monday:create_group': (_config) => `
function step_action_monday_create_group(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#monday): Implement action.monday:create_group Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'monday', operation: 'action.monday:create_group' });
  throw new Error('TODO[apps-script-backlog]: Implement action.monday:create_group. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.monday:create_item': (_config) => `
function step_action_monday_create_item(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#monday): Implement action.monday:create_item Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'monday', operation: 'action.monday:create_item' });
  throw new Error('TODO[apps-script-backlog]: Implement action.monday:create_item. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.monday:create_update': (_config) => `
function step_action_monday_create_update(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#monday): Implement action.monday:create_update Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'monday', operation: 'action.monday:create_update' });
  throw new Error('TODO[apps-script-backlog]: Implement action.monday:create_update. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.monday:delete_item': (_config) => `
function step_action_monday_delete_item(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#monday): Implement action.monday:delete_item Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'monday', operation: 'action.monday:delete_item' });
  throw new Error('TODO[apps-script-backlog]: Implement action.monday:delete_item. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.monday:duplicate_item': (_config) => `
function step_action_monday_duplicate_item(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#monday): Implement action.monday:duplicate_item Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'monday', operation: 'action.monday:duplicate_item' });
  throw new Error('TODO[apps-script-backlog]: Implement action.monday:duplicate_item. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.monday:get_boards': (_config) => `
function step_action_monday_get_boards(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#monday): Implement action.monday:get_boards Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'monday', operation: 'action.monday:get_boards' });
  throw new Error('TODO[apps-script-backlog]: Implement action.monday:get_boards. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.monday:get_items': (_config) => `
function step_action_monday_get_items(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#monday): Implement action.monday:get_items Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'monday', operation: 'action.monday:get_items' });
  throw new Error('TODO[apps-script-backlog]: Implement action.monday:get_items. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.monday:get_users': (_config) => `
function step_action_monday_get_users(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#monday): Implement action.monday:get_users Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'monday', operation: 'action.monday:get_users' });
  throw new Error('TODO[apps-script-backlog]: Implement action.monday:get_users. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.monday:get_workspaces': (_config) => `
function step_action_monday_get_workspaces(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#monday): Implement action.monday:get_workspaces Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'monday', operation: 'action.monday:get_workspaces' });
  throw new Error('TODO[apps-script-backlog]: Implement action.monday:get_workspaces. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.monday:test_connection': (_config) => `
function step_action_monday_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#monday): Implement action.monday:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'monday', operation: 'action.monday:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.monday:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.monday:update_item': (_config) => `
function step_action_monday_update_item(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#monday): Implement action.monday:update_item Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'monday', operation: 'action.monday:update_item' });
  throw new Error('TODO[apps-script-backlog]: Implement action.monday:update_item. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.navan:create_expense': (_config) => `
function step_action_navan_create_expense(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#navan): Implement action.navan:create_expense Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'navan', operation: 'action.navan:create_expense' });
  throw new Error('TODO[apps-script-backlog]: Implement action.navan:create_expense. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.navan:create_trip': (_config) => `
function step_action_navan_create_trip(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#navan): Implement action.navan:create_trip Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'navan', operation: 'action.navan:create_trip' });
  throw new Error('TODO[apps-script-backlog]: Implement action.navan:create_trip. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.navan:get_expenses': (_config) => `
function step_action_navan_get_expenses(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#navan): Implement action.navan:get_expenses Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'navan', operation: 'action.navan:get_expenses' });
  throw new Error('TODO[apps-script-backlog]: Implement action.navan:get_expenses. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.navan:get_trips': (_config) => `
function step_action_navan_get_trips(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#navan): Implement action.navan:get_trips Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'navan', operation: 'action.navan:get_trips' });
  throw new Error('TODO[apps-script-backlog]: Implement action.navan:get_trips. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.navan:get_users': (_config) => `
function step_action_navan_get_users(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#navan): Implement action.navan:get_users Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'navan', operation: 'action.navan:get_users' });
  throw new Error('TODO[apps-script-backlog]: Implement action.navan:get_users. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.navan:test_connection': (_config) => `
function step_action_navan_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#navan): Implement action.navan:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'navan', operation: 'action.navan:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.navan:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.netsuite:create_customer': (_config) => `
function step_action_netsuite_create_customer(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#netsuite): Implement action.netsuite:create_customer Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'netsuite', operation: 'action.netsuite:create_customer' });
  throw new Error('TODO[apps-script-backlog]: Implement action.netsuite:create_customer. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.netsuite:create_sales_order': (_config) => `
function step_action_netsuite_create_sales_order(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#netsuite): Implement action.netsuite:create_sales_order Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'netsuite', operation: 'action.netsuite:create_sales_order' });
  throw new Error('TODO[apps-script-backlog]: Implement action.netsuite:create_sales_order. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.netsuite:get_customers': (_config) => `
function step_action_netsuite_get_customers(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#netsuite): Implement action.netsuite:get_customers Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'netsuite', operation: 'action.netsuite:get_customers' });
  throw new Error('TODO[apps-script-backlog]: Implement action.netsuite:get_customers. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.netsuite:get_invoices': (_config) => `
function step_action_netsuite_get_invoices(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#netsuite): Implement action.netsuite:get_invoices Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'netsuite', operation: 'action.netsuite:get_invoices' });
  throw new Error('TODO[apps-script-backlog]: Implement action.netsuite:get_invoices. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.netsuite:get_items': (_config) => `
function step_action_netsuite_get_items(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#netsuite): Implement action.netsuite:get_items Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'netsuite', operation: 'action.netsuite:get_items' });
  throw new Error('TODO[apps-script-backlog]: Implement action.netsuite:get_items. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.netsuite:test_connection': (_config) => `
function step_action_netsuite_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#netsuite): Implement action.netsuite:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'netsuite', operation: 'action.netsuite:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.netsuite:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.newrelic:create_alert_policy': (_config) => `
function step_action_newrelic_create_alert_policy(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#newrelic): Implement action.newrelic:create_alert_policy Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'newrelic', operation: 'action.newrelic:create_alert_policy' });
  throw new Error('TODO[apps-script-backlog]: Implement action.newrelic:create_alert_policy. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.newrelic:execute_nrql': (_config) => `
function step_action_newrelic_execute_nrql(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#newrelic): Implement action.newrelic:execute_nrql Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'newrelic', operation: 'action.newrelic:execute_nrql' });
  throw new Error('TODO[apps-script-backlog]: Implement action.newrelic:execute_nrql. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.newrelic:get_alerts': (_config) => `
function step_action_newrelic_get_alerts(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#newrelic): Implement action.newrelic:get_alerts Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'newrelic', operation: 'action.newrelic:get_alerts' });
  throw new Error('TODO[apps-script-backlog]: Implement action.newrelic:get_alerts. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.newrelic:get_application_metrics': (_config) => `
function step_action_newrelic_get_application_metrics(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#newrelic): Implement action.newrelic:get_application_metrics Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'newrelic', operation: 'action.newrelic:get_application_metrics' });
  throw new Error('TODO[apps-script-backlog]: Implement action.newrelic:get_application_metrics. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.newrelic:get_applications': (_config) => `
function step_action_newrelic_get_applications(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#newrelic): Implement action.newrelic:get_applications Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'newrelic', operation: 'action.newrelic:get_applications' });
  throw new Error('TODO[apps-script-backlog]: Implement action.newrelic:get_applications. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.newrelic:get_violations': (_config) => `
function step_action_newrelic_get_violations(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#newrelic): Implement action.newrelic:get_violations Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'newrelic', operation: 'action.newrelic:get_violations' });
  throw new Error('TODO[apps-script-backlog]: Implement action.newrelic:get_violations. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.newrelic:test_connection': (_config) => `
function step_action_newrelic_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#newrelic): Implement action.newrelic:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'newrelic', operation: 'action.newrelic:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.newrelic:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.nexus:delete_component': (_config) => `
function step_action_nexus_delete_component(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#nexus): Implement action.nexus:delete_component Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'nexus', operation: 'action.nexus:delete_component' });
  throw new Error('TODO[apps-script-backlog]: Implement action.nexus:delete_component. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.nexus:list_repositories': (_config) => `
function step_action_nexus_list_repositories(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#nexus): Implement action.nexus:list_repositories Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'nexus', operation: 'action.nexus:list_repositories' });
  throw new Error('TODO[apps-script-backlog]: Implement action.nexus:list_repositories. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.nexus:search_components': (_config) => `
function step_action_nexus_search_components(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#nexus): Implement action.nexus:search_components Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'nexus', operation: 'action.nexus:search_components' });
  throw new Error('TODO[apps-script-backlog]: Implement action.nexus:search_components. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.nexus:test_connection': (_config) => `
function step_action_nexus_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#nexus): Implement action.nexus:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'nexus', operation: 'action.nexus:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.nexus:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.nexus:upload_component': (_config) => `
function step_action_nexus_upload_component(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#nexus): Implement action.nexus:upload_component Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'nexus', operation: 'action.nexus:upload_component' });
  throw new Error('TODO[apps-script-backlog]: Implement action.nexus:upload_component. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.notion-enhanced:append_block_children': (_config) => `
function step_action_notion_enhanced_append_block_children(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion-enhanced): Implement action.notion-enhanced:append_block_children Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion-enhanced', operation: 'action.notion-enhanced:append_block_children' });
  throw new Error('TODO[apps-script-backlog]: Implement action.notion-enhanced:append_block_children. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.notion-enhanced:create_comment': (_config) => `
function step_action_notion_enhanced_create_comment(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion-enhanced): Implement action.notion-enhanced:create_comment Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion-enhanced', operation: 'action.notion-enhanced:create_comment' });
  throw new Error('TODO[apps-script-backlog]: Implement action.notion-enhanced:create_comment. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.notion-enhanced:create_database': (_config) => `
function step_action_notion_enhanced_create_database(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion-enhanced): Implement action.notion-enhanced:create_database Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion-enhanced', operation: 'action.notion-enhanced:create_database' });
  throw new Error('TODO[apps-script-backlog]: Implement action.notion-enhanced:create_database. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.notion-enhanced:create_page': (_config) => `
function step_action_notion_enhanced_create_page(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion-enhanced): Implement action.notion-enhanced:create_page Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion-enhanced', operation: 'action.notion-enhanced:create_page' });
  throw new Error('TODO[apps-script-backlog]: Implement action.notion-enhanced:create_page. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.notion-enhanced:delete_block': (_config) => `
function step_action_notion_enhanced_delete_block(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion-enhanced): Implement action.notion-enhanced:delete_block Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion-enhanced', operation: 'action.notion-enhanced:delete_block' });
  throw new Error('TODO[apps-script-backlog]: Implement action.notion-enhanced:delete_block. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.notion-enhanced:get_block_children': (_config) => `
function step_action_notion_enhanced_get_block_children(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion-enhanced): Implement action.notion-enhanced:get_block_children Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion-enhanced', operation: 'action.notion-enhanced:get_block_children' });
  throw new Error('TODO[apps-script-backlog]: Implement action.notion-enhanced:get_block_children. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.notion-enhanced:get_comments': (_config) => `
function step_action_notion_enhanced_get_comments(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion-enhanced): Implement action.notion-enhanced:get_comments Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion-enhanced', operation: 'action.notion-enhanced:get_comments' });
  throw new Error('TODO[apps-script-backlog]: Implement action.notion-enhanced:get_comments. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.notion-enhanced:get_database': (_config) => `
function step_action_notion_enhanced_get_database(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion-enhanced): Implement action.notion-enhanced:get_database Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion-enhanced', operation: 'action.notion-enhanced:get_database' });
  throw new Error('TODO[apps-script-backlog]: Implement action.notion-enhanced:get_database. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.notion-enhanced:get_page': (_config) => `
function step_action_notion_enhanced_get_page(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion-enhanced): Implement action.notion-enhanced:get_page Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion-enhanced', operation: 'action.notion-enhanced:get_page' });
  throw new Error('TODO[apps-script-backlog]: Implement action.notion-enhanced:get_page. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.notion-enhanced:get_user': (_config) => `
function step_action_notion_enhanced_get_user(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion-enhanced): Implement action.notion-enhanced:get_user Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion-enhanced', operation: 'action.notion-enhanced:get_user' });
  throw new Error('TODO[apps-script-backlog]: Implement action.notion-enhanced:get_user. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.notion-enhanced:get_users': (_config) => `
function step_action_notion_enhanced_get_users(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion-enhanced): Implement action.notion-enhanced:get_users Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion-enhanced', operation: 'action.notion-enhanced:get_users' });
  throw new Error('TODO[apps-script-backlog]: Implement action.notion-enhanced:get_users. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.notion-enhanced:query_database': (_config) => `
function step_action_notion_enhanced_query_database(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion-enhanced): Implement action.notion-enhanced:query_database Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion-enhanced', operation: 'action.notion-enhanced:query_database' });
  throw new Error('TODO[apps-script-backlog]: Implement action.notion-enhanced:query_database. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.notion-enhanced:search': (_config) => `
function step_action_notion_enhanced_search(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion-enhanced): Implement action.notion-enhanced:search Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion-enhanced', operation: 'action.notion-enhanced:search' });
  throw new Error('TODO[apps-script-backlog]: Implement action.notion-enhanced:search. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.notion-enhanced:test_connection': (_config) => `
function step_action_notion_enhanced_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion-enhanced): Implement action.notion-enhanced:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion-enhanced', operation: 'action.notion-enhanced:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.notion-enhanced:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.notion-enhanced:update_block': (_config) => `
function step_action_notion_enhanced_update_block(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion-enhanced): Implement action.notion-enhanced:update_block Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion-enhanced', operation: 'action.notion-enhanced:update_block' });
  throw new Error('TODO[apps-script-backlog]: Implement action.notion-enhanced:update_block. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.notion-enhanced:update_database': (_config) => `
function step_action_notion_enhanced_update_database(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion-enhanced): Implement action.notion-enhanced:update_database Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion-enhanced', operation: 'action.notion-enhanced:update_database' });
  throw new Error('TODO[apps-script-backlog]: Implement action.notion-enhanced:update_database. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.notion-enhanced:update_page': (_config) => `
function step_action_notion_enhanced_update_page(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion-enhanced): Implement action.notion-enhanced:update_page Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion-enhanced', operation: 'action.notion-enhanced:update_page' });
  throw new Error('TODO[apps-script-backlog]: Implement action.notion-enhanced:update_page. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.notion:append_block_children': (_config) => `
function step_action_notion_append_block_children(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion): Implement action.notion:append_block_children Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion', operation: 'action.notion:append_block_children' });
  throw new Error('TODO[apps-script-backlog]: Implement action.notion:append_block_children. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.notion:create_database_entry': (_config) => `
function step_action_notion_create_database_entry(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion): Implement action.notion:create_database_entry Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion', operation: 'action.notion:create_database_entry' });
  throw new Error('TODO[apps-script-backlog]: Implement action.notion:create_database_entry. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.notion:create_page': (_config) => `
function step_action_notion_create_page(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion): Implement action.notion:create_page Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion', operation: 'action.notion:create_page' });
  throw new Error('TODO[apps-script-backlog]: Implement action.notion:create_page. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.notion:get_block_children': (_config) => `
function step_action_notion_get_block_children(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion): Implement action.notion:get_block_children Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion', operation: 'action.notion:get_block_children' });
  throw new Error('TODO[apps-script-backlog]: Implement action.notion:get_block_children. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.notion:get_page': (_config) => `
function step_action_notion_get_page(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion): Implement action.notion:get_page Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion', operation: 'action.notion:get_page' });
  throw new Error('TODO[apps-script-backlog]: Implement action.notion:get_page. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.notion:query_database': (_config) => `
function step_action_notion_query_database(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion): Implement action.notion:query_database Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion', operation: 'action.notion:query_database' });
  throw new Error('TODO[apps-script-backlog]: Implement action.notion:query_database. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.notion:search': (_config) => `
function step_action_notion_search(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion): Implement action.notion:search Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion', operation: 'action.notion:search' });
  throw new Error('TODO[apps-script-backlog]: Implement action.notion:search. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.notion:test_connection': (_config) => `
function step_action_notion_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion): Implement action.notion:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion', operation: 'action.notion:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.notion:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.notion:update_block': (_config) => `
function step_action_notion_update_block(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion): Implement action.notion:update_block Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion', operation: 'action.notion:update_block' });
  throw new Error('TODO[apps-script-backlog]: Implement action.notion:update_block. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.notion:update_page': (_config) => `
function step_action_notion_update_page(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion): Implement action.notion:update_page Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion', operation: 'action.notion:update_page' });
  throw new Error('TODO[apps-script-backlog]: Implement action.notion:update_page. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.okta:activate_user': (_config) => `
function step_action_okta_activate_user(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#okta): Implement action.okta:activate_user Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'okta', operation: 'action.okta:activate_user' });
  throw new Error('TODO[apps-script-backlog]: Implement action.okta:activate_user. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.okta:add_user_to_group': (_config) => `
function step_action_okta_add_user_to_group(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#okta): Implement action.okta:add_user_to_group Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'okta', operation: 'action.okta:add_user_to_group' });
  throw new Error('TODO[apps-script-backlog]: Implement action.okta:add_user_to_group. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.okta:create_group': (_config) => `
function step_action_okta_create_group(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#okta): Implement action.okta:create_group Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'okta', operation: 'action.okta:create_group' });
  throw new Error('TODO[apps-script-backlog]: Implement action.okta:create_group. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.okta:create_user': (_config) => `
function step_action_okta_create_user(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#okta): Implement action.okta:create_user Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'okta', operation: 'action.okta:create_user' });
  throw new Error('TODO[apps-script-backlog]: Implement action.okta:create_user. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.okta:deactivate_user': (_config) => `
function step_action_okta_deactivate_user(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#okta): Implement action.okta:deactivate_user Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'okta', operation: 'action.okta:deactivate_user' });
  throw new Error('TODO[apps-script-backlog]: Implement action.okta:deactivate_user. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.okta:expire_password': (_config) => `
function step_action_okta_expire_password(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#okta): Implement action.okta:expire_password Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'okta', operation: 'action.okta:expire_password' });
  throw new Error('TODO[apps-script-backlog]: Implement action.okta:expire_password. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.okta:get_user': (_config) => `
function step_action_okta_get_user(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#okta): Implement action.okta:get_user Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'okta', operation: 'action.okta:get_user' });
  throw new Error('TODO[apps-script-backlog]: Implement action.okta:get_user. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.okta:list_groups': (_config) => `
function step_action_okta_list_groups(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#okta): Implement action.okta:list_groups Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'okta', operation: 'action.okta:list_groups' });
  throw new Error('TODO[apps-script-backlog]: Implement action.okta:list_groups. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.okta:list_users': (_config) => `
function step_action_okta_list_users(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#okta): Implement action.okta:list_users Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'okta', operation: 'action.okta:list_users' });
  throw new Error('TODO[apps-script-backlog]: Implement action.okta:list_users. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.okta:remove_user_from_group': (_config) => `
function step_action_okta_remove_user_from_group(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#okta): Implement action.okta:remove_user_from_group Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'okta', operation: 'action.okta:remove_user_from_group' });
  throw new Error('TODO[apps-script-backlog]: Implement action.okta:remove_user_from_group. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.okta:reset_password': (_config) => `
function step_action_okta_reset_password(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#okta): Implement action.okta:reset_password Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'okta', operation: 'action.okta:reset_password' });
  throw new Error('TODO[apps-script-backlog]: Implement action.okta:reset_password. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.okta:suspend_user': (_config) => `
function step_action_okta_suspend_user(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#okta): Implement action.okta:suspend_user Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'okta', operation: 'action.okta:suspend_user' });
  throw new Error('TODO[apps-script-backlog]: Implement action.okta:suspend_user. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.okta:test_connection': (_config) => `
function step_action_okta_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#okta): Implement action.okta:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'okta', operation: 'action.okta:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.okta:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.okta:unsuspend_user': (_config) => `
function step_action_okta_unsuspend_user(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#okta): Implement action.okta:unsuspend_user Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'okta', operation: 'action.okta:unsuspend_user' });
  throw new Error('TODO[apps-script-backlog]: Implement action.okta:unsuspend_user. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.okta:update_user': (_config) => `
function step_action_okta_update_user(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#okta): Implement action.okta:update_user Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'okta', operation: 'action.okta:update_user' });
  throw new Error('TODO[apps-script-backlog]: Implement action.okta:update_user. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.onedrive:create_folder': (_config) => `
function step_action_onedrive_create_folder(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#onedrive): Implement action.onedrive:create_folder Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'onedrive', operation: 'action.onedrive:create_folder' });
  throw new Error('TODO[apps-script-backlog]: Implement action.onedrive:create_folder. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.onedrive:delete_file': (_config) => `
function step_action_onedrive_delete_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#onedrive): Implement action.onedrive:delete_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'onedrive', operation: 'action.onedrive:delete_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.onedrive:delete_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.onedrive:download_file': (_config) => `
function step_action_onedrive_download_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#onedrive): Implement action.onedrive:download_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'onedrive', operation: 'action.onedrive:download_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.onedrive:download_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.onedrive:get_files': (_config) => `
function step_action_onedrive_get_files(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#onedrive): Implement action.onedrive:get_files Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'onedrive', operation: 'action.onedrive:get_files' });
  throw new Error('TODO[apps-script-backlog]: Implement action.onedrive:get_files. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.onedrive:share_file': (_config) => `
function step_action_onedrive_share_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#onedrive): Implement action.onedrive:share_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'onedrive', operation: 'action.onedrive:share_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.onedrive:share_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.onedrive:test_connection': (_config) => `
function step_action_onedrive_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#onedrive): Implement action.onedrive:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'onedrive', operation: 'action.onedrive:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.onedrive:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.onedrive:upload_file': (_config) => `
function step_action_onedrive_upload_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#onedrive): Implement action.onedrive:upload_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'onedrive', operation: 'action.onedrive:upload_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.onedrive:upload_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.opsgenie:acknowledge_alert': (_config) => `
function step_action_opsgenie_acknowledge_alert(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#opsgenie): Implement action.opsgenie:acknowledge_alert Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'opsgenie', operation: 'action.opsgenie:acknowledge_alert' });
  throw new Error('TODO[apps-script-backlog]: Implement action.opsgenie:acknowledge_alert. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.opsgenie:add_note_to_alert': (_config) => `
function step_action_opsgenie_add_note_to_alert(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#opsgenie): Implement action.opsgenie:add_note_to_alert Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'opsgenie', operation: 'action.opsgenie:add_note_to_alert' });
  throw new Error('TODO[apps-script-backlog]: Implement action.opsgenie:add_note_to_alert. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.opsgenie:assign_alert': (_config) => `
function step_action_opsgenie_assign_alert(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#opsgenie): Implement action.opsgenie:assign_alert Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'opsgenie', operation: 'action.opsgenie:assign_alert' });
  throw new Error('TODO[apps-script-backlog]: Implement action.opsgenie:assign_alert. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.opsgenie:close_alert': (_config) => `
function step_action_opsgenie_close_alert(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#opsgenie): Implement action.opsgenie:close_alert Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'opsgenie', operation: 'action.opsgenie:close_alert' });
  throw new Error('TODO[apps-script-backlog]: Implement action.opsgenie:close_alert. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.opsgenie:create_alert': (_config) => `
function step_action_opsgenie_create_alert(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#opsgenie): Implement action.opsgenie:create_alert Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'opsgenie', operation: 'action.opsgenie:create_alert' });
  throw new Error('TODO[apps-script-backlog]: Implement action.opsgenie:create_alert. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.opsgenie:get_alert': (_config) => `
function step_action_opsgenie_get_alert(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#opsgenie): Implement action.opsgenie:get_alert Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'opsgenie', operation: 'action.opsgenie:get_alert' });
  throw new Error('TODO[apps-script-backlog]: Implement action.opsgenie:get_alert. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.opsgenie:get_on_calls': (_config) => `
function step_action_opsgenie_get_on_calls(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#opsgenie): Implement action.opsgenie:get_on_calls Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'opsgenie', operation: 'action.opsgenie:get_on_calls' });
  throw new Error('TODO[apps-script-backlog]: Implement action.opsgenie:get_on_calls. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.opsgenie:get_schedules': (_config) => `
function step_action_opsgenie_get_schedules(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#opsgenie): Implement action.opsgenie:get_schedules Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'opsgenie', operation: 'action.opsgenie:get_schedules' });
  throw new Error('TODO[apps-script-backlog]: Implement action.opsgenie:get_schedules. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.opsgenie:get_teams': (_config) => `
function step_action_opsgenie_get_teams(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#opsgenie): Implement action.opsgenie:get_teams Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'opsgenie', operation: 'action.opsgenie:get_teams' });
  throw new Error('TODO[apps-script-backlog]: Implement action.opsgenie:get_teams. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.opsgenie:list_alerts': (_config) => `
function step_action_opsgenie_list_alerts(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#opsgenie): Implement action.opsgenie:list_alerts Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'opsgenie', operation: 'action.opsgenie:list_alerts' });
  throw new Error('TODO[apps-script-backlog]: Implement action.opsgenie:list_alerts. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.opsgenie:test_connection': (_config) => `
function step_action_opsgenie_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#opsgenie): Implement action.opsgenie:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'opsgenie', operation: 'action.opsgenie:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.opsgenie:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.outlook:create_calendar_event': (_config) => `
function step_action_outlook_create_calendar_event(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#outlook): Implement action.outlook:create_calendar_event Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'outlook', operation: 'action.outlook:create_calendar_event' });
  throw new Error('TODO[apps-script-backlog]: Implement action.outlook:create_calendar_event. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.outlook:create_contact': (_config) => `
function step_action_outlook_create_contact(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#outlook): Implement action.outlook:create_contact Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'outlook', operation: 'action.outlook:create_contact' });
  throw new Error('TODO[apps-script-backlog]: Implement action.outlook:create_contact. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.outlook:delete_message': (_config) => `
function step_action_outlook_delete_message(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#outlook): Implement action.outlook:delete_message Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'outlook', operation: 'action.outlook:delete_message' });
  throw new Error('TODO[apps-script-backlog]: Implement action.outlook:delete_message. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.outlook:get_calendar_events': (_config) => `
function step_action_outlook_get_calendar_events(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#outlook): Implement action.outlook:get_calendar_events Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'outlook', operation: 'action.outlook:get_calendar_events' });
  throw new Error('TODO[apps-script-backlog]: Implement action.outlook:get_calendar_events. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.outlook:get_message': (_config) => `
function step_action_outlook_get_message(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#outlook): Implement action.outlook:get_message Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'outlook', operation: 'action.outlook:get_message' });
  throw new Error('TODO[apps-script-backlog]: Implement action.outlook:get_message. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.outlook:get_messages': (_config) => `
function step_action_outlook_get_messages(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#outlook): Implement action.outlook:get_messages Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'outlook', operation: 'action.outlook:get_messages' });
  throw new Error('TODO[apps-script-backlog]: Implement action.outlook:get_messages. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.outlook:reply_to_message': (_config) => `
function step_action_outlook_reply_to_message(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#outlook): Implement action.outlook:reply_to_message Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'outlook', operation: 'action.outlook:reply_to_message' });
  throw new Error('TODO[apps-script-backlog]: Implement action.outlook:reply_to_message. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.outlook:send_email': (_config) => `
function step_action_outlook_send_email(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#outlook): Implement action.outlook:send_email Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'outlook', operation: 'action.outlook:send_email' });
  throw new Error('TODO[apps-script-backlog]: Implement action.outlook:send_email. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.outlook:test_connection': (_config) => `
function step_action_outlook_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#outlook): Implement action.outlook:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'outlook', operation: 'action.outlook:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.outlook:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.pagerduty:acknowledge_incident': (_config) => `
function step_action_pagerduty_acknowledge_incident(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pagerduty): Implement action.pagerduty:acknowledge_incident Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pagerduty', operation: 'action.pagerduty:acknowledge_incident' });
  throw new Error('TODO[apps-script-backlog]: Implement action.pagerduty:acknowledge_incident. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.pagerduty:create_incident': (_config) => `
function step_action_pagerduty_create_incident(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pagerduty): Implement action.pagerduty:create_incident Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pagerduty', operation: 'action.pagerduty:create_incident' });
  throw new Error('TODO[apps-script-backlog]: Implement action.pagerduty:create_incident. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.pagerduty:create_note': (_config) => `
function step_action_pagerduty_create_note(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pagerduty): Implement action.pagerduty:create_note Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pagerduty', operation: 'action.pagerduty:create_note' });
  throw new Error('TODO[apps-script-backlog]: Implement action.pagerduty:create_note. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.pagerduty:get_incident': (_config) => `
function step_action_pagerduty_get_incident(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pagerduty): Implement action.pagerduty:get_incident Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pagerduty', operation: 'action.pagerduty:get_incident' });
  throw new Error('TODO[apps-script-backlog]: Implement action.pagerduty:get_incident. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.pagerduty:get_service': (_config) => `
function step_action_pagerduty_get_service(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pagerduty): Implement action.pagerduty:get_service Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pagerduty', operation: 'action.pagerduty:get_service' });
  throw new Error('TODO[apps-script-backlog]: Implement action.pagerduty:get_service. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.pagerduty:get_user': (_config) => `
function step_action_pagerduty_get_user(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pagerduty): Implement action.pagerduty:get_user Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pagerduty', operation: 'action.pagerduty:get_user' });
  throw new Error('TODO[apps-script-backlog]: Implement action.pagerduty:get_user. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.pagerduty:list_incidents': (_config) => `
function step_action_pagerduty_list_incidents(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pagerduty): Implement action.pagerduty:list_incidents Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pagerduty', operation: 'action.pagerduty:list_incidents' });
  throw new Error('TODO[apps-script-backlog]: Implement action.pagerduty:list_incidents. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.pagerduty:list_services': (_config) => `
function step_action_pagerduty_list_services(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pagerduty): Implement action.pagerduty:list_services Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pagerduty', operation: 'action.pagerduty:list_services' });
  throw new Error('TODO[apps-script-backlog]: Implement action.pagerduty:list_services. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.pagerduty:list_users': (_config) => `
function step_action_pagerduty_list_users(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pagerduty): Implement action.pagerduty:list_users Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pagerduty', operation: 'action.pagerduty:list_users' });
  throw new Error('TODO[apps-script-backlog]: Implement action.pagerduty:list_users. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.pagerduty:resolve_incident': (_config) => `
function step_action_pagerduty_resolve_incident(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pagerduty): Implement action.pagerduty:resolve_incident Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pagerduty', operation: 'action.pagerduty:resolve_incident' });
  throw new Error('TODO[apps-script-backlog]: Implement action.pagerduty:resolve_incident. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.pagerduty:test_connection': (_config) => `
function step_action_pagerduty_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pagerduty): Implement action.pagerduty:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pagerduty', operation: 'action.pagerduty:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.pagerduty:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.pagerduty:update_incident': (_config) => `
function step_action_pagerduty_update_incident(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pagerduty): Implement action.pagerduty:update_incident Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pagerduty', operation: 'action.pagerduty:update_incident' });
  throw new Error('TODO[apps-script-backlog]: Implement action.pagerduty:update_incident. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.pardot:add_prospect_to_list': (_config) => `
function step_action_pardot_add_prospect_to_list(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pardot): Implement action.pardot:add_prospect_to_list Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pardot', operation: 'action.pardot:add_prospect_to_list' });
  throw new Error('TODO[apps-script-backlog]: Implement action.pardot:add_prospect_to_list. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.pardot:create_prospect': (_config) => `
function step_action_pardot_create_prospect(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pardot): Implement action.pardot:create_prospect Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pardot', operation: 'action.pardot:create_prospect' });
  throw new Error('TODO[apps-script-backlog]: Implement action.pardot:create_prospect. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.pardot:get_campaigns': (_config) => `
function step_action_pardot_get_campaigns(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pardot): Implement action.pardot:get_campaigns Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pardot', operation: 'action.pardot:get_campaigns' });
  throw new Error('TODO[apps-script-backlog]: Implement action.pardot:get_campaigns. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.pardot:get_lists': (_config) => `
function step_action_pardot_get_lists(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pardot): Implement action.pardot:get_lists Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pardot', operation: 'action.pardot:get_lists' });
  throw new Error('TODO[apps-script-backlog]: Implement action.pardot:get_lists. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.pardot:get_prospects': (_config) => `
function step_action_pardot_get_prospects(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pardot): Implement action.pardot:get_prospects Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pardot', operation: 'action.pardot:get_prospects' });
  throw new Error('TODO[apps-script-backlog]: Implement action.pardot:get_prospects. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.pardot:test_connection': (_config) => `
function step_action_pardot_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pardot): Implement action.pardot:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pardot', operation: 'action.pardot:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.pardot:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.pardot:update_prospect': (_config) => `
function step_action_pardot_update_prospect(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pardot): Implement action.pardot:update_prospect Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pardot', operation: 'action.pardot:update_prospect' });
  throw new Error('TODO[apps-script-backlog]: Implement action.pardot:update_prospect. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.paypal:capture_order': (_config) => `
function step_action_paypal_capture_order(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#paypal): Implement action.paypal:capture_order Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'paypal', operation: 'action.paypal:capture_order' });
  throw new Error('TODO[apps-script-backlog]: Implement action.paypal:capture_order. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.paypal:create_order': (_config) => `
function step_action_paypal_create_order(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#paypal): Implement action.paypal:create_order Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'paypal', operation: 'action.paypal:create_order' });
  throw new Error('TODO[apps-script-backlog]: Implement action.paypal:create_order. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.paypal:create_payment': (_config) => `
function step_action_paypal_create_payment(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#paypal): Implement action.paypal:create_payment Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'paypal', operation: 'action.paypal:create_payment' });
  throw new Error('TODO[apps-script-backlog]: Implement action.paypal:create_payment. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.paypal:get_order': (_config) => `
function step_action_paypal_get_order(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#paypal): Implement action.paypal:get_order Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'paypal', operation: 'action.paypal:get_order' });
  throw new Error('TODO[apps-script-backlog]: Implement action.paypal:get_order. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.paypal:get_payment': (_config) => `
function step_action_paypal_get_payment(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#paypal): Implement action.paypal:get_payment Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'paypal', operation: 'action.paypal:get_payment' });
  throw new Error('TODO[apps-script-backlog]: Implement action.paypal:get_payment. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.paypal:list_payments': (_config) => `
function step_action_paypal_list_payments(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#paypal): Implement action.paypal:list_payments Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'paypal', operation: 'action.paypal:list_payments' });
  throw new Error('TODO[apps-script-backlog]: Implement action.paypal:list_payments. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.paypal:refund_capture': (_config) => `
function step_action_paypal_refund_capture(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#paypal): Implement action.paypal:refund_capture Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'paypal', operation: 'action.paypal:refund_capture' });
  throw new Error('TODO[apps-script-backlog]: Implement action.paypal:refund_capture. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.paypal:test_connection': (_config) => `
function step_action_paypal_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#paypal): Implement action.paypal:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'paypal', operation: 'action.paypal:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.paypal:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.pipedrive:create_activity': (_config) => `
function step_action_pipedrive_create_activity(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pipedrive): Implement action.pipedrive:create_activity Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pipedrive', operation: 'action.pipedrive:create_activity' });
  throw new Error('TODO[apps-script-backlog]: Implement action.pipedrive:create_activity. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.pipedrive:create_deal': (_config) => `
function step_action_pipedrive_create_deal(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pipedrive): Implement action.pipedrive:create_deal Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pipedrive', operation: 'action.pipedrive:create_deal' });
  throw new Error('TODO[apps-script-backlog]: Implement action.pipedrive:create_deal. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.pipedrive:create_organization': (_config) => `
function step_action_pipedrive_create_organization(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pipedrive): Implement action.pipedrive:create_organization Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pipedrive', operation: 'action.pipedrive:create_organization' });
  throw new Error('TODO[apps-script-backlog]: Implement action.pipedrive:create_organization. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.pipedrive:create_person': (_config) => `
function step_action_pipedrive_create_person(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pipedrive): Implement action.pipedrive:create_person Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pipedrive', operation: 'action.pipedrive:create_person' });
  throw new Error('TODO[apps-script-backlog]: Implement action.pipedrive:create_person. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.pipedrive:get_activities': (_config) => `
function step_action_pipedrive_get_activities(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pipedrive): Implement action.pipedrive:get_activities Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pipedrive', operation: 'action.pipedrive:get_activities' });
  throw new Error('TODO[apps-script-backlog]: Implement action.pipedrive:get_activities. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.pipedrive:get_deals': (_config) => `
function step_action_pipedrive_get_deals(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pipedrive): Implement action.pipedrive:get_deals Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pipedrive', operation: 'action.pipedrive:get_deals' });
  throw new Error('TODO[apps-script-backlog]: Implement action.pipedrive:get_deals. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.pipedrive:get_organizations': (_config) => `
function step_action_pipedrive_get_organizations(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pipedrive): Implement action.pipedrive:get_organizations Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pipedrive', operation: 'action.pipedrive:get_organizations' });
  throw new Error('TODO[apps-script-backlog]: Implement action.pipedrive:get_organizations. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.pipedrive:get_persons': (_config) => `
function step_action_pipedrive_get_persons(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pipedrive): Implement action.pipedrive:get_persons Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pipedrive', operation: 'action.pipedrive:get_persons' });
  throw new Error('TODO[apps-script-backlog]: Implement action.pipedrive:get_persons. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.pipedrive:test_connection': (_config) => `
function step_action_pipedrive_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pipedrive): Implement action.pipedrive:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pipedrive', operation: 'action.pipedrive:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.pipedrive:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.pipedrive:update_deal': (_config) => `
function step_action_pipedrive_update_deal(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pipedrive): Implement action.pipedrive:update_deal Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pipedrive', operation: 'action.pipedrive:update_deal' });
  throw new Error('TODO[apps-script-backlog]: Implement action.pipedrive:update_deal. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.powerbi-enhanced:clone_report': (_config) => `
function step_action_powerbi_enhanced_clone_report(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#powerbi-enhanced): Implement action.powerbi-enhanced:clone_report Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'powerbi-enhanced', operation: 'action.powerbi-enhanced:clone_report' });
  throw new Error('TODO[apps-script-backlog]: Implement action.powerbi-enhanced:clone_report. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.powerbi-enhanced:create_group': (_config) => `
function step_action_powerbi_enhanced_create_group(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#powerbi-enhanced): Implement action.powerbi-enhanced:create_group Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'powerbi-enhanced', operation: 'action.powerbi-enhanced:create_group' });
  throw new Error('TODO[apps-script-backlog]: Implement action.powerbi-enhanced:create_group. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.powerbi-enhanced:execute_dax': (_config) => `
function step_action_powerbi_enhanced_execute_dax(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#powerbi-enhanced): Implement action.powerbi-enhanced:execute_dax Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'powerbi-enhanced', operation: 'action.powerbi-enhanced:execute_dax' });
  throw new Error('TODO[apps-script-backlog]: Implement action.powerbi-enhanced:execute_dax. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.powerbi-enhanced:export_report': (_config) => `
function step_action_powerbi_enhanced_export_report(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#powerbi-enhanced): Implement action.powerbi-enhanced:export_report Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'powerbi-enhanced', operation: 'action.powerbi-enhanced:export_report' });
  throw new Error('TODO[apps-script-backlog]: Implement action.powerbi-enhanced:export_report. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.powerbi-enhanced:generate_token': (_config) => `
function step_action_powerbi_enhanced_generate_token(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#powerbi-enhanced): Implement action.powerbi-enhanced:generate_token Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'powerbi-enhanced', operation: 'action.powerbi-enhanced:generate_token' });
  throw new Error('TODO[apps-script-backlog]: Implement action.powerbi-enhanced:generate_token. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.powerbi-enhanced:get_dashboard': (_config) => `
function step_action_powerbi_enhanced_get_dashboard(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#powerbi-enhanced): Implement action.powerbi-enhanced:get_dashboard Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'powerbi-enhanced', operation: 'action.powerbi-enhanced:get_dashboard' });
  throw new Error('TODO[apps-script-backlog]: Implement action.powerbi-enhanced:get_dashboard. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.powerbi-enhanced:get_dashboards': (_config) => `
function step_action_powerbi_enhanced_get_dashboards(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#powerbi-enhanced): Implement action.powerbi-enhanced:get_dashboards Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'powerbi-enhanced', operation: 'action.powerbi-enhanced:get_dashboards' });
  throw new Error('TODO[apps-script-backlog]: Implement action.powerbi-enhanced:get_dashboards. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.powerbi-enhanced:get_dataflows': (_config) => `
function step_action_powerbi_enhanced_get_dataflows(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#powerbi-enhanced): Implement action.powerbi-enhanced:get_dataflows Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'powerbi-enhanced', operation: 'action.powerbi-enhanced:get_dataflows' });
  throw new Error('TODO[apps-script-backlog]: Implement action.powerbi-enhanced:get_dataflows. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.powerbi-enhanced:get_dataset': (_config) => `
function step_action_powerbi_enhanced_get_dataset(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#powerbi-enhanced): Implement action.powerbi-enhanced:get_dataset Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'powerbi-enhanced', operation: 'action.powerbi-enhanced:get_dataset' });
  throw new Error('TODO[apps-script-backlog]: Implement action.powerbi-enhanced:get_dataset. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.powerbi-enhanced:get_datasets': (_config) => `
function step_action_powerbi_enhanced_get_datasets(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#powerbi-enhanced): Implement action.powerbi-enhanced:get_datasets Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'powerbi-enhanced', operation: 'action.powerbi-enhanced:get_datasets' });
  throw new Error('TODO[apps-script-backlog]: Implement action.powerbi-enhanced:get_datasets. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.powerbi-enhanced:get_group': (_config) => `
function step_action_powerbi_enhanced_get_group(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#powerbi-enhanced): Implement action.powerbi-enhanced:get_group Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'powerbi-enhanced', operation: 'action.powerbi-enhanced:get_group' });
  throw new Error('TODO[apps-script-backlog]: Implement action.powerbi-enhanced:get_group. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.powerbi-enhanced:get_groups': (_config) => `
function step_action_powerbi_enhanced_get_groups(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#powerbi-enhanced): Implement action.powerbi-enhanced:get_groups Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'powerbi-enhanced', operation: 'action.powerbi-enhanced:get_groups' });
  throw new Error('TODO[apps-script-backlog]: Implement action.powerbi-enhanced:get_groups. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.powerbi-enhanced:get_refresh_history': (_config) => `
function step_action_powerbi_enhanced_get_refresh_history(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#powerbi-enhanced): Implement action.powerbi-enhanced:get_refresh_history Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'powerbi-enhanced', operation: 'action.powerbi-enhanced:get_refresh_history' });
  throw new Error('TODO[apps-script-backlog]: Implement action.powerbi-enhanced:get_refresh_history. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.powerbi-enhanced:get_report': (_config) => `
function step_action_powerbi_enhanced_get_report(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#powerbi-enhanced): Implement action.powerbi-enhanced:get_report Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'powerbi-enhanced', operation: 'action.powerbi-enhanced:get_report' });
  throw new Error('TODO[apps-script-backlog]: Implement action.powerbi-enhanced:get_report. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.powerbi-enhanced:get_reports': (_config) => `
function step_action_powerbi_enhanced_get_reports(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#powerbi-enhanced): Implement action.powerbi-enhanced:get_reports Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'powerbi-enhanced', operation: 'action.powerbi-enhanced:get_reports' });
  throw new Error('TODO[apps-script-backlog]: Implement action.powerbi-enhanced:get_reports. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.powerbi-enhanced:get_tiles': (_config) => `
function step_action_powerbi_enhanced_get_tiles(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#powerbi-enhanced): Implement action.powerbi-enhanced:get_tiles Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'powerbi-enhanced', operation: 'action.powerbi-enhanced:get_tiles' });
  throw new Error('TODO[apps-script-backlog]: Implement action.powerbi-enhanced:get_tiles. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.powerbi-enhanced:refresh_dataflow': (_config) => `
function step_action_powerbi_enhanced_refresh_dataflow(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#powerbi-enhanced): Implement action.powerbi-enhanced:refresh_dataflow Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'powerbi-enhanced', operation: 'action.powerbi-enhanced:refresh_dataflow' });
  throw new Error('TODO[apps-script-backlog]: Implement action.powerbi-enhanced:refresh_dataflow. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.powerbi-enhanced:refresh_dataset': (_config) => `
function step_action_powerbi_enhanced_refresh_dataset(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#powerbi-enhanced): Implement action.powerbi-enhanced:refresh_dataset Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'powerbi-enhanced', operation: 'action.powerbi-enhanced:refresh_dataset' });
  throw new Error('TODO[apps-script-backlog]: Implement action.powerbi-enhanced:refresh_dataset. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.powerbi-enhanced:test_connection': (_config) => `
function step_action_powerbi_enhanced_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#powerbi-enhanced): Implement action.powerbi-enhanced:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'powerbi-enhanced', operation: 'action.powerbi-enhanced:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.powerbi-enhanced:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.powerbi:add_rows': (_config) => `
function step_action_powerbi_add_rows(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#powerbi): Implement action.powerbi:add_rows Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'powerbi', operation: 'action.powerbi:add_rows' });
  throw new Error('TODO[apps-script-backlog]: Implement action.powerbi:add_rows. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.powerbi:get_dashboards': (_config) => `
function step_action_powerbi_get_dashboards(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#powerbi): Implement action.powerbi:get_dashboards Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'powerbi', operation: 'action.powerbi:get_dashboards' });
  throw new Error('TODO[apps-script-backlog]: Implement action.powerbi:get_dashboards. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.powerbi:get_datasets': (_config) => `
function step_action_powerbi_get_datasets(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#powerbi): Implement action.powerbi:get_datasets Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'powerbi', operation: 'action.powerbi:get_datasets' });
  throw new Error('TODO[apps-script-backlog]: Implement action.powerbi:get_datasets. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.powerbi:get_refreshes': (_config) => `
function step_action_powerbi_get_refreshes(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#powerbi): Implement action.powerbi:get_refreshes Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'powerbi', operation: 'action.powerbi:get_refreshes' });
  throw new Error('TODO[apps-script-backlog]: Implement action.powerbi:get_refreshes. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.powerbi:get_reports': (_config) => `
function step_action_powerbi_get_reports(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#powerbi): Implement action.powerbi:get_reports Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'powerbi', operation: 'action.powerbi:get_reports' });
  throw new Error('TODO[apps-script-backlog]: Implement action.powerbi:get_reports. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.powerbi:query_dataset': (_config) => `
function step_action_powerbi_query_dataset(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#powerbi): Implement action.powerbi:query_dataset Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'powerbi', operation: 'action.powerbi:query_dataset' });
  throw new Error('TODO[apps-script-backlog]: Implement action.powerbi:query_dataset. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.powerbi:test_connection': (_config) => `
function step_action_powerbi_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#powerbi): Implement action.powerbi:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'powerbi', operation: 'action.powerbi:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.powerbi:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.powerbi:trigger_refresh': (_config) => `
function step_action_powerbi_trigger_refresh(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#powerbi): Implement action.powerbi:trigger_refresh Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'powerbi', operation: 'action.powerbi:trigger_refresh' });
  throw new Error('TODO[apps-script-backlog]: Implement action.powerbi:trigger_refresh. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.prometheus:get_alerts': (_config) => `
function step_action_prometheus_get_alerts(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#prometheus): Implement action.prometheus:get_alerts Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'prometheus', operation: 'action.prometheus:get_alerts' });
  throw new Error('TODO[apps-script-backlog]: Implement action.prometheus:get_alerts. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.prometheus:get_targets': (_config) => `
function step_action_prometheus_get_targets(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#prometheus): Implement action.prometheus:get_targets Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'prometheus', operation: 'action.prometheus:get_targets' });
  throw new Error('TODO[apps-script-backlog]: Implement action.prometheus:get_targets. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.prometheus:query_metrics': (_config) => `
function step_action_prometheus_query_metrics(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#prometheus): Implement action.prometheus:query_metrics Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'prometheus', operation: 'action.prometheus:query_metrics' });
  throw new Error('TODO[apps-script-backlog]: Implement action.prometheus:query_metrics. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.prometheus:query_range': (_config) => `
function step_action_prometheus_query_range(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#prometheus): Implement action.prometheus:query_range Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'prometheus', operation: 'action.prometheus:query_range' });
  throw new Error('TODO[apps-script-backlog]: Implement action.prometheus:query_range. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.prometheus:test_connection': (_config) => `
function step_action_prometheus_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#prometheus): Implement action.prometheus:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'prometheus', operation: 'action.prometheus:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.prometheus:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.qualtrics:create_contact': (_config) => `
function step_action_qualtrics_create_contact(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#qualtrics): Implement action.qualtrics:create_contact Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'qualtrics', operation: 'action.qualtrics:create_contact' });
  throw new Error('TODO[apps-script-backlog]: Implement action.qualtrics:create_contact. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.qualtrics:create_distribution': (_config) => `
function step_action_qualtrics_create_distribution(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#qualtrics): Implement action.qualtrics:create_distribution Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'qualtrics', operation: 'action.qualtrics:create_distribution' });
  throw new Error('TODO[apps-script-backlog]: Implement action.qualtrics:create_distribution. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.qualtrics:create_survey': (_config) => `
function step_action_qualtrics_create_survey(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#qualtrics): Implement action.qualtrics:create_survey Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'qualtrics', operation: 'action.qualtrics:create_survey' });
  throw new Error('TODO[apps-script-backlog]: Implement action.qualtrics:create_survey. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.qualtrics:get_contacts': (_config) => `
function step_action_qualtrics_get_contacts(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#qualtrics): Implement action.qualtrics:get_contacts Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'qualtrics', operation: 'action.qualtrics:get_contacts' });
  throw new Error('TODO[apps-script-backlog]: Implement action.qualtrics:get_contacts. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.qualtrics:get_responses': (_config) => `
function step_action_qualtrics_get_responses(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#qualtrics): Implement action.qualtrics:get_responses Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'qualtrics', operation: 'action.qualtrics:get_responses' });
  throw new Error('TODO[apps-script-backlog]: Implement action.qualtrics:get_responses. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.qualtrics:get_survey': (_config) => `
function step_action_qualtrics_get_survey(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#qualtrics): Implement action.qualtrics:get_survey Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'qualtrics', operation: 'action.qualtrics:get_survey' });
  throw new Error('TODO[apps-script-backlog]: Implement action.qualtrics:get_survey. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.qualtrics:get_surveys': (_config) => `
function step_action_qualtrics_get_surveys(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#qualtrics): Implement action.qualtrics:get_surveys Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'qualtrics', operation: 'action.qualtrics:get_surveys' });
  throw new Error('TODO[apps-script-backlog]: Implement action.qualtrics:get_surveys. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.qualtrics:send_survey': (_config) => `
function step_action_qualtrics_send_survey(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#qualtrics): Implement action.qualtrics:send_survey Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'qualtrics', operation: 'action.qualtrics:send_survey' });
  throw new Error('TODO[apps-script-backlog]: Implement action.qualtrics:send_survey. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.qualtrics:test_connection': (_config) => `
function step_action_qualtrics_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#qualtrics): Implement action.qualtrics:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'qualtrics', operation: 'action.qualtrics:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.qualtrics:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.quickbooks:create_customer': (_config) => `
function step_action_quickbooks_create_customer(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#quickbooks): Implement action.quickbooks:create_customer Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'quickbooks', operation: 'action.quickbooks:create_customer' });
  throw new Error('TODO[apps-script-backlog]: Implement action.quickbooks:create_customer. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.quickbooks:create_expense': (_config) => `
function step_action_quickbooks_create_expense(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#quickbooks): Implement action.quickbooks:create_expense Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'quickbooks', operation: 'action.quickbooks:create_expense' });
  throw new Error('TODO[apps-script-backlog]: Implement action.quickbooks:create_expense. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.quickbooks:create_invoice': (_config) => `
function step_action_quickbooks_create_invoice(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#quickbooks): Implement action.quickbooks:create_invoice Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'quickbooks', operation: 'action.quickbooks:create_invoice' });
  throw new Error('TODO[apps-script-backlog]: Implement action.quickbooks:create_invoice. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.quickbooks:create_item': (_config) => `
function step_action_quickbooks_create_item(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#quickbooks): Implement action.quickbooks:create_item Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'quickbooks', operation: 'action.quickbooks:create_item' });
  throw new Error('TODO[apps-script-backlog]: Implement action.quickbooks:create_item. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.quickbooks:create_payment': (_config) => `
function step_action_quickbooks_create_payment(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#quickbooks): Implement action.quickbooks:create_payment Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'quickbooks', operation: 'action.quickbooks:create_payment' });
  throw new Error('TODO[apps-script-backlog]: Implement action.quickbooks:create_payment. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.quickbooks:get_accounts': (_config) => `
function step_action_quickbooks_get_accounts(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#quickbooks): Implement action.quickbooks:get_accounts Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'quickbooks', operation: 'action.quickbooks:get_accounts' });
  throw new Error('TODO[apps-script-backlog]: Implement action.quickbooks:get_accounts. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.quickbooks:get_company_info': (_config) => `
function step_action_quickbooks_get_company_info(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#quickbooks): Implement action.quickbooks:get_company_info Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'quickbooks', operation: 'action.quickbooks:get_company_info' });
  throw new Error('TODO[apps-script-backlog]: Implement action.quickbooks:get_company_info. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.quickbooks:get_customer': (_config) => `
function step_action_quickbooks_get_customer(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#quickbooks): Implement action.quickbooks:get_customer Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'quickbooks', operation: 'action.quickbooks:get_customer' });
  throw new Error('TODO[apps-script-backlog]: Implement action.quickbooks:get_customer. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.quickbooks:get_invoice': (_config) => `
function step_action_quickbooks_get_invoice(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#quickbooks): Implement action.quickbooks:get_invoice Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'quickbooks', operation: 'action.quickbooks:get_invoice' });
  throw new Error('TODO[apps-script-backlog]: Implement action.quickbooks:get_invoice. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.quickbooks:get_reports': (_config) => `
function step_action_quickbooks_get_reports(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#quickbooks): Implement action.quickbooks:get_reports Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'quickbooks', operation: 'action.quickbooks:get_reports' });
  throw new Error('TODO[apps-script-backlog]: Implement action.quickbooks:get_reports. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.quickbooks:query_customers': (_config) => `
function step_action_quickbooks_query_customers(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#quickbooks): Implement action.quickbooks:query_customers Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'quickbooks', operation: 'action.quickbooks:query_customers' });
  throw new Error('TODO[apps-script-backlog]: Implement action.quickbooks:query_customers. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.quickbooks:send_invoice': (_config) => `
function step_action_quickbooks_send_invoice(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#quickbooks): Implement action.quickbooks:send_invoice Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'quickbooks', operation: 'action.quickbooks:send_invoice' });
  throw new Error('TODO[apps-script-backlog]: Implement action.quickbooks:send_invoice. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.quickbooks:test_connection': (_config) => `
function step_action_quickbooks_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#quickbooks): Implement action.quickbooks:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'quickbooks', operation: 'action.quickbooks:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.quickbooks:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.quickbooks:update_customer': (_config) => `
function step_action_quickbooks_update_customer(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#quickbooks): Implement action.quickbooks:update_customer Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'quickbooks', operation: 'action.quickbooks:update_customer' });
  throw new Error('TODO[apps-script-backlog]: Implement action.quickbooks:update_customer. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.ramp:create_user': (_config) => `
function step_action_ramp_create_user(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#ramp): Implement action.ramp:create_user Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'ramp', operation: 'action.ramp:create_user' });
  throw new Error('TODO[apps-script-backlog]: Implement action.ramp:create_user. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.ramp:get_cards': (_config) => `
function step_action_ramp_get_cards(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#ramp): Implement action.ramp:get_cards Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'ramp', operation: 'action.ramp:get_cards' });
  throw new Error('TODO[apps-script-backlog]: Implement action.ramp:get_cards. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.ramp:get_transactions': (_config) => `
function step_action_ramp_get_transactions(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#ramp): Implement action.ramp:get_transactions Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'ramp', operation: 'action.ramp:get_transactions' });
  throw new Error('TODO[apps-script-backlog]: Implement action.ramp:get_transactions. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.ramp:get_users': (_config) => `
function step_action_ramp_get_users(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#ramp): Implement action.ramp:get_users Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'ramp', operation: 'action.ramp:get_users' });
  throw new Error('TODO[apps-script-backlog]: Implement action.ramp:get_users. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.ramp:test_connection': (_config) => `
function step_action_ramp_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#ramp): Implement action.ramp:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'ramp', operation: 'action.ramp:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.ramp:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.razorpay:capture_payment': (_config) => `
function step_action_razorpay_capture_payment(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#razorpay): Implement action.razorpay:capture_payment Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'razorpay', operation: 'action.razorpay:capture_payment' });
  throw new Error('TODO[apps-script-backlog]: Implement action.razorpay:capture_payment. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.razorpay:create_order': (_config) => `
function step_action_razorpay_create_order(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#razorpay): Implement action.razorpay:create_order Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'razorpay', operation: 'action.razorpay:create_order' });
  throw new Error('TODO[apps-script-backlog]: Implement action.razorpay:create_order. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.razorpay:create_refund': (_config) => `
function step_action_razorpay_create_refund(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#razorpay): Implement action.razorpay:create_refund Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'razorpay', operation: 'action.razorpay:create_refund' });
  throw new Error('TODO[apps-script-backlog]: Implement action.razorpay:create_refund. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.razorpay:get_orders': (_config) => `
function step_action_razorpay_get_orders(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#razorpay): Implement action.razorpay:get_orders Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'razorpay', operation: 'action.razorpay:get_orders' });
  throw new Error('TODO[apps-script-backlog]: Implement action.razorpay:get_orders. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.razorpay:get_payments': (_config) => `
function step_action_razorpay_get_payments(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#razorpay): Implement action.razorpay:get_payments Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'razorpay', operation: 'action.razorpay:get_payments' });
  throw new Error('TODO[apps-script-backlog]: Implement action.razorpay:get_payments. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.razorpay:test_connection': (_config) => `
function step_action_razorpay_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#razorpay): Implement action.razorpay:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'razorpay', operation: 'action.razorpay:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.razorpay:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.ringcentral:create_meeting': (_config) => `
function step_action_ringcentral_create_meeting(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#ringcentral): Implement action.ringcentral:create_meeting Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'ringcentral', operation: 'action.ringcentral:create_meeting' });
  throw new Error('TODO[apps-script-backlog]: Implement action.ringcentral:create_meeting. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.ringcentral:get_account_info': (_config) => `
function step_action_ringcentral_get_account_info(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#ringcentral): Implement action.ringcentral:get_account_info Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'ringcentral', operation: 'action.ringcentral:get_account_info' });
  throw new Error('TODO[apps-script-backlog]: Implement action.ringcentral:get_account_info. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.ringcentral:get_call_log': (_config) => `
function step_action_ringcentral_get_call_log(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#ringcentral): Implement action.ringcentral:get_call_log Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'ringcentral', operation: 'action.ringcentral:get_call_log' });
  throw new Error('TODO[apps-script-backlog]: Implement action.ringcentral:get_call_log. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.ringcentral:get_extension_info': (_config) => `
function step_action_ringcentral_get_extension_info(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#ringcentral): Implement action.ringcentral:get_extension_info Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'ringcentral', operation: 'action.ringcentral:get_extension_info' });
  throw new Error('TODO[apps-script-backlog]: Implement action.ringcentral:get_extension_info. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.ringcentral:get_messages': (_config) => `
function step_action_ringcentral_get_messages(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#ringcentral): Implement action.ringcentral:get_messages Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'ringcentral', operation: 'action.ringcentral:get_messages' });
  throw new Error('TODO[apps-script-backlog]: Implement action.ringcentral:get_messages. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.ringcentral:make_call': (_config) => `
function step_action_ringcentral_make_call(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#ringcentral): Implement action.ringcentral:make_call Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'ringcentral', operation: 'action.ringcentral:make_call' });
  throw new Error('TODO[apps-script-backlog]: Implement action.ringcentral:make_call. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.ringcentral:send_sms': (_config) => `
function step_action_ringcentral_send_sms(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#ringcentral): Implement action.ringcentral:send_sms Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'ringcentral', operation: 'action.ringcentral:send_sms' });
  throw new Error('TODO[apps-script-backlog]: Implement action.ringcentral:send_sms. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.ringcentral:test_connection': (_config) => `
function step_action_ringcentral_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#ringcentral): Implement action.ringcentral:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'ringcentral', operation: 'action.ringcentral:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.ringcentral:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sageintacct:create_bill': (_config) => `
function step_action_sageintacct_create_bill(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sageintacct): Implement action.sageintacct:create_bill Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sageintacct', operation: 'action.sageintacct:create_bill' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sageintacct:create_bill. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sageintacct:create_customer': (_config) => `
function step_action_sageintacct_create_customer(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sageintacct): Implement action.sageintacct:create_customer Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sageintacct', operation: 'action.sageintacct:create_customer' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sageintacct:create_customer. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sageintacct:create_invoice': (_config) => `
function step_action_sageintacct_create_invoice(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sageintacct): Implement action.sageintacct:create_invoice Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sageintacct', operation: 'action.sageintacct:create_invoice' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sageintacct:create_invoice. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sageintacct:get_customers': (_config) => `
function step_action_sageintacct_get_customers(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sageintacct): Implement action.sageintacct:get_customers Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sageintacct', operation: 'action.sageintacct:get_customers' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sageintacct:get_customers. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sageintacct:get_gl_accounts': (_config) => `
function step_action_sageintacct_get_gl_accounts(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sageintacct): Implement action.sageintacct:get_gl_accounts Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sageintacct', operation: 'action.sageintacct:get_gl_accounts' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sageintacct:get_gl_accounts. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sageintacct:get_invoices': (_config) => `
function step_action_sageintacct_get_invoices(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sageintacct): Implement action.sageintacct:get_invoices Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sageintacct', operation: 'action.sageintacct:get_invoices' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sageintacct:get_invoices. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sageintacct:get_vendors': (_config) => `
function step_action_sageintacct_get_vendors(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sageintacct): Implement action.sageintacct:get_vendors Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sageintacct', operation: 'action.sageintacct:get_vendors' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sageintacct:get_vendors. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sageintacct:test_connection': (_config) => `
function step_action_sageintacct_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sageintacct): Implement action.sageintacct:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sageintacct', operation: 'action.sageintacct:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sageintacct:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.salesforce-enhanced:create_record': (_config) => `
function step_action_salesforce_enhanced_create_record(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#salesforce-enhanced): Implement action.salesforce-enhanced:create_record Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'salesforce-enhanced', operation: 'action.salesforce-enhanced:create_record' });
  throw new Error('TODO[apps-script-backlog]: Implement action.salesforce-enhanced:create_record. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.salesforce-enhanced:delete_record': (_config) => `
function step_action_salesforce_enhanced_delete_record(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#salesforce-enhanced): Implement action.salesforce-enhanced:delete_record Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'salesforce-enhanced', operation: 'action.salesforce-enhanced:delete_record' });
  throw new Error('TODO[apps-script-backlog]: Implement action.salesforce-enhanced:delete_record. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.salesforce-enhanced:execute_apex': (_config) => `
function step_action_salesforce_enhanced_execute_apex(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#salesforce-enhanced): Implement action.salesforce-enhanced:execute_apex Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'salesforce-enhanced', operation: 'action.salesforce-enhanced:execute_apex' });
  throw new Error('TODO[apps-script-backlog]: Implement action.salesforce-enhanced:execute_apex. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.salesforce-enhanced:get_record': (_config) => `
function step_action_salesforce_enhanced_get_record(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#salesforce-enhanced): Implement action.salesforce-enhanced:get_record Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'salesforce-enhanced', operation: 'action.salesforce-enhanced:get_record' });
  throw new Error('TODO[apps-script-backlog]: Implement action.salesforce-enhanced:get_record. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.salesforce-enhanced:query_records': (_config) => `
function step_action_salesforce_enhanced_query_records(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#salesforce-enhanced): Implement action.salesforce-enhanced:query_records Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'salesforce-enhanced', operation: 'action.salesforce-enhanced:query_records' });
  throw new Error('TODO[apps-script-backlog]: Implement action.salesforce-enhanced:query_records. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.salesforce-enhanced:test_connection': (_config) => `
function step_action_salesforce_enhanced_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#salesforce-enhanced): Implement action.salesforce-enhanced:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'salesforce-enhanced', operation: 'action.salesforce-enhanced:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.salesforce-enhanced:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.salesforce-enhanced:update_record': (_config) => `
function step_action_salesforce_enhanced_update_record(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#salesforce-enhanced): Implement action.salesforce-enhanced:update_record Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'salesforce-enhanced', operation: 'action.salesforce-enhanced:update_record' });
  throw new Error('TODO[apps-script-backlog]: Implement action.salesforce-enhanced:update_record. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.salesforce-enhanced:upsert_record': (_config) => `
function step_action_salesforce_enhanced_upsert_record(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#salesforce-enhanced): Implement action.salesforce-enhanced:upsert_record Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'salesforce-enhanced', operation: 'action.salesforce-enhanced:upsert_record' });
  throw new Error('TODO[apps-script-backlog]: Implement action.salesforce-enhanced:upsert_record. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.salesforce:create_record': (_config) => `
function step_action_salesforce_create_record(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#salesforce): Implement action.salesforce:create_record Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'salesforce', operation: 'action.salesforce:create_record' });
  throw new Error('TODO[apps-script-backlog]: Implement action.salesforce:create_record. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.salesforce:get_record': (_config) => `
function step_action_salesforce_get_record(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#salesforce): Implement action.salesforce:get_record Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'salesforce', operation: 'action.salesforce:get_record' });
  throw new Error('TODO[apps-script-backlog]: Implement action.salesforce:get_record. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.salesforce:query_records': (_config) => `
function step_action_salesforce_query_records(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#salesforce): Implement action.salesforce:query_records Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'salesforce', operation: 'action.salesforce:query_records' });
  throw new Error('TODO[apps-script-backlog]: Implement action.salesforce:query_records. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.salesforce:test_connection': (_config) => `
function step_action_salesforce_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#salesforce): Implement action.salesforce:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'salesforce', operation: 'action.salesforce:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.salesforce:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.salesforce:update_record': (_config) => `
function step_action_salesforce_update_record(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#salesforce): Implement action.salesforce:update_record Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'salesforce', operation: 'action.salesforce:update_record' });
  throw new Error('TODO[apps-script-backlog]: Implement action.salesforce:update_record. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sap-ariba:get_analytical_reporting': (_config) => `
function step_action_sap_ariba_get_analytical_reporting(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sap-ariba): Implement action.sap-ariba:get_analytical_reporting Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sap-ariba', operation: 'action.sap-ariba:get_analytical_reporting' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sap-ariba:get_analytical_reporting. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sap-ariba:get_contract': (_config) => `
function step_action_sap_ariba_get_contract(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sap-ariba): Implement action.sap-ariba:get_contract Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sap-ariba', operation: 'action.sap-ariba:get_contract' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sap-ariba:get_contract. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sap-ariba:get_contracts': (_config) => `
function step_action_sap_ariba_get_contracts(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sap-ariba): Implement action.sap-ariba:get_contracts Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sap-ariba', operation: 'action.sap-ariba:get_contracts' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sap-ariba:get_contracts. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sap-ariba:get_invoice': (_config) => `
function step_action_sap_ariba_get_invoice(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sap-ariba): Implement action.sap-ariba:get_invoice Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sap-ariba', operation: 'action.sap-ariba:get_invoice' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sap-ariba:get_invoice. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sap-ariba:get_invoices': (_config) => `
function step_action_sap_ariba_get_invoices(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sap-ariba): Implement action.sap-ariba:get_invoices Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sap-ariba', operation: 'action.sap-ariba:get_invoices' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sap-ariba:get_invoices. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sap-ariba:get_purchase_order': (_config) => `
function step_action_sap_ariba_get_purchase_order(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sap-ariba): Implement action.sap-ariba:get_purchase_order Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sap-ariba', operation: 'action.sap-ariba:get_purchase_order' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sap-ariba:get_purchase_order. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sap-ariba:get_purchase_orders': (_config) => `
function step_action_sap_ariba_get_purchase_orders(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sap-ariba): Implement action.sap-ariba:get_purchase_orders Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sap-ariba', operation: 'action.sap-ariba:get_purchase_orders' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sap-ariba:get_purchase_orders. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sap-ariba:get_requisition': (_config) => `
function step_action_sap_ariba_get_requisition(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sap-ariba): Implement action.sap-ariba:get_requisition Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sap-ariba', operation: 'action.sap-ariba:get_requisition' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sap-ariba:get_requisition. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sap-ariba:get_requisitions': (_config) => `
function step_action_sap_ariba_get_requisitions(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sap-ariba): Implement action.sap-ariba:get_requisitions Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sap-ariba', operation: 'action.sap-ariba:get_requisitions' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sap-ariba:get_requisitions. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sap-ariba:get_sourcing_project': (_config) => `
function step_action_sap_ariba_get_sourcing_project(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sap-ariba): Implement action.sap-ariba:get_sourcing_project Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sap-ariba', operation: 'action.sap-ariba:get_sourcing_project' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sap-ariba:get_sourcing_project. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sap-ariba:get_sourcing_projects': (_config) => `
function step_action_sap_ariba_get_sourcing_projects(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sap-ariba): Implement action.sap-ariba:get_sourcing_projects Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sap-ariba', operation: 'action.sap-ariba:get_sourcing_projects' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sap-ariba:get_sourcing_projects. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sap-ariba:get_supplier': (_config) => `
function step_action_sap_ariba_get_supplier(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sap-ariba): Implement action.sap-ariba:get_supplier Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sap-ariba', operation: 'action.sap-ariba:get_supplier' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sap-ariba:get_supplier. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sap-ariba:get_suppliers': (_config) => `
function step_action_sap_ariba_get_suppliers(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sap-ariba): Implement action.sap-ariba:get_suppliers Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sap-ariba', operation: 'action.sap-ariba:get_suppliers' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sap-ariba:get_suppliers. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sap-ariba:test_connection': (_config) => `
function step_action_sap_ariba_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sap-ariba): Implement action.sap-ariba:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sap-ariba', operation: 'action.sap-ariba:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sap-ariba:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sendgrid:create_contact': (_config) => `
function step_action_sendgrid_create_contact(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sendgrid): Implement action.sendgrid:create_contact Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sendgrid', operation: 'action.sendgrid:create_contact' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sendgrid:create_contact. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sendgrid:create_list': (_config) => `
function step_action_sendgrid_create_list(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sendgrid): Implement action.sendgrid:create_list Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sendgrid', operation: 'action.sendgrid:create_list' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sendgrid:create_list. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sendgrid:get_email_stats': (_config) => `
function step_action_sendgrid_get_email_stats(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sendgrid): Implement action.sendgrid:get_email_stats Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sendgrid', operation: 'action.sendgrid:get_email_stats' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sendgrid:get_email_stats. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sendgrid:get_lists': (_config) => `
function step_action_sendgrid_get_lists(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sendgrid): Implement action.sendgrid:get_lists Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sendgrid', operation: 'action.sendgrid:get_lists' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sendgrid:get_lists. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sendgrid:send_email': (_config) => `
function step_action_sendgrid_send_email(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sendgrid): Implement action.sendgrid:send_email Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sendgrid', operation: 'action.sendgrid:send_email' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sendgrid:send_email. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sendgrid:send_test_email': (_config) => `
function step_action_sendgrid_send_test_email(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sendgrid): Implement action.sendgrid:send_test_email Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sendgrid', operation: 'action.sendgrid:send_test_email' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sendgrid:send_test_email. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sendgrid:test_connection': (_config) => `
function step_action_sendgrid_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sendgrid): Implement action.sendgrid:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sendgrid', operation: 'action.sendgrid:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sendgrid:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sentry:create_project': (_config) => `
function step_action_sentry_create_project(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sentry): Implement action.sentry:create_project Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sentry', operation: 'action.sentry:create_project' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sentry:create_project. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sentry:create_release': (_config) => `
function step_action_sentry_create_release(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sentry): Implement action.sentry:create_release Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sentry', operation: 'action.sentry:create_release' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sentry:create_release. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sentry:delete_issue': (_config) => `
function step_action_sentry_delete_issue(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sentry): Implement action.sentry:delete_issue Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sentry', operation: 'action.sentry:delete_issue' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sentry:delete_issue. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sentry:finalize_release': (_config) => `
function step_action_sentry_finalize_release(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sentry): Implement action.sentry:finalize_release Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sentry', operation: 'action.sentry:finalize_release' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sentry:finalize_release. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sentry:get_event': (_config) => `
function step_action_sentry_get_event(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sentry): Implement action.sentry:get_event Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sentry', operation: 'action.sentry:get_event' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sentry:get_event. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sentry:get_events': (_config) => `
function step_action_sentry_get_events(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sentry): Implement action.sentry:get_events Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sentry', operation: 'action.sentry:get_events' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sentry:get_events. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sentry:get_issue': (_config) => `
function step_action_sentry_get_issue(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sentry): Implement action.sentry:get_issue Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sentry', operation: 'action.sentry:get_issue' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sentry:get_issue. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sentry:get_issues': (_config) => `
function step_action_sentry_get_issues(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sentry): Implement action.sentry:get_issues Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sentry', operation: 'action.sentry:get_issues' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sentry:get_issues. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sentry:get_organization': (_config) => `
function step_action_sentry_get_organization(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sentry): Implement action.sentry:get_organization Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sentry', operation: 'action.sentry:get_organization' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sentry:get_organization. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sentry:get_organizations': (_config) => `
function step_action_sentry_get_organizations(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sentry): Implement action.sentry:get_organizations Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sentry', operation: 'action.sentry:get_organizations' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sentry:get_organizations. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sentry:get_project': (_config) => `
function step_action_sentry_get_project(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sentry): Implement action.sentry:get_project Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sentry', operation: 'action.sentry:get_project' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sentry:get_project. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sentry:get_projects': (_config) => `
function step_action_sentry_get_projects(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sentry): Implement action.sentry:get_projects Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sentry', operation: 'action.sentry:get_projects' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sentry:get_projects. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sentry:get_releases': (_config) => `
function step_action_sentry_get_releases(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sentry): Implement action.sentry:get_releases Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sentry', operation: 'action.sentry:get_releases' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sentry:get_releases. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sentry:get_teams': (_config) => `
function step_action_sentry_get_teams(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sentry): Implement action.sentry:get_teams Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sentry', operation: 'action.sentry:get_teams' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sentry:get_teams. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sentry:test_connection': (_config) => `
function step_action_sentry_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sentry): Implement action.sentry:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sentry', operation: 'action.sentry:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sentry:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sentry:update_issue': (_config) => `
function step_action_sentry_update_issue(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sentry): Implement action.sentry:update_issue Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sentry', operation: 'action.sentry:update_issue' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sentry:update_issue. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sentry:update_project': (_config) => `
function step_action_sentry_update_project(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sentry): Implement action.sentry:update_project Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sentry', operation: 'action.sentry:update_project' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sentry:update_project. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.servicenow:create_change_request': (_config) => `
function step_action_servicenow_create_change_request(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#servicenow): Implement action.servicenow:create_change_request Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'servicenow', operation: 'action.servicenow:create_change_request' });
  throw new Error('TODO[apps-script-backlog]: Implement action.servicenow:create_change_request. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.servicenow:create_incident': (_config) => `
function step_action_servicenow_create_incident(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#servicenow): Implement action.servicenow:create_incident Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'servicenow', operation: 'action.servicenow:create_incident' });
  throw new Error('TODO[apps-script-backlog]: Implement action.servicenow:create_incident. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.servicenow:get_incidents': (_config) => `
function step_action_servicenow_get_incidents(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#servicenow): Implement action.servicenow:get_incidents Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'servicenow', operation: 'action.servicenow:get_incidents' });
  throw new Error('TODO[apps-script-backlog]: Implement action.servicenow:get_incidents. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.servicenow:get_users': (_config) => `
function step_action_servicenow_get_users(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#servicenow): Implement action.servicenow:get_users Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'servicenow', operation: 'action.servicenow:get_users' });
  throw new Error('TODO[apps-script-backlog]: Implement action.servicenow:get_users. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.servicenow:test_connection': (_config) => `
function step_action_servicenow_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#servicenow): Implement action.servicenow:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'servicenow', operation: 'action.servicenow:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.servicenow:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.servicenow:update_incident': (_config) => `
function step_action_servicenow_update_incident(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#servicenow): Implement action.servicenow:update_incident Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'servicenow', operation: 'action.servicenow:update_incident' });
  throw new Error('TODO[apps-script-backlog]: Implement action.servicenow:update_incident. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sharepoint:create_file': (_config) => `
function step_action_sharepoint_create_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sharepoint): Implement action.sharepoint:create_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sharepoint', operation: 'action.sharepoint:create_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sharepoint:create_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sharepoint:create_folder': (_config) => `
function step_action_sharepoint_create_folder(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sharepoint): Implement action.sharepoint:create_folder Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sharepoint', operation: 'action.sharepoint:create_folder' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sharepoint:create_folder. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sharepoint:create_list_item': (_config) => `
function step_action_sharepoint_create_list_item(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sharepoint): Implement action.sharepoint:create_list_item Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sharepoint', operation: 'action.sharepoint:create_list_item' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sharepoint:create_list_item. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sharepoint:delete_file': (_config) => `
function step_action_sharepoint_delete_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sharepoint): Implement action.sharepoint:delete_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sharepoint', operation: 'action.sharepoint:delete_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sharepoint:delete_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sharepoint:get_file': (_config) => `
function step_action_sharepoint_get_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sharepoint): Implement action.sharepoint:get_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sharepoint', operation: 'action.sharepoint:get_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sharepoint:get_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sharepoint:get_list_items': (_config) => `
function step_action_sharepoint_get_list_items(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sharepoint): Implement action.sharepoint:get_list_items Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sharepoint', operation: 'action.sharepoint:get_list_items' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sharepoint:get_list_items. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sharepoint:get_lists': (_config) => `
function step_action_sharepoint_get_lists(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sharepoint): Implement action.sharepoint:get_lists Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sharepoint', operation: 'action.sharepoint:get_lists' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sharepoint:get_lists. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sharepoint:get_sites': (_config) => `
function step_action_sharepoint_get_sites(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sharepoint): Implement action.sharepoint:get_sites Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sharepoint', operation: 'action.sharepoint:get_sites' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sharepoint:get_sites. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sharepoint:list_files': (_config) => `
function step_action_sharepoint_list_files(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sharepoint): Implement action.sharepoint:list_files Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sharepoint', operation: 'action.sharepoint:list_files' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sharepoint:list_files. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sharepoint:search_content': (_config) => `
function step_action_sharepoint_search_content(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sharepoint): Implement action.sharepoint:search_content Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sharepoint', operation: 'action.sharepoint:search_content' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sharepoint:search_content. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sharepoint:share_link': (_config) => `
function step_action_sharepoint_share_link(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sharepoint): Implement action.sharepoint:share_link Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sharepoint', operation: 'action.sharepoint:share_link' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sharepoint:share_link. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sharepoint:test_connection': (_config) => `
function step_action_sharepoint_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sharepoint): Implement action.sharepoint:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sharepoint', operation: 'action.sharepoint:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sharepoint:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sharepoint:update_file': (_config) => `
function step_action_sharepoint_update_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sharepoint): Implement action.sharepoint:update_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sharepoint', operation: 'action.sharepoint:update_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sharepoint:update_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sharepoint:update_list_item': (_config) => `
function step_action_sharepoint_update_list_item(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sharepoint): Implement action.sharepoint:update_list_item Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sharepoint', operation: 'action.sharepoint:update_list_item' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sharepoint:update_list_item. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.shopify-enhanced:adjust_inventory_level': (_config) => `
function step_action_shopify_enhanced_adjust_inventory_level(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#shopify-enhanced): Implement action.shopify-enhanced:adjust_inventory_level Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'shopify-enhanced', operation: 'action.shopify-enhanced:adjust_inventory_level' });
  throw new Error('TODO[apps-script-backlog]: Implement action.shopify-enhanced:adjust_inventory_level. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.shopify-enhanced:create_customer': (_config) => `
function step_action_shopify_enhanced_create_customer(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#shopify-enhanced): Implement action.shopify-enhanced:create_customer Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'shopify-enhanced', operation: 'action.shopify-enhanced:create_customer' });
  throw new Error('TODO[apps-script-backlog]: Implement action.shopify-enhanced:create_customer. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.shopify-enhanced:create_order': (_config) => `
function step_action_shopify_enhanced_create_order(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#shopify-enhanced): Implement action.shopify-enhanced:create_order Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'shopify-enhanced', operation: 'action.shopify-enhanced:create_order' });
  throw new Error('TODO[apps-script-backlog]: Implement action.shopify-enhanced:create_order. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.shopify-enhanced:create_product': (_config) => `
function step_action_shopify_enhanced_create_product(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#shopify-enhanced): Implement action.shopify-enhanced:create_product Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'shopify-enhanced', operation: 'action.shopify-enhanced:create_product' });
  throw new Error('TODO[apps-script-backlog]: Implement action.shopify-enhanced:create_product. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.shopify-enhanced:create_webhook': (_config) => `
function step_action_shopify_enhanced_create_webhook(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#shopify-enhanced): Implement action.shopify-enhanced:create_webhook Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'shopify-enhanced', operation: 'action.shopify-enhanced:create_webhook' });
  throw new Error('TODO[apps-script-backlog]: Implement action.shopify-enhanced:create_webhook. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.shopify-enhanced:get_customers': (_config) => `
function step_action_shopify_enhanced_get_customers(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#shopify-enhanced): Implement action.shopify-enhanced:get_customers Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'shopify-enhanced', operation: 'action.shopify-enhanced:get_customers' });
  throw new Error('TODO[apps-script-backlog]: Implement action.shopify-enhanced:get_customers. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.shopify-enhanced:get_inventory_levels': (_config) => `
function step_action_shopify_enhanced_get_inventory_levels(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#shopify-enhanced): Implement action.shopify-enhanced:get_inventory_levels Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'shopify-enhanced', operation: 'action.shopify-enhanced:get_inventory_levels' });
  throw new Error('TODO[apps-script-backlog]: Implement action.shopify-enhanced:get_inventory_levels. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.shopify-enhanced:get_orders': (_config) => `
function step_action_shopify_enhanced_get_orders(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#shopify-enhanced): Implement action.shopify-enhanced:get_orders Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'shopify-enhanced', operation: 'action.shopify-enhanced:get_orders' });
  throw new Error('TODO[apps-script-backlog]: Implement action.shopify-enhanced:get_orders. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.shopify-enhanced:get_products': (_config) => `
function step_action_shopify_enhanced_get_products(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#shopify-enhanced): Implement action.shopify-enhanced:get_products Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'shopify-enhanced', operation: 'action.shopify-enhanced:get_products' });
  throw new Error('TODO[apps-script-backlog]: Implement action.shopify-enhanced:get_products. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.shopify-enhanced:test_connection': (_config) => `
function step_action_shopify_enhanced_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#shopify-enhanced): Implement action.shopify-enhanced:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'shopify-enhanced', operation: 'action.shopify-enhanced:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.shopify-enhanced:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.shopify-enhanced:update_product': (_config) => `
function step_action_shopify_enhanced_update_product(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#shopify-enhanced): Implement action.shopify-enhanced:update_product Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'shopify-enhanced', operation: 'action.shopify-enhanced:update_product' });
  throw new Error('TODO[apps-script-backlog]: Implement action.shopify-enhanced:update_product. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.shopify:create_customer': (_config) => `
function step_action_shopify_create_customer(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#shopify): Implement action.shopify:create_customer Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'shopify', operation: 'action.shopify:create_customer' });
  throw new Error('TODO[apps-script-backlog]: Implement action.shopify:create_customer. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.shopify:create_order': (_config) => `
function step_action_shopify_create_order(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#shopify): Implement action.shopify:create_order Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'shopify', operation: 'action.shopify:create_order' });
  throw new Error('TODO[apps-script-backlog]: Implement action.shopify:create_order. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.shopify:create_product': (_config) => `
function step_action_shopify_create_product(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#shopify): Implement action.shopify:create_product Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'shopify', operation: 'action.shopify:create_product' });
  throw new Error('TODO[apps-script-backlog]: Implement action.shopify:create_product. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.shopify:fulfill_order': (_config) => `
function step_action_shopify_fulfill_order(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#shopify): Implement action.shopify:fulfill_order Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'shopify', operation: 'action.shopify:fulfill_order' });
  throw new Error('TODO[apps-script-backlog]: Implement action.shopify:fulfill_order. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.shopify:get_order': (_config) => `
function step_action_shopify_get_order(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#shopify): Implement action.shopify:get_order Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'shopify', operation: 'action.shopify:get_order' });
  throw new Error('TODO[apps-script-backlog]: Implement action.shopify:get_order. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.shopify:get_product': (_config) => `
function step_action_shopify_get_product(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#shopify): Implement action.shopify:get_product Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'shopify', operation: 'action.shopify:get_product' });
  throw new Error('TODO[apps-script-backlog]: Implement action.shopify:get_product. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.shopify:list_orders': (_config) => `
function step_action_shopify_list_orders(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#shopify): Implement action.shopify:list_orders Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'shopify', operation: 'action.shopify:list_orders' });
  throw new Error('TODO[apps-script-backlog]: Implement action.shopify:list_orders. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.shopify:list_products': (_config) => `
function step_action_shopify_list_products(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#shopify): Implement action.shopify:list_products Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'shopify', operation: 'action.shopify:list_products' });
  throw new Error('TODO[apps-script-backlog]: Implement action.shopify:list_products. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.shopify:test_connection': (_config) => `
function step_action_shopify_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#shopify): Implement action.shopify:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'shopify', operation: 'action.shopify:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.shopify:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.shopify:update_customer': (_config) => `
function step_action_shopify_update_customer(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#shopify): Implement action.shopify:update_customer Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'shopify', operation: 'action.shopify:update_customer' });
  throw new Error('TODO[apps-script-backlog]: Implement action.shopify:update_customer. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.shopify:update_inventory': (_config) => `
function step_action_shopify_update_inventory(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#shopify): Implement action.shopify:update_inventory Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'shopify', operation: 'action.shopify:update_inventory' });
  throw new Error('TODO[apps-script-backlog]: Implement action.shopify:update_inventory. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.shopify:update_order': (_config) => `
function step_action_shopify_update_order(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#shopify): Implement action.shopify:update_order Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'shopify', operation: 'action.shopify:update_order' });
  throw new Error('TODO[apps-script-backlog]: Implement action.shopify:update_order. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.shopify:update_product': (_config) => `
function step_action_shopify_update_product(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#shopify): Implement action.shopify:update_product Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'shopify', operation: 'action.shopify:update_product' });
  throw new Error('TODO[apps-script-backlog]: Implement action.shopify:update_product. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slab:create_post': (_config) => `
function step_action_slab_create_post(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slab): Implement action.slab:create_post Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slab', operation: 'action.slab:create_post' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slab:create_post. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slab:delete_post': (_config) => `
function step_action_slab_delete_post(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slab): Implement action.slab:delete_post Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slab', operation: 'action.slab:delete_post' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slab:delete_post. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slab:get_post': (_config) => `
function step_action_slab_get_post(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slab): Implement action.slab:get_post Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slab', operation: 'action.slab:get_post' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slab:get_post. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slab:get_topic': (_config) => `
function step_action_slab_get_topic(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slab): Implement action.slab:get_topic Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slab', operation: 'action.slab:get_topic' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slab:get_topic. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slab:list_topics': (_config) => `
function step_action_slab_list_topics(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slab): Implement action.slab:list_topics Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slab', operation: 'action.slab:list_topics' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slab:list_topics. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slab:search_posts': (_config) => `
function step_action_slab_search_posts(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slab): Implement action.slab:search_posts Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slab', operation: 'action.slab:search_posts' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slab:search_posts. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slab:test_connection': (_config) => `
function step_action_slab_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slab): Implement action.slab:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slab', operation: 'action.slab:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slab:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slab:update_post': (_config) => `
function step_action_slab_update_post(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slab): Implement action.slab:update_post Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slab', operation: 'action.slab:update_post' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slab:update_post. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slack-enhanced:add_reaction': (_config) => `
function step_action_slack_enhanced_add_reaction(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack-enhanced): Implement action.slack-enhanced:add_reaction Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack-enhanced', operation: 'action.slack-enhanced:add_reaction' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slack-enhanced:add_reaction. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slack-enhanced:archive_channel': (_config) => `
function step_action_slack_enhanced_archive_channel(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack-enhanced): Implement action.slack-enhanced:archive_channel Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack-enhanced', operation: 'action.slack-enhanced:archive_channel' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slack-enhanced:archive_channel. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slack-enhanced:create_channel': (_config) => `
function step_action_slack_enhanced_create_channel(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack-enhanced): Implement action.slack-enhanced:create_channel Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack-enhanced', operation: 'action.slack-enhanced:create_channel' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slack-enhanced:create_channel. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slack-enhanced:get_channel_history': (_config) => `
function step_action_slack_enhanced_get_channel_history(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack-enhanced): Implement action.slack-enhanced:get_channel_history Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack-enhanced', operation: 'action.slack-enhanced:get_channel_history' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slack-enhanced:get_channel_history. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slack-enhanced:get_user_info': (_config) => `
function step_action_slack_enhanced_get_user_info(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack-enhanced): Implement action.slack-enhanced:get_user_info Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack-enhanced', operation: 'action.slack-enhanced:get_user_info' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slack-enhanced:get_user_info. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slack-enhanced:invite_user_to_channel': (_config) => `
function step_action_slack_enhanced_invite_user_to_channel(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack-enhanced): Implement action.slack-enhanced:invite_user_to_channel Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack-enhanced', operation: 'action.slack-enhanced:invite_user_to_channel' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slack-enhanced:invite_user_to_channel. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slack-enhanced:list_channels': (_config) => `
function step_action_slack_enhanced_list_channels(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack-enhanced): Implement action.slack-enhanced:list_channels Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack-enhanced', operation: 'action.slack-enhanced:list_channels' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slack-enhanced:list_channels. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slack-enhanced:pin_message': (_config) => `
function step_action_slack_enhanced_pin_message(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack-enhanced): Implement action.slack-enhanced:pin_message Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack-enhanced', operation: 'action.slack-enhanced:pin_message' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slack-enhanced:pin_message. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slack-enhanced:schedule_message': (_config) => `
function step_action_slack_enhanced_schedule_message(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack-enhanced): Implement action.slack-enhanced:schedule_message Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack-enhanced', operation: 'action.slack-enhanced:schedule_message' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slack-enhanced:schedule_message. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slack-enhanced:send_direct_message': (_config) => `
function step_action_slack_enhanced_send_direct_message(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack-enhanced): Implement action.slack-enhanced:send_direct_message Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack-enhanced', operation: 'action.slack-enhanced:send_direct_message' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slack-enhanced:send_direct_message. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slack-enhanced:send_message': (_config) => `
function step_action_slack_enhanced_send_message(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack-enhanced): Implement action.slack-enhanced:send_message Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack-enhanced', operation: 'action.slack-enhanced:send_message' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slack-enhanced:send_message. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slack-enhanced:set_channel_topic': (_config) => `
function step_action_slack_enhanced_set_channel_topic(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack-enhanced): Implement action.slack-enhanced:set_channel_topic Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack-enhanced', operation: 'action.slack-enhanced:set_channel_topic' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slack-enhanced:set_channel_topic. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slack-enhanced:test_connection': (_config) => `
function step_action_slack_enhanced_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack-enhanced): Implement action.slack-enhanced:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack-enhanced', operation: 'action.slack-enhanced:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slack-enhanced:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slack-enhanced:upload_file': (_config) => `
function step_action_slack_enhanced_upload_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack-enhanced): Implement action.slack-enhanced:upload_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack-enhanced', operation: 'action.slack-enhanced:upload_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slack-enhanced:upload_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slack:add_reaction': (_config) => `
function step_action_slack_add_reaction(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack): Implement action.slack:add_reaction Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack', operation: 'action.slack:add_reaction' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slack:add_reaction. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slack:conversations_history': (_config) => `
function step_action_slack_conversations_history(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack): Implement action.slack:conversations_history Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack', operation: 'action.slack:conversations_history' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slack:conversations_history. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slack:create_channel': (_config) => `
function step_action_slack_create_channel(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack): Implement action.slack:create_channel Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack', operation: 'action.slack:create_channel' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slack:create_channel. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slack:get_channel_info': (_config) => `
function step_action_slack_get_channel_info(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack): Implement action.slack:get_channel_info Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack', operation: 'action.slack:get_channel_info' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slack:get_channel_info. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slack:get_user_info': (_config) => `
function step_action_slack_get_user_info(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack): Implement action.slack:get_user_info Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack', operation: 'action.slack:get_user_info' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slack:get_user_info. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slack:invite_to_channel': (_config) => `
function step_action_slack_invite_to_channel(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack): Implement action.slack:invite_to_channel Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack', operation: 'action.slack:invite_to_channel' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slack:invite_to_channel. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slack:list_channels': (_config) => `
function step_action_slack_list_channels(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack): Implement action.slack:list_channels Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack', operation: 'action.slack:list_channels' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slack:list_channels. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slack:list_files': (_config) => `
function step_action_slack_list_files(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack): Implement action.slack:list_files Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack', operation: 'action.slack:list_files' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slack:list_files. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slack:list_users': (_config) => `
function step_action_slack_list_users(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack): Implement action.slack:list_users Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack', operation: 'action.slack:list_users' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slack:list_users. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slack:schedule_message': (_config) => `
function step_action_slack_schedule_message(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack): Implement action.slack:schedule_message Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack', operation: 'action.slack:schedule_message' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slack:schedule_message. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slack:send_message': (_config) => `
function step_action_slack_send_message(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack): Implement action.slack:send_message Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack', operation: 'action.slack:send_message' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slack:send_message. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slack:test_connection': (_config) => `
function step_action_slack_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack): Implement action.slack:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack', operation: 'action.slack:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slack:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.slack:upload_file': (_config) => `
function step_action_slack_upload_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack): Implement action.slack:upload_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack', operation: 'action.slack:upload_file' });
  throw new Error('TODO[apps-script-backlog]: Implement action.slack:upload_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.smartsheet:add_columns': (_config) => `
function step_action_smartsheet_add_columns(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#smartsheet): Implement action.smartsheet:add_columns Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'smartsheet', operation: 'action.smartsheet:add_columns' });
  throw new Error('TODO[apps-script-backlog]: Implement action.smartsheet:add_columns. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.smartsheet:add_rows': (_config) => `
function step_action_smartsheet_add_rows(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#smartsheet): Implement action.smartsheet:add_rows Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'smartsheet', operation: 'action.smartsheet:add_rows' });
  throw new Error('TODO[apps-script-backlog]: Implement action.smartsheet:add_rows. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.smartsheet:create_sheet': (_config) => `
function step_action_smartsheet_create_sheet(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#smartsheet): Implement action.smartsheet:create_sheet Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'smartsheet', operation: 'action.smartsheet:create_sheet' });
  throw new Error('TODO[apps-script-backlog]: Implement action.smartsheet:create_sheet. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.smartsheet:create_workspace': (_config) => `
function step_action_smartsheet_create_workspace(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#smartsheet): Implement action.smartsheet:create_workspace Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'smartsheet', operation: 'action.smartsheet:create_workspace' });
  throw new Error('TODO[apps-script-backlog]: Implement action.smartsheet:create_workspace. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.smartsheet:delete_rows': (_config) => `
function step_action_smartsheet_delete_rows(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#smartsheet): Implement action.smartsheet:delete_rows Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'smartsheet', operation: 'action.smartsheet:delete_rows' });
  throw new Error('TODO[apps-script-backlog]: Implement action.smartsheet:delete_rows. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.smartsheet:get_report': (_config) => `
function step_action_smartsheet_get_report(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#smartsheet): Implement action.smartsheet:get_report Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'smartsheet', operation: 'action.smartsheet:get_report' });
  throw new Error('TODO[apps-script-backlog]: Implement action.smartsheet:get_report. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.smartsheet:get_reports': (_config) => `
function step_action_smartsheet_get_reports(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#smartsheet): Implement action.smartsheet:get_reports Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'smartsheet', operation: 'action.smartsheet:get_reports' });
  throw new Error('TODO[apps-script-backlog]: Implement action.smartsheet:get_reports. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.smartsheet:get_sheet': (_config) => `
function step_action_smartsheet_get_sheet(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#smartsheet): Implement action.smartsheet:get_sheet Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'smartsheet', operation: 'action.smartsheet:get_sheet' });
  throw new Error('TODO[apps-script-backlog]: Implement action.smartsheet:get_sheet. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.smartsheet:get_sheets': (_config) => `
function step_action_smartsheet_get_sheets(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#smartsheet): Implement action.smartsheet:get_sheets Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'smartsheet', operation: 'action.smartsheet:get_sheets' });
  throw new Error('TODO[apps-script-backlog]: Implement action.smartsheet:get_sheets. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.smartsheet:get_workspaces': (_config) => `
function step_action_smartsheet_get_workspaces(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#smartsheet): Implement action.smartsheet:get_workspaces Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'smartsheet', operation: 'action.smartsheet:get_workspaces' });
  throw new Error('TODO[apps-script-backlog]: Implement action.smartsheet:get_workspaces. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.smartsheet:send_sheet': (_config) => `
function step_action_smartsheet_send_sheet(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#smartsheet): Implement action.smartsheet:send_sheet Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'smartsheet', operation: 'action.smartsheet:send_sheet' });
  throw new Error('TODO[apps-script-backlog]: Implement action.smartsheet:send_sheet. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.smartsheet:test_connection': (_config) => `
function step_action_smartsheet_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#smartsheet): Implement action.smartsheet:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'smartsheet', operation: 'action.smartsheet:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.smartsheet:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.smartsheet:update_rows': (_config) => `
function step_action_smartsheet_update_rows(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#smartsheet): Implement action.smartsheet:update_rows Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'smartsheet', operation: 'action.smartsheet:update_rows' });
  throw new Error('TODO[apps-script-backlog]: Implement action.smartsheet:update_rows. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.smartsheet:update_sheet': (_config) => `
function step_action_smartsheet_update_sheet(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#smartsheet): Implement action.smartsheet:update_sheet Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'smartsheet', operation: 'action.smartsheet:update_sheet' });
  throw new Error('TODO[apps-script-backlog]: Implement action.smartsheet:update_sheet. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.snowflake:create_stage': (_config) => `
function step_action_snowflake_create_stage(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#snowflake): Implement action.snowflake:create_stage Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'snowflake', operation: 'action.snowflake:create_stage' });
  throw new Error('TODO[apps-script-backlog]: Implement action.snowflake:create_stage. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.snowflake:create_table': (_config) => `
function step_action_snowflake_create_table(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#snowflake): Implement action.snowflake:create_table Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'snowflake', operation: 'action.snowflake:create_table' });
  throw new Error('TODO[apps-script-backlog]: Implement action.snowflake:create_table. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.snowflake:create_user': (_config) => `
function step_action_snowflake_create_user(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#snowflake): Implement action.snowflake:create_user Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'snowflake', operation: 'action.snowflake:create_user' });
  throw new Error('TODO[apps-script-backlog]: Implement action.snowflake:create_user. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.snowflake:create_warehouse': (_config) => `
function step_action_snowflake_create_warehouse(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#snowflake): Implement action.snowflake:create_warehouse Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'snowflake', operation: 'action.snowflake:create_warehouse' });
  throw new Error('TODO[apps-script-backlog]: Implement action.snowflake:create_warehouse. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.snowflake:describe_table': (_config) => `
function step_action_snowflake_describe_table(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#snowflake): Implement action.snowflake:describe_table Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'snowflake', operation: 'action.snowflake:describe_table' });
  throw new Error('TODO[apps-script-backlog]: Implement action.snowflake:describe_table. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.snowflake:execute_query': (_config) => `
function step_action_snowflake_execute_query(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#snowflake): Implement action.snowflake:execute_query Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'snowflake', operation: 'action.snowflake:execute_query' });
  throw new Error('TODO[apps-script-backlog]: Implement action.snowflake:execute_query. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.snowflake:grant_role': (_config) => `
function step_action_snowflake_grant_role(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#snowflake): Implement action.snowflake:grant_role Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'snowflake', operation: 'action.snowflake:grant_role' });
  throw new Error('TODO[apps-script-backlog]: Implement action.snowflake:grant_role. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.snowflake:insert_data': (_config) => `
function step_action_snowflake_insert_data(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#snowflake): Implement action.snowflake:insert_data Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'snowflake', operation: 'action.snowflake:insert_data' });
  throw new Error('TODO[apps-script-backlog]: Implement action.snowflake:insert_data. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.snowflake:list_databases': (_config) => `
function step_action_snowflake_list_databases(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#snowflake): Implement action.snowflake:list_databases Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'snowflake', operation: 'action.snowflake:list_databases' });
  throw new Error('TODO[apps-script-backlog]: Implement action.snowflake:list_databases. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.snowflake:list_schemas': (_config) => `
function step_action_snowflake_list_schemas(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#snowflake): Implement action.snowflake:list_schemas Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'snowflake', operation: 'action.snowflake:list_schemas' });
  throw new Error('TODO[apps-script-backlog]: Implement action.snowflake:list_schemas. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.snowflake:list_tables': (_config) => `
function step_action_snowflake_list_tables(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#snowflake): Implement action.snowflake:list_tables Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'snowflake', operation: 'action.snowflake:list_tables' });
  throw new Error('TODO[apps-script-backlog]: Implement action.snowflake:list_tables. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.snowflake:list_warehouses': (_config) => `
function step_action_snowflake_list_warehouses(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#snowflake): Implement action.snowflake:list_warehouses Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'snowflake', operation: 'action.snowflake:list_warehouses' });
  throw new Error('TODO[apps-script-backlog]: Implement action.snowflake:list_warehouses. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.snowflake:load_data_from_stage': (_config) => `
function step_action_snowflake_load_data_from_stage(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#snowflake): Implement action.snowflake:load_data_from_stage Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'snowflake', operation: 'action.snowflake:load_data_from_stage' });
  throw new Error('TODO[apps-script-backlog]: Implement action.snowflake:load_data_from_stage. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.snowflake:test_connection': (_config) => `
function step_action_snowflake_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#snowflake): Implement action.snowflake:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'snowflake', operation: 'action.snowflake:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.snowflake:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sonarqube:create_project': (_config) => `
function step_action_sonarqube_create_project(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sonarqube): Implement action.sonarqube:create_project Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sonarqube', operation: 'action.sonarqube:create_project' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sonarqube:create_project. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sonarqube:get_issues': (_config) => `
function step_action_sonarqube_get_issues(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sonarqube): Implement action.sonarqube:get_issues Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sonarqube', operation: 'action.sonarqube:get_issues' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sonarqube:get_issues. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sonarqube:get_metrics': (_config) => `
function step_action_sonarqube_get_metrics(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sonarqube): Implement action.sonarqube:get_metrics Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sonarqube', operation: 'action.sonarqube:get_metrics' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sonarqube:get_metrics. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sonarqube:get_project_status': (_config) => `
function step_action_sonarqube_get_project_status(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sonarqube): Implement action.sonarqube:get_project_status Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sonarqube', operation: 'action.sonarqube:get_project_status' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sonarqube:get_project_status. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.sonarqube:test_connection': (_config) => `
function step_action_sonarqube_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sonarqube): Implement action.sonarqube:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sonarqube', operation: 'action.sonarqube:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.sonarqube:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.square:create_customer': (_config) => `
function step_action_square_create_customer(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#square): Implement action.square:create_customer Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'square', operation: 'action.square:create_customer' });
  throw new Error('TODO[apps-script-backlog]: Implement action.square:create_customer. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.square:create_order': (_config) => `
function step_action_square_create_order(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#square): Implement action.square:create_order Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'square', operation: 'action.square:create_order' });
  throw new Error('TODO[apps-script-backlog]: Implement action.square:create_order. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.square:create_payment': (_config) => `
function step_action_square_create_payment(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#square): Implement action.square:create_payment Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'square', operation: 'action.square:create_payment' });
  throw new Error('TODO[apps-script-backlog]: Implement action.square:create_payment. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.square:create_refund': (_config) => `
function step_action_square_create_refund(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#square): Implement action.square:create_refund Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'square', operation: 'action.square:create_refund' });
  throw new Error('TODO[apps-script-backlog]: Implement action.square:create_refund. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.square:get_customer': (_config) => `
function step_action_square_get_customer(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#square): Implement action.square:get_customer Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'square', operation: 'action.square:get_customer' });
  throw new Error('TODO[apps-script-backlog]: Implement action.square:get_customer. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.square:get_payment': (_config) => `
function step_action_square_get_payment(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#square): Implement action.square:get_payment Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'square', operation: 'action.square:get_payment' });
  throw new Error('TODO[apps-script-backlog]: Implement action.square:get_payment. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.square:list_payments': (_config) => `
function step_action_square_list_payments(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#square): Implement action.square:list_payments Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'square', operation: 'action.square:list_payments' });
  throw new Error('TODO[apps-script-backlog]: Implement action.square:list_payments. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.square:test_connection': (_config) => `
function step_action_square_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#square): Implement action.square:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'square', operation: 'action.square:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.square:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.stripe-enhanced:create_customer': (_config) => `
function step_action_stripe_enhanced_create_customer(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#stripe-enhanced): Implement action.stripe-enhanced:create_customer Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'stripe-enhanced', operation: 'action.stripe-enhanced:create_customer' });
  throw new Error('TODO[apps-script-backlog]: Implement action.stripe-enhanced:create_customer. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.stripe-enhanced:create_invoice': (_config) => `
function step_action_stripe_enhanced_create_invoice(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#stripe-enhanced): Implement action.stripe-enhanced:create_invoice Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'stripe-enhanced', operation: 'action.stripe-enhanced:create_invoice' });
  throw new Error('TODO[apps-script-backlog]: Implement action.stripe-enhanced:create_invoice. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.stripe-enhanced:create_payment_intent': (_config) => `
function step_action_stripe_enhanced_create_payment_intent(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#stripe-enhanced): Implement action.stripe-enhanced:create_payment_intent Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'stripe-enhanced', operation: 'action.stripe-enhanced:create_payment_intent' });
  throw new Error('TODO[apps-script-backlog]: Implement action.stripe-enhanced:create_payment_intent. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.stripe-enhanced:create_subscription': (_config) => `
function step_action_stripe_enhanced_create_subscription(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#stripe-enhanced): Implement action.stripe-enhanced:create_subscription Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'stripe-enhanced', operation: 'action.stripe-enhanced:create_subscription' });
  throw new Error('TODO[apps-script-backlog]: Implement action.stripe-enhanced:create_subscription. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.stripe-enhanced:test_connection': (_config) => `
function step_action_stripe_enhanced_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#stripe-enhanced): Implement action.stripe-enhanced:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'stripe-enhanced', operation: 'action.stripe-enhanced:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.stripe-enhanced:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.stripe:create_customer': (_config) => `
function step_action_stripe_create_customer(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#stripe): Implement action.stripe:create_customer Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'stripe', operation: 'action.stripe:create_customer' });
  throw new Error('TODO[apps-script-backlog]: Implement action.stripe:create_customer. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.stripe:create_payment_intent': (_config) => `
function step_action_stripe_create_payment_intent(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#stripe): Implement action.stripe:create_payment_intent Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'stripe', operation: 'action.stripe:create_payment_intent' });
  throw new Error('TODO[apps-script-backlog]: Implement action.stripe:create_payment_intent. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.stripe:create_refund': (_config) => `
function step_action_stripe_create_refund(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#stripe): Implement action.stripe:create_refund Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'stripe', operation: 'action.stripe:create_refund' });
  throw new Error('TODO[apps-script-backlog]: Implement action.stripe:create_refund. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.stripe:create_subscription': (_config) => `
function step_action_stripe_create_subscription(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#stripe): Implement action.stripe:create_subscription Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'stripe', operation: 'action.stripe:create_subscription' });
  throw new Error('TODO[apps-script-backlog]: Implement action.stripe:create_subscription. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.stripe:list_payment_intents': (_config) => `
function step_action_stripe_list_payment_intents(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#stripe): Implement action.stripe:list_payment_intents Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'stripe', operation: 'action.stripe:list_payment_intents' });
  throw new Error('TODO[apps-script-backlog]: Implement action.stripe:list_payment_intents. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.stripe:retrieve_customer': (_config) => `
function step_action_stripe_retrieve_customer(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#stripe): Implement action.stripe:retrieve_customer Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'stripe', operation: 'action.stripe:retrieve_customer' });
  throw new Error('TODO[apps-script-backlog]: Implement action.stripe:retrieve_customer. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.stripe:test_connection': (_config) => `
function step_action_stripe_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#stripe): Implement action.stripe:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'stripe', operation: 'action.stripe:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.stripe:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.stripe:update_subscription': (_config) => `
function step_action_stripe_update_subscription(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#stripe): Implement action.stripe:update_subscription Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'stripe', operation: 'action.stripe:update_subscription' });
  throw new Error('TODO[apps-script-backlog]: Implement action.stripe:update_subscription. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.successfactors:create_employee': (_config) => `
function step_action_successfactors_create_employee(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#successfactors): Implement action.successfactors:create_employee Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'successfactors', operation: 'action.successfactors:create_employee' });
  throw new Error('TODO[apps-script-backlog]: Implement action.successfactors:create_employee. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.successfactors:get_employee': (_config) => `
function step_action_successfactors_get_employee(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#successfactors): Implement action.successfactors:get_employee Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'successfactors', operation: 'action.successfactors:get_employee' });
  throw new Error('TODO[apps-script-backlog]: Implement action.successfactors:get_employee. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.successfactors:list_employees': (_config) => `
function step_action_successfactors_list_employees(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#successfactors): Implement action.successfactors:list_employees Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'successfactors', operation: 'action.successfactors:list_employees' });
  throw new Error('TODO[apps-script-backlog]: Implement action.successfactors:list_employees. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.successfactors:test_connection': (_config) => `
function step_action_successfactors_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#successfactors): Implement action.successfactors:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'successfactors', operation: 'action.successfactors:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.successfactors:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.successfactors:update_employee': (_config) => `
function step_action_successfactors_update_employee(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#successfactors): Implement action.successfactors:update_employee Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'successfactors', operation: 'action.successfactors:update_employee' });
  throw new Error('TODO[apps-script-backlog]: Implement action.successfactors:update_employee. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.surveymonkey:create_collector': (_config) => `
function step_action_surveymonkey_create_collector(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#surveymonkey): Implement action.surveymonkey:create_collector Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'surveymonkey', operation: 'action.surveymonkey:create_collector' });
  throw new Error('TODO[apps-script-backlog]: Implement action.surveymonkey:create_collector. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.surveymonkey:create_contact': (_config) => `
function step_action_surveymonkey_create_contact(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#surveymonkey): Implement action.surveymonkey:create_contact Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'surveymonkey', operation: 'action.surveymonkey:create_contact' });
  throw new Error('TODO[apps-script-backlog]: Implement action.surveymonkey:create_contact. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.surveymonkey:create_survey': (_config) => `
function step_action_surveymonkey_create_survey(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#surveymonkey): Implement action.surveymonkey:create_survey Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'surveymonkey', operation: 'action.surveymonkey:create_survey' });
  throw new Error('TODO[apps-script-backlog]: Implement action.surveymonkey:create_survey. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.surveymonkey:delete_survey': (_config) => `
function step_action_surveymonkey_delete_survey(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#surveymonkey): Implement action.surveymonkey:delete_survey Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'surveymonkey', operation: 'action.surveymonkey:delete_survey' });
  throw new Error('TODO[apps-script-backlog]: Implement action.surveymonkey:delete_survey. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.surveymonkey:get_collector': (_config) => `
function step_action_surveymonkey_get_collector(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#surveymonkey): Implement action.surveymonkey:get_collector Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'surveymonkey', operation: 'action.surveymonkey:get_collector' });
  throw new Error('TODO[apps-script-backlog]: Implement action.surveymonkey:get_collector. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.surveymonkey:get_contact': (_config) => `
function step_action_surveymonkey_get_contact(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#surveymonkey): Implement action.surveymonkey:get_contact Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'surveymonkey', operation: 'action.surveymonkey:get_contact' });
  throw new Error('TODO[apps-script-backlog]: Implement action.surveymonkey:get_contact. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.surveymonkey:get_response_details': (_config) => `
function step_action_surveymonkey_get_response_details(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#surveymonkey): Implement action.surveymonkey:get_response_details Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'surveymonkey', operation: 'action.surveymonkey:get_response_details' });
  throw new Error('TODO[apps-script-backlog]: Implement action.surveymonkey:get_response_details. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.surveymonkey:get_survey': (_config) => `
function step_action_surveymonkey_get_survey(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#surveymonkey): Implement action.surveymonkey:get_survey Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'surveymonkey', operation: 'action.surveymonkey:get_survey' });
  throw new Error('TODO[apps-script-backlog]: Implement action.surveymonkey:get_survey. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.surveymonkey:get_survey_responses': (_config) => `
function step_action_surveymonkey_get_survey_responses(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#surveymonkey): Implement action.surveymonkey:get_survey_responses Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'surveymonkey', operation: 'action.surveymonkey:get_survey_responses' });
  throw new Error('TODO[apps-script-backlog]: Implement action.surveymonkey:get_survey_responses. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.surveymonkey:list_collectors': (_config) => `
function step_action_surveymonkey_list_collectors(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#surveymonkey): Implement action.surveymonkey:list_collectors Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'surveymonkey', operation: 'action.surveymonkey:list_collectors' });
  throw new Error('TODO[apps-script-backlog]: Implement action.surveymonkey:list_collectors. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.surveymonkey:list_contacts': (_config) => `
function step_action_surveymonkey_list_contacts(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#surveymonkey): Implement action.surveymonkey:list_contacts Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'surveymonkey', operation: 'action.surveymonkey:list_contacts' });
  throw new Error('TODO[apps-script-backlog]: Implement action.surveymonkey:list_contacts. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.surveymonkey:list_surveys': (_config) => `
function step_action_surveymonkey_list_surveys(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#surveymonkey): Implement action.surveymonkey:list_surveys Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'surveymonkey', operation: 'action.surveymonkey:list_surveys' });
  throw new Error('TODO[apps-script-backlog]: Implement action.surveymonkey:list_surveys. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.surveymonkey:test_connection': (_config) => `
function step_action_surveymonkey_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#surveymonkey): Implement action.surveymonkey:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'surveymonkey', operation: 'action.surveymonkey:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.surveymonkey:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.surveymonkey:update_survey': (_config) => `
function step_action_surveymonkey_update_survey(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#surveymonkey): Implement action.surveymonkey:update_survey Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'surveymonkey', operation: 'action.surveymonkey:update_survey' });
  throw new Error('TODO[apps-script-backlog]: Implement action.surveymonkey:update_survey. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.tableau:create_project': (_config) => `
function step_action_tableau_create_project(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#tableau): Implement action.tableau:create_project Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'tableau', operation: 'action.tableau:create_project' });
  throw new Error('TODO[apps-script-backlog]: Implement action.tableau:create_project. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.tableau:get_datasource': (_config) => `
function step_action_tableau_get_datasource(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#tableau): Implement action.tableau:get_datasource Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'tableau', operation: 'action.tableau:get_datasource' });
  throw new Error('TODO[apps-script-backlog]: Implement action.tableau:get_datasource. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.tableau:get_datasources': (_config) => `
function step_action_tableau_get_datasources(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#tableau): Implement action.tableau:get_datasources Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'tableau', operation: 'action.tableau:get_datasources' });
  throw new Error('TODO[apps-script-backlog]: Implement action.tableau:get_datasources. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.tableau:get_projects': (_config) => `
function step_action_tableau_get_projects(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#tableau): Implement action.tableau:get_projects Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'tableau', operation: 'action.tableau:get_projects' });
  throw new Error('TODO[apps-script-backlog]: Implement action.tableau:get_projects. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.tableau:get_sites': (_config) => `
function step_action_tableau_get_sites(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#tableau): Implement action.tableau:get_sites Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'tableau', operation: 'action.tableau:get_sites' });
  throw new Error('TODO[apps-script-backlog]: Implement action.tableau:get_sites. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.tableau:get_users': (_config) => `
function step_action_tableau_get_users(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#tableau): Implement action.tableau:get_users Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'tableau', operation: 'action.tableau:get_users' });
  throw new Error('TODO[apps-script-backlog]: Implement action.tableau:get_users. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.tableau:get_view': (_config) => `
function step_action_tableau_get_view(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#tableau): Implement action.tableau:get_view Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'tableau', operation: 'action.tableau:get_view' });
  throw new Error('TODO[apps-script-backlog]: Implement action.tableau:get_view. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.tableau:get_views': (_config) => `
function step_action_tableau_get_views(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#tableau): Implement action.tableau:get_views Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'tableau', operation: 'action.tableau:get_views' });
  throw new Error('TODO[apps-script-backlog]: Implement action.tableau:get_views. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.tableau:get_workbook': (_config) => `
function step_action_tableau_get_workbook(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#tableau): Implement action.tableau:get_workbook Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'tableau', operation: 'action.tableau:get_workbook' });
  throw new Error('TODO[apps-script-backlog]: Implement action.tableau:get_workbook. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.tableau:get_workbooks': (_config) => `
function step_action_tableau_get_workbooks(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#tableau): Implement action.tableau:get_workbooks Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'tableau', operation: 'action.tableau:get_workbooks' });
  throw new Error('TODO[apps-script-backlog]: Implement action.tableau:get_workbooks. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.tableau:publish_workbook': (_config) => `
function step_action_tableau_publish_workbook(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#tableau): Implement action.tableau:publish_workbook Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'tableau', operation: 'action.tableau:publish_workbook' });
  throw new Error('TODO[apps-script-backlog]: Implement action.tableau:publish_workbook. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.tableau:query_view_data': (_config) => `
function step_action_tableau_query_view_data(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#tableau): Implement action.tableau:query_view_data Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'tableau', operation: 'action.tableau:query_view_data' });
  throw new Error('TODO[apps-script-backlog]: Implement action.tableau:query_view_data. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.tableau:refresh_extract': (_config) => `
function step_action_tableau_refresh_extract(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#tableau): Implement action.tableau:refresh_extract Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'tableau', operation: 'action.tableau:refresh_extract' });
  throw new Error('TODO[apps-script-backlog]: Implement action.tableau:refresh_extract. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.tableau:sign_in': (_config) => `
function step_action_tableau_sign_in(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#tableau): Implement action.tableau:sign_in Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'tableau', operation: 'action.tableau:sign_in' });
  throw new Error('TODO[apps-script-backlog]: Implement action.tableau:sign_in. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.tableau:test_connection': (_config) => `
function step_action_tableau_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#tableau): Implement action.tableau:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'tableau', operation: 'action.tableau:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.tableau:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.tableau:update_workbook': (_config) => `
function step_action_tableau_update_workbook(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#tableau): Implement action.tableau:update_workbook Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'tableau', operation: 'action.tableau:update_workbook' });
  throw new Error('TODO[apps-script-backlog]: Implement action.tableau:update_workbook. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.talkdesk:create_call': (_config) => `
function step_action_talkdesk_create_call(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#talkdesk): Implement action.talkdesk:create_call Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'talkdesk', operation: 'action.talkdesk:create_call' });
  throw new Error('TODO[apps-script-backlog]: Implement action.talkdesk:create_call. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.talkdesk:create_contact': (_config) => `
function step_action_talkdesk_create_contact(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#talkdesk): Implement action.talkdesk:create_contact Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'talkdesk', operation: 'action.talkdesk:create_contact' });
  throw new Error('TODO[apps-script-backlog]: Implement action.talkdesk:create_contact. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.talkdesk:create_ticket': (_config) => `
function step_action_talkdesk_create_ticket(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#talkdesk): Implement action.talkdesk:create_ticket Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'talkdesk', operation: 'action.talkdesk:create_ticket' });
  throw new Error('TODO[apps-script-backlog]: Implement action.talkdesk:create_ticket. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.talkdesk:get_agent': (_config) => `
function step_action_talkdesk_get_agent(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#talkdesk): Implement action.talkdesk:get_agent Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'talkdesk', operation: 'action.talkdesk:get_agent' });
  throw new Error('TODO[apps-script-backlog]: Implement action.talkdesk:get_agent. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.talkdesk:get_call': (_config) => `
function step_action_talkdesk_get_call(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#talkdesk): Implement action.talkdesk:get_call Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'talkdesk', operation: 'action.talkdesk:get_call' });
  throw new Error('TODO[apps-script-backlog]: Implement action.talkdesk:get_call. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.talkdesk:get_contact': (_config) => `
function step_action_talkdesk_get_contact(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#talkdesk): Implement action.talkdesk:get_contact Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'talkdesk', operation: 'action.talkdesk:get_contact' });
  throw new Error('TODO[apps-script-backlog]: Implement action.talkdesk:get_contact. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.talkdesk:get_ticket': (_config) => `
function step_action_talkdesk_get_ticket(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#talkdesk): Implement action.talkdesk:get_ticket Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'talkdesk', operation: 'action.talkdesk:get_ticket' });
  throw new Error('TODO[apps-script-backlog]: Implement action.talkdesk:get_ticket. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.talkdesk:list_agents': (_config) => `
function step_action_talkdesk_list_agents(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#talkdesk): Implement action.talkdesk:list_agents Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'talkdesk', operation: 'action.talkdesk:list_agents' });
  throw new Error('TODO[apps-script-backlog]: Implement action.talkdesk:list_agents. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.talkdesk:list_calls': (_config) => `
function step_action_talkdesk_list_calls(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#talkdesk): Implement action.talkdesk:list_calls Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'talkdesk', operation: 'action.talkdesk:list_calls' });
  throw new Error('TODO[apps-script-backlog]: Implement action.talkdesk:list_calls. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.talkdesk:list_contacts': (_config) => `
function step_action_talkdesk_list_contacts(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#talkdesk): Implement action.talkdesk:list_contacts Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'talkdesk', operation: 'action.talkdesk:list_contacts' });
  throw new Error('TODO[apps-script-backlog]: Implement action.talkdesk:list_contacts. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.talkdesk:list_tickets': (_config) => `
function step_action_talkdesk_list_tickets(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#talkdesk): Implement action.talkdesk:list_tickets Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'talkdesk', operation: 'action.talkdesk:list_tickets' });
  throw new Error('TODO[apps-script-backlog]: Implement action.talkdesk:list_tickets. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.talkdesk:test_connection': (_config) => `
function step_action_talkdesk_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#talkdesk): Implement action.talkdesk:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'talkdesk', operation: 'action.talkdesk:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.talkdesk:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.talkdesk:update_contact': (_config) => `
function step_action_talkdesk_update_contact(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#talkdesk): Implement action.talkdesk:update_contact Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'talkdesk', operation: 'action.talkdesk:update_contact' });
  throw new Error('TODO[apps-script-backlog]: Implement action.talkdesk:update_contact. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.talkdesk:update_ticket': (_config) => `
function step_action_talkdesk_update_ticket(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#talkdesk): Implement action.talkdesk:update_ticket Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'talkdesk', operation: 'action.talkdesk:update_ticket' });
  throw new Error('TODO[apps-script-backlog]: Implement action.talkdesk:update_ticket. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.teamwork:create_milestone': (_config) => `
function step_action_teamwork_create_milestone(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#teamwork): Implement action.teamwork:create_milestone Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'teamwork', operation: 'action.teamwork:create_milestone' });
  throw new Error('TODO[apps-script-backlog]: Implement action.teamwork:create_milestone. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.teamwork:create_project': (_config) => `
function step_action_teamwork_create_project(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#teamwork): Implement action.teamwork:create_project Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'teamwork', operation: 'action.teamwork:create_project' });
  throw new Error('TODO[apps-script-backlog]: Implement action.teamwork:create_project. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.teamwork:create_task': (_config) => `
function step_action_teamwork_create_task(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#teamwork): Implement action.teamwork:create_task Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'teamwork', operation: 'action.teamwork:create_task' });
  throw new Error('TODO[apps-script-backlog]: Implement action.teamwork:create_task. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.teamwork:create_time_entry': (_config) => `
function step_action_teamwork_create_time_entry(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#teamwork): Implement action.teamwork:create_time_entry Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'teamwork', operation: 'action.teamwork:create_time_entry' });
  throw new Error('TODO[apps-script-backlog]: Implement action.teamwork:create_time_entry. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.teamwork:get_project': (_config) => `
function step_action_teamwork_get_project(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#teamwork): Implement action.teamwork:get_project Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'teamwork', operation: 'action.teamwork:get_project' });
  throw new Error('TODO[apps-script-backlog]: Implement action.teamwork:get_project. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.teamwork:get_task': (_config) => `
function step_action_teamwork_get_task(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#teamwork): Implement action.teamwork:get_task Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'teamwork', operation: 'action.teamwork:get_task' });
  throw new Error('TODO[apps-script-backlog]: Implement action.teamwork:get_task. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.teamwork:get_time_entry': (_config) => `
function step_action_teamwork_get_time_entry(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#teamwork): Implement action.teamwork:get_time_entry Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'teamwork', operation: 'action.teamwork:get_time_entry' });
  throw new Error('TODO[apps-script-backlog]: Implement action.teamwork:get_time_entry. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.teamwork:list_milestones': (_config) => `
function step_action_teamwork_list_milestones(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#teamwork): Implement action.teamwork:list_milestones Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'teamwork', operation: 'action.teamwork:list_milestones' });
  throw new Error('TODO[apps-script-backlog]: Implement action.teamwork:list_milestones. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.teamwork:list_projects': (_config) => `
function step_action_teamwork_list_projects(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#teamwork): Implement action.teamwork:list_projects Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'teamwork', operation: 'action.teamwork:list_projects' });
  throw new Error('TODO[apps-script-backlog]: Implement action.teamwork:list_projects. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.teamwork:list_tasks': (_config) => `
function step_action_teamwork_list_tasks(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#teamwork): Implement action.teamwork:list_tasks Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'teamwork', operation: 'action.teamwork:list_tasks' });
  throw new Error('TODO[apps-script-backlog]: Implement action.teamwork:list_tasks. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.teamwork:list_time_entries': (_config) => `
function step_action_teamwork_list_time_entries(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#teamwork): Implement action.teamwork:list_time_entries Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'teamwork', operation: 'action.teamwork:list_time_entries' });
  throw new Error('TODO[apps-script-backlog]: Implement action.teamwork:list_time_entries. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.teamwork:test_connection': (_config) => `
function step_action_teamwork_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#teamwork): Implement action.teamwork:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'teamwork', operation: 'action.teamwork:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.teamwork:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.teamwork:update_project': (_config) => `
function step_action_teamwork_update_project(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#teamwork): Implement action.teamwork:update_project Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'teamwork', operation: 'action.teamwork:update_project' });
  throw new Error('TODO[apps-script-backlog]: Implement action.teamwork:update_project. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.teamwork:update_task': (_config) => `
function step_action_teamwork_update_task(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#teamwork): Implement action.teamwork:update_task Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'teamwork', operation: 'action.teamwork:update_task' });
  throw new Error('TODO[apps-script-backlog]: Implement action.teamwork:update_task. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.terraform-cloud:create_workspace': (_config) => `
function step_action_terraform_cloud_create_workspace(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#terraform-cloud): Implement action.terraform-cloud:create_workspace Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'terraform-cloud', operation: 'action.terraform-cloud:create_workspace' });
  throw new Error('TODO[apps-script-backlog]: Implement action.terraform-cloud:create_workspace. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.terraform-cloud:get_run_status': (_config) => `
function step_action_terraform_cloud_get_run_status(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#terraform-cloud): Implement action.terraform-cloud:get_run_status Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'terraform-cloud', operation: 'action.terraform-cloud:get_run_status' });
  throw new Error('TODO[apps-script-backlog]: Implement action.terraform-cloud:get_run_status. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.terraform-cloud:set_variables': (_config) => `
function step_action_terraform_cloud_set_variables(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#terraform-cloud): Implement action.terraform-cloud:set_variables Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'terraform-cloud', operation: 'action.terraform-cloud:set_variables' });
  throw new Error('TODO[apps-script-backlog]: Implement action.terraform-cloud:set_variables. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.terraform-cloud:test_connection': (_config) => `
function step_action_terraform_cloud_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#terraform-cloud): Implement action.terraform-cloud:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'terraform-cloud', operation: 'action.terraform-cloud:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.terraform-cloud:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.terraform-cloud:trigger_run': (_config) => `
function step_action_terraform_cloud_trigger_run(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#terraform-cloud): Implement action.terraform-cloud:trigger_run Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'terraform-cloud', operation: 'action.terraform-cloud:trigger_run' });
  throw new Error('TODO[apps-script-backlog]: Implement action.terraform-cloud:trigger_run. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.toggl:create_client': (_config) => `
function step_action_toggl_create_client(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#toggl): Implement action.toggl:create_client Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'toggl', operation: 'action.toggl:create_client' });
  throw new Error('TODO[apps-script-backlog]: Implement action.toggl:create_client. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.toggl:create_project': (_config) => `
function step_action_toggl_create_project(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#toggl): Implement action.toggl:create_project Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'toggl', operation: 'action.toggl:create_project' });
  throw new Error('TODO[apps-script-backlog]: Implement action.toggl:create_project. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.toggl:create_time_entry': (_config) => `
function step_action_toggl_create_time_entry(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#toggl): Implement action.toggl:create_time_entry Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'toggl', operation: 'action.toggl:create_time_entry' });
  throw new Error('TODO[apps-script-backlog]: Implement action.toggl:create_time_entry. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.toggl:delete_time_entry': (_config) => `
function step_action_toggl_delete_time_entry(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#toggl): Implement action.toggl:delete_time_entry Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'toggl', operation: 'action.toggl:delete_time_entry' });
  throw new Error('TODO[apps-script-backlog]: Implement action.toggl:delete_time_entry. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.toggl:get_current_time_entry': (_config) => `
function step_action_toggl_get_current_time_entry(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#toggl): Implement action.toggl:get_current_time_entry Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'toggl', operation: 'action.toggl:get_current_time_entry' });
  throw new Error('TODO[apps-script-backlog]: Implement action.toggl:get_current_time_entry. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.toggl:get_project': (_config) => `
function step_action_toggl_get_project(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#toggl): Implement action.toggl:get_project Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'toggl', operation: 'action.toggl:get_project' });
  throw new Error('TODO[apps-script-backlog]: Implement action.toggl:get_project. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.toggl:get_time_entry': (_config) => `
function step_action_toggl_get_time_entry(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#toggl): Implement action.toggl:get_time_entry Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'toggl', operation: 'action.toggl:get_time_entry' });
  throw new Error('TODO[apps-script-backlog]: Implement action.toggl:get_time_entry. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.toggl:get_workspace': (_config) => `
function step_action_toggl_get_workspace(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#toggl): Implement action.toggl:get_workspace Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'toggl', operation: 'action.toggl:get_workspace' });
  throw new Error('TODO[apps-script-backlog]: Implement action.toggl:get_workspace. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.toggl:list_clients': (_config) => `
function step_action_toggl_list_clients(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#toggl): Implement action.toggl:list_clients Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'toggl', operation: 'action.toggl:list_clients' });
  throw new Error('TODO[apps-script-backlog]: Implement action.toggl:list_clients. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.toggl:list_projects': (_config) => `
function step_action_toggl_list_projects(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#toggl): Implement action.toggl:list_projects Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'toggl', operation: 'action.toggl:list_projects' });
  throw new Error('TODO[apps-script-backlog]: Implement action.toggl:list_projects. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.toggl:list_time_entries': (_config) => `
function step_action_toggl_list_time_entries(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#toggl): Implement action.toggl:list_time_entries Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'toggl', operation: 'action.toggl:list_time_entries' });
  throw new Error('TODO[apps-script-backlog]: Implement action.toggl:list_time_entries. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.toggl:list_workspaces': (_config) => `
function step_action_toggl_list_workspaces(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#toggl): Implement action.toggl:list_workspaces Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'toggl', operation: 'action.toggl:list_workspaces' });
  throw new Error('TODO[apps-script-backlog]: Implement action.toggl:list_workspaces. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.toggl:start_time_entry': (_config) => `
function step_action_toggl_start_time_entry(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#toggl): Implement action.toggl:start_time_entry Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'toggl', operation: 'action.toggl:start_time_entry' });
  throw new Error('TODO[apps-script-backlog]: Implement action.toggl:start_time_entry. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.toggl:stop_time_entry': (_config) => `
function step_action_toggl_stop_time_entry(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#toggl): Implement action.toggl:stop_time_entry Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'toggl', operation: 'action.toggl:stop_time_entry' });
  throw new Error('TODO[apps-script-backlog]: Implement action.toggl:stop_time_entry. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.toggl:test_connection': (_config) => `
function step_action_toggl_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#toggl): Implement action.toggl:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'toggl', operation: 'action.toggl:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.toggl:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.toggl:update_project': (_config) => `
function step_action_toggl_update_project(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#toggl): Implement action.toggl:update_project Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'toggl', operation: 'action.toggl:update_project' });
  throw new Error('TODO[apps-script-backlog]: Implement action.toggl:update_project. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.toggl:update_time_entry': (_config) => `
function step_action_toggl_update_time_entry(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#toggl): Implement action.toggl:update_time_entry Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'toggl', operation: 'action.toggl:update_time_entry' });
  throw new Error('TODO[apps-script-backlog]: Implement action.toggl:update_time_entry. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.trello-enhanced:add_attachment': (_config) => `
function step_action_trello_enhanced_add_attachment(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#trello-enhanced): Implement action.trello-enhanced:add_attachment Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'trello-enhanced', operation: 'action.trello-enhanced:add_attachment' });
  throw new Error('TODO[apps-script-backlog]: Implement action.trello-enhanced:add_attachment. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.trello-enhanced:add_checklist_item': (_config) => `
function step_action_trello_enhanced_add_checklist_item(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#trello-enhanced): Implement action.trello-enhanced:add_checklist_item Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'trello-enhanced', operation: 'action.trello-enhanced:add_checklist_item' });
  throw new Error('TODO[apps-script-backlog]: Implement action.trello-enhanced:add_checklist_item. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.trello-enhanced:create_board': (_config) => `
function step_action_trello_enhanced_create_board(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#trello-enhanced): Implement action.trello-enhanced:create_board Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'trello-enhanced', operation: 'action.trello-enhanced:create_board' });
  throw new Error('TODO[apps-script-backlog]: Implement action.trello-enhanced:create_board. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.trello-enhanced:create_card': (_config) => `
function step_action_trello_enhanced_create_card(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#trello-enhanced): Implement action.trello-enhanced:create_card Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'trello-enhanced', operation: 'action.trello-enhanced:create_card' });
  throw new Error('TODO[apps-script-backlog]: Implement action.trello-enhanced:create_card. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.trello-enhanced:create_checklist': (_config) => `
function step_action_trello_enhanced_create_checklist(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#trello-enhanced): Implement action.trello-enhanced:create_checklist Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'trello-enhanced', operation: 'action.trello-enhanced:create_checklist' });
  throw new Error('TODO[apps-script-backlog]: Implement action.trello-enhanced:create_checklist. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.trello-enhanced:create_label': (_config) => `
function step_action_trello_enhanced_create_label(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#trello-enhanced): Implement action.trello-enhanced:create_label Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'trello-enhanced', operation: 'action.trello-enhanced:create_label' });
  throw new Error('TODO[apps-script-backlog]: Implement action.trello-enhanced:create_label. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.trello-enhanced:create_webhook': (_config) => `
function step_action_trello_enhanced_create_webhook(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#trello-enhanced): Implement action.trello-enhanced:create_webhook Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'trello-enhanced', operation: 'action.trello-enhanced:create_webhook' });
  throw new Error('TODO[apps-script-backlog]: Implement action.trello-enhanced:create_webhook. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.trello-enhanced:search_cards': (_config) => `
function step_action_trello_enhanced_search_cards(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#trello-enhanced): Implement action.trello-enhanced:search_cards Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'trello-enhanced', operation: 'action.trello-enhanced:search_cards' });
  throw new Error('TODO[apps-script-backlog]: Implement action.trello-enhanced:search_cards. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.trello-enhanced:test_connection': (_config) => `
function step_action_trello_enhanced_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#trello-enhanced): Implement action.trello-enhanced:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'trello-enhanced', operation: 'action.trello-enhanced:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.trello-enhanced:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.trello:add_checklist_item': (_config) => `
function step_action_trello_add_checklist_item(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#trello): Implement action.trello:add_checklist_item Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'trello', operation: 'action.trello:add_checklist_item' });
  throw new Error('TODO[apps-script-backlog]: Implement action.trello:add_checklist_item. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.trello:add_comment_to_card': (_config) => `
function step_action_trello_add_comment_to_card(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#trello): Implement action.trello:add_comment_to_card Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'trello', operation: 'action.trello:add_comment_to_card' });
  throw new Error('TODO[apps-script-backlog]: Implement action.trello:add_comment_to_card. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.trello:create_board': (_config) => `
function step_action_trello_create_board(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#trello): Implement action.trello:create_board Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'trello', operation: 'action.trello:create_board' });
  throw new Error('TODO[apps-script-backlog]: Implement action.trello:create_board. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.trello:create_card': (_config) => `
function step_action_trello_create_card(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#trello): Implement action.trello:create_card Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'trello', operation: 'action.trello:create_card' });
  throw new Error('TODO[apps-script-backlog]: Implement action.trello:create_card. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.trello:create_checklist': (_config) => `
function step_action_trello_create_checklist(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#trello): Implement action.trello:create_checklist Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'trello', operation: 'action.trello:create_checklist' });
  throw new Error('TODO[apps-script-backlog]: Implement action.trello:create_checklist. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.trello:create_list': (_config) => `
function step_action_trello_create_list(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#trello): Implement action.trello:create_list Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'trello', operation: 'action.trello:create_list' });
  throw new Error('TODO[apps-script-backlog]: Implement action.trello:create_list. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.trello:create_webhook': (_config) => `
function step_action_trello_create_webhook(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#trello): Implement action.trello:create_webhook Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'trello', operation: 'action.trello:create_webhook' });
  throw new Error('TODO[apps-script-backlog]: Implement action.trello:create_webhook. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.trello:get_board': (_config) => `
function step_action_trello_get_board(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#trello): Implement action.trello:get_board Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'trello', operation: 'action.trello:get_board' });
  throw new Error('TODO[apps-script-backlog]: Implement action.trello:get_board. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.trello:get_card': (_config) => `
function step_action_trello_get_card(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#trello): Implement action.trello:get_card Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'trello', operation: 'action.trello:get_card' });
  throw new Error('TODO[apps-script-backlog]: Implement action.trello:get_card. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.trello:get_list': (_config) => `
function step_action_trello_get_list(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#trello): Implement action.trello:get_list Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'trello', operation: 'action.trello:get_list' });
  throw new Error('TODO[apps-script-backlog]: Implement action.trello:get_list. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.trello:test_connection': (_config) => `
function step_action_trello_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#trello): Implement action.trello:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'trello', operation: 'action.trello:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.trello:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.trello:update_board': (_config) => `
function step_action_trello_update_board(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#trello): Implement action.trello:update_board Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'trello', operation: 'action.trello:update_board' });
  throw new Error('TODO[apps-script-backlog]: Implement action.trello:update_board. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.trello:update_card': (_config) => `
function step_action_trello_update_card(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#trello): Implement action.trello:update_card Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'trello', operation: 'action.trello:update_card' });
  throw new Error('TODO[apps-script-backlog]: Implement action.trello:update_card. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.trello:update_list': (_config) => `
function step_action_trello_update_list(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#trello): Implement action.trello:update_list Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'trello', operation: 'action.trello:update_list' });
  throw new Error('TODO[apps-script-backlog]: Implement action.trello:update_list. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.twilio:buy_phone_number': (_config) => `
function step_action_twilio_buy_phone_number(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#twilio): Implement action.twilio:buy_phone_number Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'twilio', operation: 'action.twilio:buy_phone_number' });
  throw new Error('TODO[apps-script-backlog]: Implement action.twilio:buy_phone_number. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.twilio:get_call': (_config) => `
function step_action_twilio_get_call(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#twilio): Implement action.twilio:get_call Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'twilio', operation: 'action.twilio:get_call' });
  throw new Error('TODO[apps-script-backlog]: Implement action.twilio:get_call. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.twilio:get_message': (_config) => `
function step_action_twilio_get_message(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#twilio): Implement action.twilio:get_message Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'twilio', operation: 'action.twilio:get_message' });
  throw new Error('TODO[apps-script-backlog]: Implement action.twilio:get_message. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.twilio:list_calls': (_config) => `
function step_action_twilio_list_calls(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#twilio): Implement action.twilio:list_calls Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'twilio', operation: 'action.twilio:list_calls' });
  throw new Error('TODO[apps-script-backlog]: Implement action.twilio:list_calls. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.twilio:list_messages': (_config) => `
function step_action_twilio_list_messages(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#twilio): Implement action.twilio:list_messages Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'twilio', operation: 'action.twilio:list_messages' });
  throw new Error('TODO[apps-script-backlog]: Implement action.twilio:list_messages. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.twilio:list_phone_numbers': (_config) => `
function step_action_twilio_list_phone_numbers(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#twilio): Implement action.twilio:list_phone_numbers Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'twilio', operation: 'action.twilio:list_phone_numbers' });
  throw new Error('TODO[apps-script-backlog]: Implement action.twilio:list_phone_numbers. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.twilio:make_call': (_config) => `
function step_action_twilio_make_call(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#twilio): Implement action.twilio:make_call Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'twilio', operation: 'action.twilio:make_call' });
  throw new Error('TODO[apps-script-backlog]: Implement action.twilio:make_call. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.twilio:send_mms': (_config) => `
function step_action_twilio_send_mms(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#twilio): Implement action.twilio:send_mms Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'twilio', operation: 'action.twilio:send_mms' });
  throw new Error('TODO[apps-script-backlog]: Implement action.twilio:send_mms. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.twilio:send_sms': (_config) => `
function step_action_twilio_send_sms(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#twilio): Implement action.twilio:send_sms Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'twilio', operation: 'action.twilio:send_sms' });
  throw new Error('TODO[apps-script-backlog]: Implement action.twilio:send_sms. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.twilio:test_connection': (_config) => `
function step_action_twilio_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#twilio): Implement action.twilio:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'twilio', operation: 'action.twilio:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.twilio:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.twilio:update_call': (_config) => `
function step_action_twilio_update_call(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#twilio): Implement action.twilio:update_call Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'twilio', operation: 'action.twilio:update_call' });
  throw new Error('TODO[apps-script-backlog]: Implement action.twilio:update_call. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.victorops:ack_incident': (_config) => `
function step_action_victorops_ack_incident(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#victorops): Implement action.victorops:ack_incident Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'victorops', operation: 'action.victorops:ack_incident' });
  throw new Error('TODO[apps-script-backlog]: Implement action.victorops:ack_incident. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.victorops:create_incident': (_config) => `
function step_action_victorops_create_incident(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#victorops): Implement action.victorops:create_incident Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'victorops', operation: 'action.victorops:create_incident' });
  throw new Error('TODO[apps-script-backlog]: Implement action.victorops:create_incident. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.victorops:create_maintenance': (_config) => `
function step_action_victorops_create_maintenance(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#victorops): Implement action.victorops:create_maintenance Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'victorops', operation: 'action.victorops:create_maintenance' });
  throw new Error('TODO[apps-script-backlog]: Implement action.victorops:create_maintenance. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.victorops:get_incident': (_config) => `
function step_action_victorops_get_incident(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#victorops): Implement action.victorops:get_incident Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'victorops', operation: 'action.victorops:get_incident' });
  throw new Error('TODO[apps-script-backlog]: Implement action.victorops:get_incident. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.victorops:get_incidents': (_config) => `
function step_action_victorops_get_incidents(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#victorops): Implement action.victorops:get_incidents Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'victorops', operation: 'action.victorops:get_incidents' });
  throw new Error('TODO[apps-script-backlog]: Implement action.victorops:get_incidents. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.victorops:get_on_call': (_config) => `
function step_action_victorops_get_on_call(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#victorops): Implement action.victorops:get_on_call Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'victorops', operation: 'action.victorops:get_on_call' });
  throw new Error('TODO[apps-script-backlog]: Implement action.victorops:get_on_call. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.victorops:get_team': (_config) => `
function step_action_victorops_get_team(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#victorops): Implement action.victorops:get_team Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'victorops', operation: 'action.victorops:get_team' });
  throw new Error('TODO[apps-script-backlog]: Implement action.victorops:get_team. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.victorops:get_teams': (_config) => `
function step_action_victorops_get_teams(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#victorops): Implement action.victorops:get_teams Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'victorops', operation: 'action.victorops:get_teams' });
  throw new Error('TODO[apps-script-backlog]: Implement action.victorops:get_teams. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.victorops:get_user': (_config) => `
function step_action_victorops_get_user(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#victorops): Implement action.victorops:get_user Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'victorops', operation: 'action.victorops:get_user' });
  throw new Error('TODO[apps-script-backlog]: Implement action.victorops:get_user. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.victorops:get_users': (_config) => `
function step_action_victorops_get_users(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#victorops): Implement action.victorops:get_users Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'victorops', operation: 'action.victorops:get_users' });
  throw new Error('TODO[apps-script-backlog]: Implement action.victorops:get_users. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.victorops:resolve_incident': (_config) => `
function step_action_victorops_resolve_incident(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#victorops): Implement action.victorops:resolve_incident Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'victorops', operation: 'action.victorops:resolve_incident' });
  throw new Error('TODO[apps-script-backlog]: Implement action.victorops:resolve_incident. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.victorops:test_connection': (_config) => `
function step_action_victorops_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#victorops): Implement action.victorops:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'victorops', operation: 'action.victorops:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.victorops:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.webex:create_meeting': (_config) => `
function step_action_webex_create_meeting(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#webex): Implement action.webex:create_meeting Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'webex', operation: 'action.webex:create_meeting' });
  throw new Error('TODO[apps-script-backlog]: Implement action.webex:create_meeting. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.webex:create_room': (_config) => `
function step_action_webex_create_room(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#webex): Implement action.webex:create_room Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'webex', operation: 'action.webex:create_room' });
  throw new Error('TODO[apps-script-backlog]: Implement action.webex:create_room. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.webex:get_meeting': (_config) => `
function step_action_webex_get_meeting(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#webex): Implement action.webex:get_meeting Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'webex', operation: 'action.webex:get_meeting' });
  throw new Error('TODO[apps-script-backlog]: Implement action.webex:get_meeting. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.webex:get_message': (_config) => `
function step_action_webex_get_message(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#webex): Implement action.webex:get_message Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'webex', operation: 'action.webex:get_message' });
  throw new Error('TODO[apps-script-backlog]: Implement action.webex:get_message. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.webex:get_room': (_config) => `
function step_action_webex_get_room(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#webex): Implement action.webex:get_room Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'webex', operation: 'action.webex:get_room' });
  throw new Error('TODO[apps-script-backlog]: Implement action.webex:get_room. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.webex:list_meetings': (_config) => `
function step_action_webex_list_meetings(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#webex): Implement action.webex:list_meetings Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'webex', operation: 'action.webex:list_meetings' });
  throw new Error('TODO[apps-script-backlog]: Implement action.webex:list_meetings. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.webex:list_messages': (_config) => `
function step_action_webex_list_messages(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#webex): Implement action.webex:list_messages Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'webex', operation: 'action.webex:list_messages' });
  throw new Error('TODO[apps-script-backlog]: Implement action.webex:list_messages. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.webex:list_rooms': (_config) => `
function step_action_webex_list_rooms(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#webex): Implement action.webex:list_rooms Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'webex', operation: 'action.webex:list_rooms' });
  throw new Error('TODO[apps-script-backlog]: Implement action.webex:list_rooms. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.webex:send_message': (_config) => `
function step_action_webex_send_message(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#webex): Implement action.webex:send_message Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'webex', operation: 'action.webex:send_message' });
  throw new Error('TODO[apps-script-backlog]: Implement action.webex:send_message. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.webex:test_connection': (_config) => `
function step_action_webex_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#webex): Implement action.webex:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'webex', operation: 'action.webex:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.webex:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.webflow:create_collection_item': (_config) => `
function step_action_webflow_create_collection_item(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#webflow): Implement action.webflow:create_collection_item Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'webflow', operation: 'action.webflow:create_collection_item' });
  throw new Error('TODO[apps-script-backlog]: Implement action.webflow:create_collection_item. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.webflow:create_webhook': (_config) => `
function step_action_webflow_create_webhook(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#webflow): Implement action.webflow:create_webhook Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'webflow', operation: 'action.webflow:create_webhook' });
  throw new Error('TODO[apps-script-backlog]: Implement action.webflow:create_webhook. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.webflow:delete_collection_item': (_config) => `
function step_action_webflow_delete_collection_item(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#webflow): Implement action.webflow:delete_collection_item Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'webflow', operation: 'action.webflow:delete_collection_item' });
  throw new Error('TODO[apps-script-backlog]: Implement action.webflow:delete_collection_item. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.webflow:delete_webhook': (_config) => `
function step_action_webflow_delete_webhook(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#webflow): Implement action.webflow:delete_webhook Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'webflow', operation: 'action.webflow:delete_webhook' });
  throw new Error('TODO[apps-script-backlog]: Implement action.webflow:delete_webhook. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.webflow:get_collection': (_config) => `
function step_action_webflow_get_collection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#webflow): Implement action.webflow:get_collection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'webflow', operation: 'action.webflow:get_collection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.webflow:get_collection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.webflow:get_collection_item': (_config) => `
function step_action_webflow_get_collection_item(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#webflow): Implement action.webflow:get_collection_item Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'webflow', operation: 'action.webflow:get_collection_item' });
  throw new Error('TODO[apps-script-backlog]: Implement action.webflow:get_collection_item. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.webflow:get_site': (_config) => `
function step_action_webflow_get_site(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#webflow): Implement action.webflow:get_site Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'webflow', operation: 'action.webflow:get_site' });
  throw new Error('TODO[apps-script-backlog]: Implement action.webflow:get_site. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.webflow:list_collection_items': (_config) => `
function step_action_webflow_list_collection_items(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#webflow): Implement action.webflow:list_collection_items Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'webflow', operation: 'action.webflow:list_collection_items' });
  throw new Error('TODO[apps-script-backlog]: Implement action.webflow:list_collection_items. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.webflow:list_collections': (_config) => `
function step_action_webflow_list_collections(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#webflow): Implement action.webflow:list_collections Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'webflow', operation: 'action.webflow:list_collections' });
  throw new Error('TODO[apps-script-backlog]: Implement action.webflow:list_collections. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.webflow:list_sites': (_config) => `
function step_action_webflow_list_sites(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#webflow): Implement action.webflow:list_sites Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'webflow', operation: 'action.webflow:list_sites' });
  throw new Error('TODO[apps-script-backlog]: Implement action.webflow:list_sites. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.webflow:list_webhooks': (_config) => `
function step_action_webflow_list_webhooks(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#webflow): Implement action.webflow:list_webhooks Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'webflow', operation: 'action.webflow:list_webhooks' });
  throw new Error('TODO[apps-script-backlog]: Implement action.webflow:list_webhooks. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.webflow:publish_site': (_config) => `
function step_action_webflow_publish_site(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#webflow): Implement action.webflow:publish_site Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'webflow', operation: 'action.webflow:publish_site' });
  throw new Error('TODO[apps-script-backlog]: Implement action.webflow:publish_site. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.webflow:test_connection': (_config) => `
function step_action_webflow_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#webflow): Implement action.webflow:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'webflow', operation: 'action.webflow:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.webflow:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.webflow:update_collection_item': (_config) => `
function step_action_webflow_update_collection_item(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#webflow): Implement action.webflow:update_collection_item Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'webflow', operation: 'action.webflow:update_collection_item' });
  throw new Error('TODO[apps-script-backlog]: Implement action.webflow:update_collection_item. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.woocommerce:create_order': (_config) => `
function step_action_woocommerce_create_order(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#woocommerce): Implement action.woocommerce:create_order Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'woocommerce', operation: 'action.woocommerce:create_order' });
  throw new Error('TODO[apps-script-backlog]: Implement action.woocommerce:create_order. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.woocommerce:create_product': (_config) => `
function step_action_woocommerce_create_product(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#woocommerce): Implement action.woocommerce:create_product Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'woocommerce', operation: 'action.woocommerce:create_product' });
  throw new Error('TODO[apps-script-backlog]: Implement action.woocommerce:create_product. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.woocommerce:get_order': (_config) => `
function step_action_woocommerce_get_order(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#woocommerce): Implement action.woocommerce:get_order Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'woocommerce', operation: 'action.woocommerce:get_order' });
  throw new Error('TODO[apps-script-backlog]: Implement action.woocommerce:get_order. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.woocommerce:get_product': (_config) => `
function step_action_woocommerce_get_product(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#woocommerce): Implement action.woocommerce:get_product Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'woocommerce', operation: 'action.woocommerce:get_product' });
  throw new Error('TODO[apps-script-backlog]: Implement action.woocommerce:get_product. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.woocommerce:list_products': (_config) => `
function step_action_woocommerce_list_products(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#woocommerce): Implement action.woocommerce:list_products Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'woocommerce', operation: 'action.woocommerce:list_products' });
  throw new Error('TODO[apps-script-backlog]: Implement action.woocommerce:list_products. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.woocommerce:test_connection': (_config) => `
function step_action_woocommerce_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#woocommerce): Implement action.woocommerce:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'woocommerce', operation: 'action.woocommerce:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.woocommerce:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.woocommerce:update_order': (_config) => `
function step_action_woocommerce_update_order(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#woocommerce): Implement action.woocommerce:update_order Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'woocommerce', operation: 'action.woocommerce:update_order' });
  throw new Error('TODO[apps-script-backlog]: Implement action.woocommerce:update_order. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.woocommerce:update_product': (_config) => `
function step_action_woocommerce_update_product(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#woocommerce): Implement action.woocommerce:update_product Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'woocommerce', operation: 'action.woocommerce:update_product' });
  throw new Error('TODO[apps-script-backlog]: Implement action.woocommerce:update_product. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.workday:approve_time_off_request': (_config) => `
function step_action_workday_approve_time_off_request(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workday): Implement action.workday:approve_time_off_request Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workday', operation: 'action.workday:approve_time_off_request' });
  throw new Error('TODO[apps-script-backlog]: Implement action.workday:approve_time_off_request. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.workday:create_time_off_request': (_config) => `
function step_action_workday_create_time_off_request(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workday): Implement action.workday:create_time_off_request Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workday', operation: 'action.workday:create_time_off_request' });
  throw new Error('TODO[apps-script-backlog]: Implement action.workday:create_time_off_request. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.workday:create_worker': (_config) => `
function step_action_workday_create_worker(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workday): Implement action.workday:create_worker Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workday', operation: 'action.workday:create_worker' });
  throw new Error('TODO[apps-script-backlog]: Implement action.workday:create_worker. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.workday:deny_time_off_request': (_config) => `
function step_action_workday_deny_time_off_request(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workday): Implement action.workday:deny_time_off_request Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workday', operation: 'action.workday:deny_time_off_request' });
  throw new Error('TODO[apps-script-backlog]: Implement action.workday:deny_time_off_request. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.workday:get_compensation_data': (_config) => `
function step_action_workday_get_compensation_data(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workday): Implement action.workday:get_compensation_data Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workday', operation: 'action.workday:get_compensation_data' });
  throw new Error('TODO[apps-script-backlog]: Implement action.workday:get_compensation_data. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.workday:get_organization_structure': (_config) => `
function step_action_workday_get_organization_structure(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workday): Implement action.workday:get_organization_structure Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workday', operation: 'action.workday:get_organization_structure' });
  throw new Error('TODO[apps-script-backlog]: Implement action.workday:get_organization_structure. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.workday:get_time_off_request': (_config) => `
function step_action_workday_get_time_off_request(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workday): Implement action.workday:get_time_off_request Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workday', operation: 'action.workday:get_time_off_request' });
  throw new Error('TODO[apps-script-backlog]: Implement action.workday:get_time_off_request. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.workday:get_worker': (_config) => `
function step_action_workday_get_worker(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workday): Implement action.workday:get_worker Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workday', operation: 'action.workday:get_worker' });
  throw new Error('TODO[apps-script-backlog]: Implement action.workday:get_worker. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.workday:search_workers': (_config) => `
function step_action_workday_search_workers(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workday): Implement action.workday:search_workers Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workday', operation: 'action.workday:search_workers' });
  throw new Error('TODO[apps-script-backlog]: Implement action.workday:search_workers. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.workday:terminate_worker': (_config) => `
function step_action_workday_terminate_worker(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workday): Implement action.workday:terminate_worker Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workday', operation: 'action.workday:terminate_worker' });
  throw new Error('TODO[apps-script-backlog]: Implement action.workday:terminate_worker. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.workday:test_connection': (_config) => `
function step_action_workday_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workday): Implement action.workday:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workday', operation: 'action.workday:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.workday:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.workday:update_compensation': (_config) => `
function step_action_workday_update_compensation(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workday): Implement action.workday:update_compensation Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workday', operation: 'action.workday:update_compensation' });
  throw new Error('TODO[apps-script-backlog]: Implement action.workday:update_compensation. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.workday:update_worker': (_config) => `
function step_action_workday_update_worker(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workday): Implement action.workday:update_worker Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workday', operation: 'action.workday:update_worker' });
  throw new Error('TODO[apps-script-backlog]: Implement action.workday:update_worker. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.workfront:create_document': (_config) => `
function step_action_workfront_create_document(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workfront): Implement action.workfront:create_document Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workfront', operation: 'action.workfront:create_document' });
  throw new Error('TODO[apps-script-backlog]: Implement action.workfront:create_document. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.workfront:create_issue': (_config) => `
function step_action_workfront_create_issue(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workfront): Implement action.workfront:create_issue Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workfront', operation: 'action.workfront:create_issue' });
  throw new Error('TODO[apps-script-backlog]: Implement action.workfront:create_issue. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.workfront:create_project': (_config) => `
function step_action_workfront_create_project(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workfront): Implement action.workfront:create_project Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workfront', operation: 'action.workfront:create_project' });
  throw new Error('TODO[apps-script-backlog]: Implement action.workfront:create_project. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.workfront:create_task': (_config) => `
function step_action_workfront_create_task(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workfront): Implement action.workfront:create_task Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workfront', operation: 'action.workfront:create_task' });
  throw new Error('TODO[apps-script-backlog]: Implement action.workfront:create_task. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.workfront:create_timesheet': (_config) => `
function step_action_workfront_create_timesheet(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workfront): Implement action.workfront:create_timesheet Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workfront', operation: 'action.workfront:create_timesheet' });
  throw new Error('TODO[apps-script-backlog]: Implement action.workfront:create_timesheet. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.workfront:get_project': (_config) => `
function step_action_workfront_get_project(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workfront): Implement action.workfront:get_project Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workfront', operation: 'action.workfront:get_project' });
  throw new Error('TODO[apps-script-backlog]: Implement action.workfront:get_project. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.workfront:get_task': (_config) => `
function step_action_workfront_get_task(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workfront): Implement action.workfront:get_task Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workfront', operation: 'action.workfront:get_task' });
  throw new Error('TODO[apps-script-backlog]: Implement action.workfront:get_task. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.workfront:get_users': (_config) => `
function step_action_workfront_get_users(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workfront): Implement action.workfront:get_users Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workfront', operation: 'action.workfront:get_users' });
  throw new Error('TODO[apps-script-backlog]: Implement action.workfront:get_users. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.workfront:log_time': (_config) => `
function step_action_workfront_log_time(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workfront): Implement action.workfront:log_time Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workfront', operation: 'action.workfront:log_time' });
  throw new Error('TODO[apps-script-backlog]: Implement action.workfront:log_time. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.workfront:search_projects': (_config) => `
function step_action_workfront_search_projects(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workfront): Implement action.workfront:search_projects Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workfront', operation: 'action.workfront:search_projects' });
  throw new Error('TODO[apps-script-backlog]: Implement action.workfront:search_projects. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.workfront:test_connection': (_config) => `
function step_action_workfront_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workfront): Implement action.workfront:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workfront', operation: 'action.workfront:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.workfront:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.workfront:update_project': (_config) => `
function step_action_workfront_update_project(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workfront): Implement action.workfront:update_project Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workfront', operation: 'action.workfront:update_project' });
  throw new Error('TODO[apps-script-backlog]: Implement action.workfront:update_project. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.workfront:update_task': (_config) => `
function step_action_workfront_update_task(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workfront): Implement action.workfront:update_task Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workfront', operation: 'action.workfront:update_task' });
  throw new Error('TODO[apps-script-backlog]: Implement action.workfront:update_task. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.xero:create_bank_transaction': (_config) => `
function step_action_xero_create_bank_transaction(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#xero): Implement action.xero:create_bank_transaction Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'xero', operation: 'action.xero:create_bank_transaction' });
  throw new Error('TODO[apps-script-backlog]: Implement action.xero:create_bank_transaction. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.xero:create_contact': (_config) => `
function step_action_xero_create_contact(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#xero): Implement action.xero:create_contact Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'xero', operation: 'action.xero:create_contact' });
  throw new Error('TODO[apps-script-backlog]: Implement action.xero:create_contact. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.xero:create_invoice': (_config) => `
function step_action_xero_create_invoice(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#xero): Implement action.xero:create_invoice Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'xero', operation: 'action.xero:create_invoice' });
  throw new Error('TODO[apps-script-backlog]: Implement action.xero:create_invoice. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.xero:create_payment': (_config) => `
function step_action_xero_create_payment(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#xero): Implement action.xero:create_payment Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'xero', operation: 'action.xero:create_payment' });
  throw new Error('TODO[apps-script-backlog]: Implement action.xero:create_payment. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.xero:get_accounts': (_config) => `
function step_action_xero_get_accounts(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#xero): Implement action.xero:get_accounts Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'xero', operation: 'action.xero:get_accounts' });
  throw new Error('TODO[apps-script-backlog]: Implement action.xero:get_accounts. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.xero:get_contact': (_config) => `
function step_action_xero_get_contact(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#xero): Implement action.xero:get_contact Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'xero', operation: 'action.xero:get_contact' });
  throw new Error('TODO[apps-script-backlog]: Implement action.xero:get_contact. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.xero:get_invoice': (_config) => `
function step_action_xero_get_invoice(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#xero): Implement action.xero:get_invoice Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'xero', operation: 'action.xero:get_invoice' });
  throw new Error('TODO[apps-script-backlog]: Implement action.xero:get_invoice. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.xero:get_organizations': (_config) => `
function step_action_xero_get_organizations(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#xero): Implement action.xero:get_organizations Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'xero', operation: 'action.xero:get_organizations' });
  throw new Error('TODO[apps-script-backlog]: Implement action.xero:get_organizations. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.xero:get_reports': (_config) => `
function step_action_xero_get_reports(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#xero): Implement action.xero:get_reports Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'xero', operation: 'action.xero:get_reports' });
  throw new Error('TODO[apps-script-backlog]: Implement action.xero:get_reports. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.xero:list_contacts': (_config) => `
function step_action_xero_list_contacts(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#xero): Implement action.xero:list_contacts Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'xero', operation: 'action.xero:list_contacts' });
  throw new Error('TODO[apps-script-backlog]: Implement action.xero:list_contacts. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.xero:test_connection': (_config) => `
function step_action_xero_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#xero): Implement action.xero:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'xero', operation: 'action.xero:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.xero:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.xero:update_contact': (_config) => `
function step_action_xero_update_contact(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#xero): Implement action.xero:update_contact Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'xero', operation: 'action.xero:update_contact' });
  throw new Error('TODO[apps-script-backlog]: Implement action.xero:update_contact. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.xero:update_invoice': (_config) => `
function step_action_xero_update_invoice(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#xero): Implement action.xero:update_invoice Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'xero', operation: 'action.xero:update_invoice' });
  throw new Error('TODO[apps-script-backlog]: Implement action.xero:update_invoice. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zendesk:create_ticket': (_config) => `
function step_action_zendesk_create_ticket(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zendesk): Implement action.zendesk:create_ticket Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zendesk', operation: 'action.zendesk:create_ticket' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zendesk:create_ticket. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zendesk:create_user': (_config) => `
function step_action_zendesk_create_user(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zendesk): Implement action.zendesk:create_user Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zendesk', operation: 'action.zendesk:create_user' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zendesk:create_user. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zendesk:create_webhook': (_config) => `
function step_action_zendesk_create_webhook(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zendesk): Implement action.zendesk:create_webhook Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zendesk', operation: 'action.zendesk:create_webhook' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zendesk:create_webhook. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zendesk:delete_ticket': (_config) => `
function step_action_zendesk_delete_ticket(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zendesk): Implement action.zendesk:delete_ticket Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zendesk', operation: 'action.zendesk:delete_ticket' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zendesk:delete_ticket. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zendesk:get_ticket': (_config) => `
function step_action_zendesk_get_ticket(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zendesk): Implement action.zendesk:get_ticket Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zendesk', operation: 'action.zendesk:get_ticket' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zendesk:get_ticket. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zendesk:get_user': (_config) => `
function step_action_zendesk_get_user(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zendesk): Implement action.zendesk:get_user Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zendesk', operation: 'action.zendesk:get_user' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zendesk:get_user. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zendesk:list_ticket_comments': (_config) => `
function step_action_zendesk_list_ticket_comments(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zendesk): Implement action.zendesk:list_ticket_comments Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zendesk', operation: 'action.zendesk:list_ticket_comments' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zendesk:list_ticket_comments. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zendesk:list_tickets': (_config) => `
function step_action_zendesk_list_tickets(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zendesk): Implement action.zendesk:list_tickets Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zendesk', operation: 'action.zendesk:list_tickets' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zendesk:list_tickets. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zendesk:list_users': (_config) => `
function step_action_zendesk_list_users(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zendesk): Implement action.zendesk:list_users Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zendesk', operation: 'action.zendesk:list_users' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zendesk:list_users. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zendesk:search_tickets': (_config) => `
function step_action_zendesk_search_tickets(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zendesk): Implement action.zendesk:search_tickets Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zendesk', operation: 'action.zendesk:search_tickets' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zendesk:search_tickets. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zendesk:test_connection': (_config) => `
function step_action_zendesk_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zendesk): Implement action.zendesk:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zendesk', operation: 'action.zendesk:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zendesk:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zendesk:update_ticket': (_config) => `
function step_action_zendesk_update_ticket(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zendesk): Implement action.zendesk:update_ticket Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zendesk', operation: 'action.zendesk:update_ticket' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zendesk:update_ticket. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zendesk:update_user': (_config) => `
function step_action_zendesk_update_user(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zendesk): Implement action.zendesk:update_user Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zendesk', operation: 'action.zendesk:update_user' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zendesk:update_user. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zoho-books:create_customer': (_config) => `
function step_action_zoho_books_create_customer(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoho-books): Implement action.zoho-books:create_customer Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoho-books', operation: 'action.zoho-books:create_customer' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zoho-books:create_customer. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zoho-books:create_expense': (_config) => `
function step_action_zoho_books_create_expense(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoho-books): Implement action.zoho-books:create_expense Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoho-books', operation: 'action.zoho-books:create_expense' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zoho-books:create_expense. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zoho-books:create_invoice': (_config) => `
function step_action_zoho_books_create_invoice(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoho-books): Implement action.zoho-books:create_invoice Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoho-books', operation: 'action.zoho-books:create_invoice' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zoho-books:create_invoice. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zoho-books:create_item': (_config) => `
function step_action_zoho_books_create_item(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoho-books): Implement action.zoho-books:create_item Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoho-books', operation: 'action.zoho-books:create_item' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zoho-books:create_item. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zoho-books:get_customer': (_config) => `
function step_action_zoho_books_get_customer(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoho-books): Implement action.zoho-books:get_customer Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoho-books', operation: 'action.zoho-books:get_customer' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zoho-books:get_customer. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zoho-books:get_invoice': (_config) => `
function step_action_zoho_books_get_invoice(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoho-books): Implement action.zoho-books:get_invoice Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoho-books', operation: 'action.zoho-books:get_invoice' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zoho-books:get_invoice. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zoho-books:get_organization': (_config) => `
function step_action_zoho_books_get_organization(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoho-books): Implement action.zoho-books:get_organization Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoho-books', operation: 'action.zoho-books:get_organization' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zoho-books:get_organization. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zoho-books:get_reports': (_config) => `
function step_action_zoho_books_get_reports(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoho-books): Implement action.zoho-books:get_reports Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoho-books', operation: 'action.zoho-books:get_reports' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zoho-books:get_reports. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zoho-books:list_customers': (_config) => `
function step_action_zoho_books_list_customers(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoho-books): Implement action.zoho-books:list_customers Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoho-books', operation: 'action.zoho-books:list_customers' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zoho-books:list_customers. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zoho-books:record_payment': (_config) => `
function step_action_zoho_books_record_payment(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoho-books): Implement action.zoho-books:record_payment Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoho-books', operation: 'action.zoho-books:record_payment' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zoho-books:record_payment. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zoho-books:send_invoice': (_config) => `
function step_action_zoho_books_send_invoice(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoho-books): Implement action.zoho-books:send_invoice Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoho-books', operation: 'action.zoho-books:send_invoice' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zoho-books:send_invoice. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zoho-books:test_connection': (_config) => `
function step_action_zoho_books_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoho-books): Implement action.zoho-books:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoho-books', operation: 'action.zoho-books:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zoho-books:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zoho-books:update_customer': (_config) => `
function step_action_zoho_books_update_customer(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoho-books): Implement action.zoho-books:update_customer Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoho-books', operation: 'action.zoho-books:update_customer' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zoho-books:update_customer. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zoho-crm:add_note': (_config) => `
function step_action_zoho_crm_add_note(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoho-crm): Implement action.zoho-crm:add_note Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoho-crm', operation: 'action.zoho-crm:add_note' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zoho-crm:add_note. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zoho-crm:convert_lead': (_config) => `
function step_action_zoho_crm_convert_lead(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoho-crm): Implement action.zoho-crm:convert_lead Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoho-crm', operation: 'action.zoho-crm:convert_lead' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zoho-crm:convert_lead. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zoho-crm:create_record': (_config) => `
function step_action_zoho_crm_create_record(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoho-crm): Implement action.zoho-crm:create_record Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoho-crm', operation: 'action.zoho-crm:create_record' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zoho-crm:create_record. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zoho-crm:delete_record': (_config) => `
function step_action_zoho_crm_delete_record(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoho-crm): Implement action.zoho-crm:delete_record Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoho-crm', operation: 'action.zoho-crm:delete_record' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zoho-crm:delete_record. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zoho-crm:get_record': (_config) => `
function step_action_zoho_crm_get_record(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoho-crm): Implement action.zoho-crm:get_record Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoho-crm', operation: 'action.zoho-crm:get_record' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zoho-crm:get_record. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zoho-crm:list_records': (_config) => `
function step_action_zoho_crm_list_records(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoho-crm): Implement action.zoho-crm:list_records Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoho-crm', operation: 'action.zoho-crm:list_records' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zoho-crm:list_records. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zoho-crm:search_records': (_config) => `
function step_action_zoho_crm_search_records(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoho-crm): Implement action.zoho-crm:search_records Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoho-crm', operation: 'action.zoho-crm:search_records' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zoho-crm:search_records. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zoho-crm:test_connection': (_config) => `
function step_action_zoho_crm_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoho-crm): Implement action.zoho-crm:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoho-crm', operation: 'action.zoho-crm:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zoho-crm:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zoho-crm:update_record': (_config) => `
function step_action_zoho_crm_update_record(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoho-crm): Implement action.zoho-crm:update_record Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoho-crm', operation: 'action.zoho-crm:update_record' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zoho-crm:update_record. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zoho-crm:upload_attachment': (_config) => `
function step_action_zoho_crm_upload_attachment(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoho-crm): Implement action.zoho-crm:upload_attachment Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoho-crm', operation: 'action.zoho-crm:upload_attachment' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zoho-crm:upload_attachment. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zoom-enhanced:create_meeting': (_config) => `
function step_action_zoom_enhanced_create_meeting(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoom-enhanced): Implement action.zoom-enhanced:create_meeting Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoom-enhanced', operation: 'action.zoom-enhanced:create_meeting' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zoom-enhanced:create_meeting. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zoom-enhanced:create_webinar': (_config) => `
function step_action_zoom_enhanced_create_webinar(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoom-enhanced): Implement action.zoom-enhanced:create_webinar Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoom-enhanced', operation: 'action.zoom-enhanced:create_webinar' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zoom-enhanced:create_webinar. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zoom-enhanced:delete_meeting': (_config) => `
function step_action_zoom_enhanced_delete_meeting(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoom-enhanced): Implement action.zoom-enhanced:delete_meeting Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoom-enhanced', operation: 'action.zoom-enhanced:delete_meeting' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zoom-enhanced:delete_meeting. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zoom-enhanced:get_meeting': (_config) => `
function step_action_zoom_enhanced_get_meeting(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoom-enhanced): Implement action.zoom-enhanced:get_meeting Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoom-enhanced', operation: 'action.zoom-enhanced:get_meeting' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zoom-enhanced:get_meeting. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zoom-enhanced:get_recording': (_config) => `
function step_action_zoom_enhanced_get_recording(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoom-enhanced): Implement action.zoom-enhanced:get_recording Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoom-enhanced', operation: 'action.zoom-enhanced:get_recording' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zoom-enhanced:get_recording. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zoom-enhanced:list_meetings': (_config) => `
function step_action_zoom_enhanced_list_meetings(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoom-enhanced): Implement action.zoom-enhanced:list_meetings Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoom-enhanced', operation: 'action.zoom-enhanced:list_meetings' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zoom-enhanced:list_meetings. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zoom-enhanced:list_recordings': (_config) => `
function step_action_zoom_enhanced_list_recordings(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoom-enhanced): Implement action.zoom-enhanced:list_recordings Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoom-enhanced', operation: 'action.zoom-enhanced:list_recordings' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zoom-enhanced:list_recordings. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zoom-enhanced:test_connection': (_config) => `
function step_action_zoom_enhanced_test_connection(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoom-enhanced): Implement action.zoom-enhanced:test_connection Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoom-enhanced', operation: 'action.zoom-enhanced:test_connection' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zoom-enhanced:test_connection. See docs/apps-script-rollout/backlog.md.');
}
`,

  'action.zoom-enhanced:update_meeting': (_config) => `
function step_action_zoom_enhanced_update_meeting(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoom-enhanced): Implement action.zoom-enhanced:update_meeting Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoom-enhanced', operation: 'action.zoom-enhanced:update_meeting' });
  throw new Error('TODO[apps-script-backlog]: Implement action.zoom-enhanced:update_meeting. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.adobesign:agreement_action_completed': (_config) => `
function trigger_trigger_adobesign_agreement_action_completed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#adobesign): Implement trigger.adobesign:agreement_action_completed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'adobesign', operation: 'trigger.adobesign:agreement_action_completed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.adobesign:agreement_action_completed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.adobesign:agreement_workflow_completed': (_config) => `
function trigger_trigger_adobesign_agreement_workflow_completed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#adobesign): Implement trigger.adobesign:agreement_workflow_completed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'adobesign', operation: 'trigger.adobesign:agreement_workflow_completed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.adobesign:agreement_workflow_completed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.adp:worker_hired': (_config) => `
function trigger_trigger_adp_worker_hired(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#adp): Implement trigger.adp:worker_hired Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'adp', operation: 'trigger.adp:worker_hired' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.adp:worker_hired. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.adyen:payment_success': (_config) => `
function trigger_trigger_adyen_payment_success(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#adyen): Implement trigger.adyen:payment_success Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'adyen', operation: 'trigger.adyen:payment_success' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.adyen:payment_success. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.airtable-enhanced:record_created': (_config) => `
function trigger_trigger_airtable_enhanced_record_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#airtable-enhanced): Implement trigger.airtable-enhanced:record_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'airtable-enhanced', operation: 'trigger.airtable-enhanced:record_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.airtable-enhanced:record_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.airtable-enhanced:record_updated': (_config) => `
function trigger_trigger_airtable_enhanced_record_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#airtable-enhanced): Implement trigger.airtable-enhanced:record_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'airtable-enhanced', operation: 'trigger.airtable-enhanced:record_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.airtable-enhanced:record_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.airtable:record_created': (_config) => `
function trigger_trigger_airtable_record_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#airtable): Implement trigger.airtable:record_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'airtable', operation: 'trigger.airtable:record_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.airtable:record_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.airtable:record_updated': (_config) => `
function trigger_trigger_airtable_record_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#airtable): Implement trigger.airtable:record_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'airtable', operation: 'trigger.airtable:record_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.airtable:record_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.ansible:inventory_updated': (_config) => `
function trigger_trigger_ansible_inventory_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#ansible): Implement trigger.ansible:inventory_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'ansible', operation: 'trigger.ansible:inventory_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.ansible:inventory_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.ansible:job_completed': (_config) => `
function trigger_trigger_ansible_job_completed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#ansible): Implement trigger.ansible:job_completed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'ansible', operation: 'trigger.ansible:job_completed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.ansible:job_completed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.argocd:app_health_changed': (_config) => `
function trigger_trigger_argocd_app_health_changed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#argocd): Implement trigger.argocd:app_health_changed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'argocd', operation: 'trigger.argocd:app_health_changed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.argocd:app_health_changed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.argocd:app_synced': (_config) => `
function trigger_trigger_argocd_app_synced(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#argocd): Implement trigger.argocd:app_synced Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'argocd', operation: 'trigger.argocd:app_synced' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.argocd:app_synced. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.asana-enhanced:task_completed': (_config) => `
function trigger_trigger_asana_enhanced_task_completed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#asana-enhanced): Implement trigger.asana-enhanced:task_completed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'asana-enhanced', operation: 'trigger.asana-enhanced:task_completed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.asana-enhanced:task_completed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.asana-enhanced:task_created': (_config) => `
function trigger_trigger_asana_enhanced_task_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#asana-enhanced): Implement trigger.asana-enhanced:task_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'asana-enhanced', operation: 'trigger.asana-enhanced:task_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.asana-enhanced:task_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.asana-enhanced:task_updated': (_config) => `
function trigger_trigger_asana_enhanced_task_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#asana-enhanced): Implement trigger.asana-enhanced:task_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'asana-enhanced', operation: 'trigger.asana-enhanced:task_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.asana-enhanced:task_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.aws-cloudformation:stack_created': (_config) => `
function trigger_trigger_aws_cloudformation_stack_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#aws-cloudformation): Implement trigger.aws-cloudformation:stack_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'aws-cloudformation', operation: 'trigger.aws-cloudformation:stack_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.aws-cloudformation:stack_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.aws-cloudformation:stack_failed': (_config) => `
function trigger_trigger_aws_cloudformation_stack_failed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#aws-cloudformation): Implement trigger.aws-cloudformation:stack_failed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'aws-cloudformation', operation: 'trigger.aws-cloudformation:stack_failed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.aws-cloudformation:stack_failed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.aws-codepipeline:pipeline_failed': (_config) => `
function trigger_trigger_aws_codepipeline_pipeline_failed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#aws-codepipeline): Implement trigger.aws-codepipeline:pipeline_failed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'aws-codepipeline', operation: 'trigger.aws-codepipeline:pipeline_failed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.aws-codepipeline:pipeline_failed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.aws-codepipeline:pipeline_started': (_config) => `
function trigger_trigger_aws_codepipeline_pipeline_started(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#aws-codepipeline): Implement trigger.aws-codepipeline:pipeline_started Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'aws-codepipeline', operation: 'trigger.aws-codepipeline:pipeline_started' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.aws-codepipeline:pipeline_started. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.aws-codepipeline:pipeline_succeeded': (_config) => `
function trigger_trigger_aws_codepipeline_pipeline_succeeded(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#aws-codepipeline): Implement trigger.aws-codepipeline:pipeline_succeeded Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'aws-codepipeline', operation: 'trigger.aws-codepipeline:pipeline_succeeded' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.aws-codepipeline:pipeline_succeeded. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.azure-devops:build_completed': (_config) => `
function trigger_trigger_azure_devops_build_completed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#azure-devops): Implement trigger.azure-devops:build_completed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'azure-devops', operation: 'trigger.azure-devops:build_completed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.azure-devops:build_completed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.azure-devops:work_item_created': (_config) => `
function trigger_trigger_azure_devops_work_item_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#azure-devops): Implement trigger.azure-devops:work_item_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'azure-devops', operation: 'trigger.azure-devops:work_item_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.azure-devops:work_item_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.bamboohr:employee_created': (_config) => `
function trigger_trigger_bamboohr_employee_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#bamboohr): Implement trigger.bamboohr:employee_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'bamboohr', operation: 'trigger.bamboohr:employee_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.bamboohr:employee_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.bamboohr:employee_updated': (_config) => `
function trigger_trigger_bamboohr_employee_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#bamboohr): Implement trigger.bamboohr:employee_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'bamboohr', operation: 'trigger.bamboohr:employee_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.bamboohr:employee_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.basecamp:project_created': (_config) => `
function trigger_trigger_basecamp_project_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#basecamp): Implement trigger.basecamp:project_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'basecamp', operation: 'trigger.basecamp:project_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.basecamp:project_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.basecamp:todo_completed': (_config) => `
function trigger_trigger_basecamp_todo_completed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#basecamp): Implement trigger.basecamp:todo_completed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'basecamp', operation: 'trigger.basecamp:todo_completed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.basecamp:todo_completed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.bigcommerce:order_created': (_config) => `
function trigger_trigger_bigcommerce_order_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#bigcommerce): Implement trigger.bigcommerce:order_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'bigcommerce', operation: 'trigger.bigcommerce:order_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.bigcommerce:order_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.bigcommerce:product_updated': (_config) => `
function trigger_trigger_bigcommerce_product_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#bigcommerce): Implement trigger.bigcommerce:product_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'bigcommerce', operation: 'trigger.bigcommerce:product_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.bigcommerce:product_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.bigquery:job_completed': (_config) => `
function trigger_trigger_bigquery_job_completed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#bigquery): Implement trigger.bigquery:job_completed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'bigquery', operation: 'trigger.bigquery:job_completed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.bigquery:job_completed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.bitbucket:pull_request_created': (_config) => `
function trigger_trigger_bitbucket_pull_request_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#bitbucket): Implement trigger.bitbucket:pull_request_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'bitbucket', operation: 'trigger.bitbucket:pull_request_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.bitbucket:pull_request_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.bitbucket:push': (_config) => `
function trigger_trigger_bitbucket_push(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#bitbucket): Implement trigger.bitbucket:push Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'bitbucket', operation: 'trigger.bitbucket:push' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.bitbucket:push. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.box:file_deleted': (_config) => `
function trigger_trigger_box_file_deleted(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#box): Implement trigger.box:file_deleted Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'box', operation: 'trigger.box:file_deleted' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.box:file_deleted. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.box:file_uploaded': (_config) => `
function trigger_trigger_box_file_uploaded(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#box): Implement trigger.box:file_uploaded Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'box', operation: 'trigger.box:file_uploaded' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.box:file_uploaded. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.braze:campaign_sent': (_config) => `
function trigger_trigger_braze_campaign_sent(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#braze): Implement trigger.braze:campaign_sent Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'braze', operation: 'trigger.braze:campaign_sent' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.braze:campaign_sent. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.braze:user_event': (_config) => `
function trigger_trigger_braze_user_event(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#braze): Implement trigger.braze:user_event Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'braze', operation: 'trigger.braze:user_event' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.braze:user_event. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.brex:card_created': (_config) => `
function trigger_trigger_brex_card_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#brex): Implement trigger.brex:card_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'brex', operation: 'trigger.brex:card_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.brex:card_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.brex:transaction_created': (_config) => `
function trigger_trigger_brex_transaction_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#brex): Implement trigger.brex:transaction_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'brex', operation: 'trigger.brex:transaction_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.brex:transaction_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.caldotcom:booking_cancelled': (_config) => `
function trigger_trigger_caldotcom_booking_cancelled(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#caldotcom): Implement trigger.caldotcom:booking_cancelled Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'caldotcom', operation: 'trigger.caldotcom:booking_cancelled' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.caldotcom:booking_cancelled. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.caldotcom:booking_created': (_config) => `
function trigger_trigger_caldotcom_booking_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#caldotcom): Implement trigger.caldotcom:booking_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'caldotcom', operation: 'trigger.caldotcom:booking_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.caldotcom:booking_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.calendly:invitee_canceled': (_config) => `
function trigger_trigger_calendly_invitee_canceled(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#calendly): Implement trigger.calendly:invitee_canceled Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'calendly', operation: 'trigger.calendly:invitee_canceled' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.calendly:invitee_canceled. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.calendly:invitee_created': (_config) => `
function trigger_trigger_calendly_invitee_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#calendly): Implement trigger.calendly:invitee_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'calendly', operation: 'trigger.calendly:invitee_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.calendly:invitee_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.circleci:job_completed': (_config) => `
function trigger_trigger_circleci_job_completed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#circleci): Implement trigger.circleci:job_completed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'circleci', operation: 'trigger.circleci:job_completed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.circleci:job_completed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.circleci:workflow_completed': (_config) => `
function trigger_trigger_circleci_workflow_completed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#circleci): Implement trigger.circleci:workflow_completed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'circleci', operation: 'trigger.circleci:workflow_completed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.circleci:workflow_completed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.clickup:task_created': (_config) => `
function trigger_trigger_clickup_task_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#clickup): Implement trigger.clickup:task_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'clickup', operation: 'trigger.clickup:task_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.clickup:task_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.clickup:task_updated': (_config) => `
function trigger_trigger_clickup_task_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#clickup): Implement trigger.clickup:task_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'clickup', operation: 'trigger.clickup:task_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.clickup:task_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.coda:row_created': (_config) => `
function trigger_trigger_coda_row_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#coda): Implement trigger.coda:row_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'coda', operation: 'trigger.coda:row_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.coda:row_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.coda:row_updated': (_config) => `
function trigger_trigger_coda_row_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#coda): Implement trigger.coda:row_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'coda', operation: 'trigger.coda:row_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.coda:row_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.concur:expense_report_approved': (_config) => `
function trigger_trigger_concur_expense_report_approved(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#concur): Implement trigger.concur:expense_report_approved Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'concur', operation: 'trigger.concur:expense_report_approved' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.concur:expense_report_approved. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.concur:expense_report_submitted': (_config) => `
function trigger_trigger_concur_expense_report_submitted(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#concur): Implement trigger.concur:expense_report_submitted Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'concur', operation: 'trigger.concur:expense_report_submitted' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.concur:expense_report_submitted. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.confluence:page_created': (_config) => `
function trigger_trigger_confluence_page_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#confluence): Implement trigger.confluence:page_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'confluence', operation: 'trigger.confluence:page_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.confluence:page_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.confluence:page_updated': (_config) => `
function trigger_trigger_confluence_page_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#confluence): Implement trigger.confluence:page_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'confluence', operation: 'trigger.confluence:page_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.confluence:page_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.coupa:invoice_received': (_config) => `
function trigger_trigger_coupa_invoice_received(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#coupa): Implement trigger.coupa:invoice_received Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'coupa', operation: 'trigger.coupa:invoice_received' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.coupa:invoice_received. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.coupa:purchase_order_approved': (_config) => `
function trigger_trigger_coupa_purchase_order_approved(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#coupa): Implement trigger.coupa:purchase_order_approved Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'coupa', operation: 'trigger.coupa:purchase_order_approved' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.coupa:purchase_order_approved. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.databricks:cluster_started': (_config) => `
function trigger_trigger_databricks_cluster_started(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#databricks): Implement trigger.databricks:cluster_started Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'databricks', operation: 'trigger.databricks:cluster_started' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.databricks:cluster_started. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.databricks:job_completed': (_config) => `
function trigger_trigger_databricks_job_completed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#databricks): Implement trigger.databricks:job_completed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'databricks', operation: 'trigger.databricks:job_completed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.databricks:job_completed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.datadog:metric_threshold': (_config) => `
function trigger_trigger_datadog_metric_threshold(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#datadog): Implement trigger.datadog:metric_threshold Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'datadog', operation: 'trigger.datadog:metric_threshold' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.datadog:metric_threshold. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.datadog:monitor_alert': (_config) => `
function trigger_trigger_datadog_monitor_alert(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#datadog): Implement trigger.datadog:monitor_alert Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'datadog', operation: 'trigger.datadog:monitor_alert' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.datadog:monitor_alert. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.docker-hub:image_pushed': (_config) => `
function trigger_trigger_docker_hub_image_pushed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#docker-hub): Implement trigger.docker-hub:image_pushed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'docker-hub', operation: 'trigger.docker-hub:image_pushed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.docker-hub:image_pushed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.docker-hub:repository_created': (_config) => `
function trigger_trigger_docker_hub_repository_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#docker-hub): Implement trigger.docker-hub:repository_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'docker-hub', operation: 'trigger.docker-hub:repository_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.docker-hub:repository_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.docusign:envelope_completed': (_config) => `
function trigger_trigger_docusign_envelope_completed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#docusign): Implement trigger.docusign:envelope_completed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'docusign', operation: 'trigger.docusign:envelope_completed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.docusign:envelope_completed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.docusign:envelope_sent': (_config) => `
function trigger_trigger_docusign_envelope_sent(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#docusign): Implement trigger.docusign:envelope_sent Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'docusign', operation: 'trigger.docusign:envelope_sent' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.docusign:envelope_sent. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.docusign:recipient_signed': (_config) => `
function trigger_trigger_docusign_recipient_signed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#docusign): Implement trigger.docusign:recipient_signed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'docusign', operation: 'trigger.docusign:recipient_signed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.docusign:recipient_signed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.dropbox-enhanced:file_deleted': (_config) => `
function trigger_trigger_dropbox_enhanced_file_deleted(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dropbox-enhanced): Implement trigger.dropbox-enhanced:file_deleted Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dropbox-enhanced', operation: 'trigger.dropbox-enhanced:file_deleted' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.dropbox-enhanced:file_deleted. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.dropbox-enhanced:file_uploaded': (_config) => `
function trigger_trigger_dropbox_enhanced_file_uploaded(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dropbox-enhanced): Implement trigger.dropbox-enhanced:file_uploaded Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dropbox-enhanced', operation: 'trigger.dropbox-enhanced:file_uploaded' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.dropbox-enhanced:file_uploaded. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.dropbox-enhanced:folder_shared': (_config) => `
function trigger_trigger_dropbox_enhanced_folder_shared(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dropbox-enhanced): Implement trigger.dropbox-enhanced:folder_shared Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dropbox-enhanced', operation: 'trigger.dropbox-enhanced:folder_shared' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.dropbox-enhanced:folder_shared. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.dropbox:file_deleted': (_config) => `
function trigger_trigger_dropbox_file_deleted(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dropbox): Implement trigger.dropbox:file_deleted Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dropbox', operation: 'trigger.dropbox:file_deleted' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.dropbox:file_deleted. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.dropbox:file_uploaded': (_config) => `
function trigger_trigger_dropbox_file_uploaded(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dropbox): Implement trigger.dropbox:file_uploaded Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dropbox', operation: 'trigger.dropbox:file_uploaded' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.dropbox:file_uploaded. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.dynamics365:account_created': (_config) => `
function trigger_trigger_dynamics365_account_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dynamics365): Implement trigger.dynamics365:account_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dynamics365', operation: 'trigger.dynamics365:account_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.dynamics365:account_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.dynamics365:lead_created': (_config) => `
function trigger_trigger_dynamics365_lead_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dynamics365): Implement trigger.dynamics365:lead_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dynamics365', operation: 'trigger.dynamics365:lead_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.dynamics365:lead_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.dynamics365:opportunity_won': (_config) => `
function trigger_trigger_dynamics365_opportunity_won(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#dynamics365): Implement trigger.dynamics365:opportunity_won Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'dynamics365', operation: 'trigger.dynamics365:opportunity_won' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.dynamics365:opportunity_won. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.egnyte:file_deleted': (_config) => `
function trigger_trigger_egnyte_file_deleted(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#egnyte): Implement trigger.egnyte:file_deleted Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'egnyte', operation: 'trigger.egnyte:file_deleted' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.egnyte:file_deleted. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.egnyte:file_uploaded': (_config) => `
function trigger_trigger_egnyte_file_uploaded(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#egnyte): Implement trigger.egnyte:file_uploaded Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'egnyte', operation: 'trigger.egnyte:file_uploaded' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.egnyte:file_uploaded. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.excel-online:table_row_added': (_config) => `
function trigger_trigger_excel_online_table_row_added(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#excel-online): Implement trigger.excel-online:table_row_added Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'excel-online', operation: 'trigger.excel-online:table_row_added' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.excel-online:table_row_added. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.excel-online:workbook_modified': (_config) => `
function trigger_trigger_excel_online_workbook_modified(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#excel-online): Implement trigger.excel-online:workbook_modified Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'excel-online', operation: 'trigger.excel-online:workbook_modified' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.excel-online:workbook_modified. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.expensify:expense_created': (_config) => `
function trigger_trigger_expensify_expense_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#expensify): Implement trigger.expensify:expense_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'expensify', operation: 'trigger.expensify:expense_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.expensify:expense_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.expensify:expense_report_approved': (_config) => `
function trigger_trigger_expensify_expense_report_approved(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#expensify): Implement trigger.expensify:expense_report_approved Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'expensify', operation: 'trigger.expensify:expense_report_approved' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.expensify:expense_report_approved. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.expensify:expense_report_submitted': (_config) => `
function trigger_trigger_expensify_expense_report_submitted(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#expensify): Implement trigger.expensify:expense_report_submitted Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'expensify', operation: 'trigger.expensify:expense_report_submitted' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.expensify:expense_report_submitted. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.freshdesk:ticket_created': (_config) => `
function trigger_trigger_freshdesk_ticket_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#freshdesk): Implement trigger.freshdesk:ticket_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'freshdesk', operation: 'trigger.freshdesk:ticket_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.freshdesk:ticket_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.freshdesk:ticket_updated': (_config) => `
function trigger_trigger_freshdesk_ticket_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#freshdesk): Implement trigger.freshdesk:ticket_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'freshdesk', operation: 'trigger.freshdesk:ticket_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.freshdesk:ticket_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.github-enhanced:issues': (_config) => `
function trigger_trigger_github_enhanced_issues(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#github-enhanced): Implement trigger.github-enhanced:issues Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'github-enhanced', operation: 'trigger.github-enhanced:issues' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.github-enhanced:issues. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.github-enhanced:pull_request': (_config) => `
function trigger_trigger_github_enhanced_pull_request(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#github-enhanced): Implement trigger.github-enhanced:pull_request Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'github-enhanced', operation: 'trigger.github-enhanced:pull_request' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.github-enhanced:pull_request. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.github-enhanced:push': (_config) => `
function trigger_trigger_github_enhanced_push(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#github-enhanced): Implement trigger.github-enhanced:push Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'github-enhanced', operation: 'trigger.github-enhanced:push' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.github-enhanced:push. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.github:issue_closed': (_config) => `
function trigger_trigger_github_issue_closed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#github): Implement trigger.github:issue_closed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'github', operation: 'trigger.github:issue_closed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.github:issue_closed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.github:issue_opened': (_config) => `
function trigger_trigger_github_issue_opened(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#github): Implement trigger.github:issue_opened Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'github', operation: 'trigger.github:issue_opened' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.github:issue_opened. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.github:pull_request_merged': (_config) => `
function trigger_trigger_github_pull_request_merged(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#github): Implement trigger.github:pull_request_merged Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'github', operation: 'trigger.github:pull_request_merged' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.github:pull_request_merged. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.github:pull_request_opened': (_config) => `
function trigger_trigger_github_pull_request_opened(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#github): Implement trigger.github:pull_request_opened Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'github', operation: 'trigger.github:pull_request_opened' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.github:pull_request_opened. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.github:push': (_config) => `
function trigger_trigger_github_push(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#github): Implement trigger.github:push Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'github', operation: 'trigger.github:push' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.github:push. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.gitlab:merge_request_events': (_config) => `
function trigger_trigger_gitlab_merge_request_events(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#gitlab): Implement trigger.gitlab:merge_request_events Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'gitlab', operation: 'trigger.gitlab:merge_request_events' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.gitlab:merge_request_events. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.gitlab:push_events': (_config) => `
function trigger_trigger_gitlab_push_events(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#gitlab): Implement trigger.gitlab:push_events Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'gitlab', operation: 'trigger.gitlab:push_events' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.gitlab:push_events. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.gmail-enhanced:email_starred': (_config) => `
function trigger_trigger_gmail_enhanced_email_starred(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#gmail-enhanced): Implement trigger.gmail-enhanced:email_starred Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'gmail-enhanced', operation: 'trigger.gmail-enhanced:email_starred' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.gmail-enhanced:email_starred. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.gmail-enhanced:new_email': (_config) => `
function trigger_trigger_gmail_enhanced_new_email(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#gmail-enhanced): Implement trigger.gmail-enhanced:new_email Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'gmail-enhanced', operation: 'trigger.gmail-enhanced:new_email' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.gmail-enhanced:new_email. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.gmail:email_received_from': (_config) => `
function trigger_trigger_gmail_email_received_from(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#gmail): Implement trigger.gmail:email_received_from Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'gmail', operation: 'trigger.gmail:email_received_from' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.gmail:email_received_from. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.gmail:email_with_attachment': (_config) => `
function trigger_trigger_gmail_email_with_attachment(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#gmail): Implement trigger.gmail:email_with_attachment Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'gmail', operation: 'trigger.gmail:email_with_attachment' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.gmail:email_with_attachment. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.gmail:new_email_received': (_config) => `
function trigger_trigger_gmail_new_email_received(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#gmail): Implement trigger.gmail:new_email_received Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'gmail', operation: 'trigger.gmail:new_email_received' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.gmail:new_email_received. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.google-admin:user_created': (_config) => `
function trigger_trigger_google_admin_user_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-admin): Implement trigger.google-admin:user_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-admin', operation: 'trigger.google-admin:user_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.google-admin:user_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.google-admin:user_suspended': (_config) => `
function trigger_trigger_google_admin_user_suspended(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-admin): Implement trigger.google-admin:user_suspended Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-admin', operation: 'trigger.google-admin:user_suspended' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.google-admin:user_suspended. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.google-calendar:event_created': (_config) => `
function trigger_trigger_google_calendar_event_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-calendar): Implement trigger.google-calendar:event_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-calendar', operation: 'trigger.google-calendar:event_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.google-calendar:event_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.google-calendar:event_starting_soon': (_config) => `
function trigger_trigger_google_calendar_event_starting_soon(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-calendar): Implement trigger.google-calendar:event_starting_soon Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-calendar', operation: 'trigger.google-calendar:event_starting_soon' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.google-calendar:event_starting_soon. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.google-calendar:event_updated': (_config) => `
function trigger_trigger_google_calendar_event_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-calendar): Implement trigger.google-calendar:event_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-calendar', operation: 'trigger.google-calendar:event_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.google-calendar:event_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.google-chat:membership_created': (_config) => `
function trigger_trigger_google_chat_membership_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-chat): Implement trigger.google-chat:membership_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-chat', operation: 'trigger.google-chat:membership_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.google-chat:membership_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.google-chat:message_created': (_config) => `
function trigger_trigger_google_chat_message_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-chat): Implement trigger.google-chat:message_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-chat', operation: 'trigger.google-chat:message_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.google-chat:message_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.google-chat:space_created': (_config) => `
function trigger_trigger_google_chat_space_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-chat): Implement trigger.google-chat:space_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-chat', operation: 'trigger.google-chat:space_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.google-chat:space_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.google-contacts:contact_created': (_config) => `
function trigger_trigger_google_contacts_contact_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-contacts): Implement trigger.google-contacts:contact_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-contacts', operation: 'trigger.google-contacts:contact_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.google-contacts:contact_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.google-contacts:contact_updated': (_config) => `
function trigger_trigger_google_contacts_contact_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-contacts): Implement trigger.google-contacts:contact_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-contacts', operation: 'trigger.google-contacts:contact_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.google-contacts:contact_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.google-docs:document_created': (_config) => `
function trigger_trigger_google_docs_document_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-docs): Implement trigger.google-docs:document_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-docs', operation: 'trigger.google-docs:document_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.google-docs:document_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.google-docs:document_updated': (_config) => `
function trigger_trigger_google_docs_document_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-docs): Implement trigger.google-docs:document_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-docs', operation: 'trigger.google-docs:document_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.google-docs:document_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.google-drive:file_created': (_config) => `
function trigger_trigger_google_drive_file_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-drive): Implement trigger.google-drive:file_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-drive', operation: 'trigger.google-drive:file_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.google-drive:file_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.google-drive:file_shared': (_config) => `
function trigger_trigger_google_drive_file_shared(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-drive): Implement trigger.google-drive:file_shared Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-drive', operation: 'trigger.google-drive:file_shared' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.google-drive:file_shared. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.google-drive:file_updated': (_config) => `
function trigger_trigger_google_drive_file_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-drive): Implement trigger.google-drive:file_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-drive', operation: 'trigger.google-drive:file_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.google-drive:file_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.google-forms:form_created': (_config) => `
function trigger_trigger_google_forms_form_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-forms): Implement trigger.google-forms:form_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-forms', operation: 'trigger.google-forms:form_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.google-forms:form_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.google-forms:form_response': (_config) => `
function trigger_trigger_google_forms_form_response(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-forms): Implement trigger.google-forms:form_response Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-forms', operation: 'trigger.google-forms:form_response' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.google-forms:form_response. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.google-meet:conference_started': (_config) => `
function trigger_trigger_google_meet_conference_started(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-meet): Implement trigger.google-meet:conference_started Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-meet', operation: 'trigger.google-meet:conference_started' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.google-meet:conference_started. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.google-meet:participant_joined': (_config) => `
function trigger_trigger_google_meet_participant_joined(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-meet): Implement trigger.google-meet:participant_joined Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-meet', operation: 'trigger.google-meet:participant_joined' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.google-meet:participant_joined. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.google-meet:space_created': (_config) => `
function trigger_trigger_google_meet_space_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-meet): Implement trigger.google-meet:space_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-meet', operation: 'trigger.google-meet:space_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.google-meet:space_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.google-sheets-enhanced:cell_updated': (_config) => `
function trigger_trigger_google_sheets_enhanced_cell_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-sheets-enhanced): Implement trigger.google-sheets-enhanced:cell_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-sheets-enhanced', operation: 'trigger.google-sheets-enhanced:cell_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.google-sheets-enhanced:cell_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.google-sheets-enhanced:row_added': (_config) => `
function trigger_trigger_google_sheets_enhanced_row_added(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-sheets-enhanced): Implement trigger.google-sheets-enhanced:row_added Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-sheets-enhanced', operation: 'trigger.google-sheets-enhanced:row_added' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.google-sheets-enhanced:row_added. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.google-slides:presentation_created': (_config) => `
function trigger_trigger_google_slides_presentation_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-slides): Implement trigger.google-slides:presentation_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-slides', operation: 'trigger.google-slides:presentation_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.google-slides:presentation_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.google-slides:presentation_updated': (_config) => `
function trigger_trigger_google_slides_presentation_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#google-slides): Implement trigger.google-slides:presentation_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'google-slides', operation: 'trigger.google-slides:presentation_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.google-slides:presentation_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.grafana:alert_triggered': (_config) => `
function trigger_trigger_grafana_alert_triggered(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#grafana): Implement trigger.grafana:alert_triggered Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'grafana', operation: 'trigger.grafana:alert_triggered' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.grafana:alert_triggered. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.grafana:dashboard_saved': (_config) => `
function trigger_trigger_grafana_dashboard_saved(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#grafana): Implement trigger.grafana:dashboard_saved Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'grafana', operation: 'trigger.grafana:dashboard_saved' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.grafana:dashboard_saved. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.greenhouse:application_hired': (_config) => `
function trigger_trigger_greenhouse_application_hired(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#greenhouse): Implement trigger.greenhouse:application_hired Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'greenhouse', operation: 'trigger.greenhouse:application_hired' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.greenhouse:application_hired. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.greenhouse:application_stage_changed': (_config) => `
function trigger_trigger_greenhouse_application_stage_changed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#greenhouse): Implement trigger.greenhouse:application_stage_changed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'greenhouse', operation: 'trigger.greenhouse:application_stage_changed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.greenhouse:application_stage_changed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.greenhouse:candidate_created': (_config) => `
function trigger_trigger_greenhouse_candidate_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#greenhouse): Implement trigger.greenhouse:candidate_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'greenhouse', operation: 'trigger.greenhouse:candidate_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.greenhouse:candidate_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.guru:card_created': (_config) => `
function trigger_trigger_guru_card_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#guru): Implement trigger.guru:card_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'guru', operation: 'trigger.guru:card_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.guru:card_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.guru:card_updated': (_config) => `
function trigger_trigger_guru_card_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#guru): Implement trigger.guru:card_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'guru', operation: 'trigger.guru:card_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.guru:card_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.guru:card_verified': (_config) => `
function trigger_trigger_guru_card_verified(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#guru): Implement trigger.guru:card_verified Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'guru', operation: 'trigger.guru:card_verified' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.guru:card_verified. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.hashicorp-vault:policy_updated': (_config) => `
function trigger_trigger_hashicorp_vault_policy_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hashicorp-vault): Implement trigger.hashicorp-vault:policy_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hashicorp-vault', operation: 'trigger.hashicorp-vault:policy_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.hashicorp-vault:policy_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.hashicorp-vault:secret_accessed': (_config) => `
function trigger_trigger_hashicorp_vault_secret_accessed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hashicorp-vault): Implement trigger.hashicorp-vault:secret_accessed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hashicorp-vault', operation: 'trigger.hashicorp-vault:secret_accessed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.hashicorp-vault:secret_accessed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.hellosign:signature_request_declined': (_config) => `
function trigger_trigger_hellosign_signature_request_declined(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hellosign): Implement trigger.hellosign:signature_request_declined Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hellosign', operation: 'trigger.hellosign:signature_request_declined' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.hellosign:signature_request_declined. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.hellosign:signature_request_sent': (_config) => `
function trigger_trigger_hellosign_signature_request_sent(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hellosign): Implement trigger.hellosign:signature_request_sent Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hellosign', operation: 'trigger.hellosign:signature_request_sent' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.hellosign:signature_request_sent. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.hellosign:signature_request_signed': (_config) => `
function trigger_trigger_hellosign_signature_request_signed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hellosign): Implement trigger.hellosign:signature_request_signed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hellosign', operation: 'trigger.hellosign:signature_request_signed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.hellosign:signature_request_signed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.helm:release_deployed': (_config) => `
function trigger_trigger_helm_release_deployed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#helm): Implement trigger.helm:release_deployed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'helm', operation: 'trigger.helm:release_deployed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.helm:release_deployed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.helm:release_failed': (_config) => `
function trigger_trigger_helm_release_failed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#helm): Implement trigger.helm:release_failed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'helm', operation: 'trigger.helm:release_failed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.helm:release_failed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.hubspot-enhanced:company_created': (_config) => `
function trigger_trigger_hubspot_enhanced_company_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot-enhanced): Implement trigger.hubspot-enhanced:company_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot-enhanced', operation: 'trigger.hubspot-enhanced:company_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.hubspot-enhanced:company_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.hubspot-enhanced:contact_created': (_config) => `
function trigger_trigger_hubspot_enhanced_contact_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot-enhanced): Implement trigger.hubspot-enhanced:contact_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot-enhanced', operation: 'trigger.hubspot-enhanced:contact_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.hubspot-enhanced:contact_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.hubspot-enhanced:contact_updated': (_config) => `
function trigger_trigger_hubspot_enhanced_contact_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot-enhanced): Implement trigger.hubspot-enhanced:contact_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot-enhanced', operation: 'trigger.hubspot-enhanced:contact_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.hubspot-enhanced:contact_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.hubspot-enhanced:deal_stage_changed': (_config) => `
function trigger_trigger_hubspot_enhanced_deal_stage_changed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot-enhanced): Implement trigger.hubspot-enhanced:deal_stage_changed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot-enhanced', operation: 'trigger.hubspot-enhanced:deal_stage_changed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.hubspot-enhanced:deal_stage_changed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.hubspot:contact_created': (_config) => `
function trigger_trigger_hubspot_contact_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot): Implement trigger.hubspot:contact_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot', operation: 'trigger.hubspot:contact_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.hubspot:contact_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.hubspot:contact_updated': (_config) => `
function trigger_trigger_hubspot_contact_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot): Implement trigger.hubspot:contact_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot', operation: 'trigger.hubspot:contact_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.hubspot:contact_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.hubspot:deal_created': (_config) => `
function trigger_trigger_hubspot_deal_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot): Implement trigger.hubspot:deal_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot', operation: 'trigger.hubspot:deal_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.hubspot:deal_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.hubspot:deal_stage_changed': (_config) => `
function trigger_trigger_hubspot_deal_stage_changed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#hubspot): Implement trigger.hubspot:deal_stage_changed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'hubspot', operation: 'trigger.hubspot:deal_stage_changed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.hubspot:deal_stage_changed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.intercom:contact_created': (_config) => `
function trigger_trigger_intercom_contact_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#intercom): Implement trigger.intercom:contact_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'intercom', operation: 'trigger.intercom:contact_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.intercom:contact_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.intercom:conversation_assigned': (_config) => `
function trigger_trigger_intercom_conversation_assigned(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#intercom): Implement trigger.intercom:conversation_assigned Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'intercom', operation: 'trigger.intercom:conversation_assigned' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.intercom:conversation_assigned. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.intercom:conversation_created': (_config) => `
function trigger_trigger_intercom_conversation_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#intercom): Implement trigger.intercom:conversation_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'intercom', operation: 'trigger.intercom:conversation_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.intercom:conversation_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.iterable:email_click': (_config) => `
function trigger_trigger_iterable_email_click(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#iterable): Implement trigger.iterable:email_click Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'iterable', operation: 'trigger.iterable:email_click' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.iterable:email_click. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.iterable:email_open': (_config) => `
function trigger_trigger_iterable_email_open(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#iterable): Implement trigger.iterable:email_open Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'iterable', operation: 'trigger.iterable:email_open' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.iterable:email_open. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.iterable:email_send': (_config) => `
function trigger_trigger_iterable_email_send(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#iterable): Implement trigger.iterable:email_send Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'iterable', operation: 'trigger.iterable:email_send' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.iterable:email_send. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.iterable:user_unsubscribe': (_config) => `
function trigger_trigger_iterable_user_unsubscribe(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#iterable): Implement trigger.iterable:user_unsubscribe Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'iterable', operation: 'trigger.iterable:user_unsubscribe' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.iterable:user_unsubscribe. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.jenkins:build_completed': (_config) => `
function trigger_trigger_jenkins_build_completed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jenkins): Implement trigger.jenkins:build_completed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jenkins', operation: 'trigger.jenkins:build_completed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.jenkins:build_completed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.jenkins:build_failed': (_config) => `
function trigger_trigger_jenkins_build_failed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jenkins): Implement trigger.jenkins:build_failed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jenkins', operation: 'trigger.jenkins:build_failed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.jenkins:build_failed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.jenkins:build_started': (_config) => `
function trigger_trigger_jenkins_build_started(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jenkins): Implement trigger.jenkins:build_started Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jenkins', operation: 'trigger.jenkins:build_started' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.jenkins:build_started. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.jira-service-management:customer_request_commented': (_config) => `
function trigger_trigger_jira_service_management_customer_request_commented(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira-service-management): Implement trigger.jira-service-management:customer_request_commented Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira-service-management', operation: 'trigger.jira-service-management:customer_request_commented' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.jira-service-management:customer_request_commented. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.jira-service-management:customer_request_created': (_config) => `
function trigger_trigger_jira_service_management_customer_request_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira-service-management): Implement trigger.jira-service-management:customer_request_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira-service-management', operation: 'trigger.jira-service-management:customer_request_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.jira-service-management:customer_request_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.jira-service-management:customer_request_status_changed': (_config) => `
function trigger_trigger_jira_service_management_customer_request_status_changed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira-service-management): Implement trigger.jira-service-management:customer_request_status_changed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira-service-management', operation: 'trigger.jira-service-management:customer_request_status_changed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.jira-service-management:customer_request_status_changed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.jira-service-management:sla_breached': (_config) => `
function trigger_trigger_jira_service_management_sla_breached(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira-service-management): Implement trigger.jira-service-management:sla_breached Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira-service-management', operation: 'trigger.jira-service-management:sla_breached' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.jira-service-management:sla_breached. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.jira:comment_added': (_config) => `
function trigger_trigger_jira_comment_added(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira): Implement trigger.jira:comment_added Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira', operation: 'trigger.jira:comment_added' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.jira:comment_added. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.jira:issue_created': (_config) => `
function trigger_trigger_jira_issue_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira): Implement trigger.jira:issue_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira', operation: 'trigger.jira:issue_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.jira:issue_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.jira:issue_status_changed': (_config) => `
function trigger_trigger_jira_issue_status_changed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira): Implement trigger.jira:issue_status_changed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira', operation: 'trigger.jira:issue_status_changed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.jira:issue_status_changed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.jira:issue_updated': (_config) => `
function trigger_trigger_jira_issue_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jira): Implement trigger.jira:issue_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jira', operation: 'trigger.jira:issue_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.jira:issue_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.jotform:form_created': (_config) => `
function trigger_trigger_jotform_form_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jotform): Implement trigger.jotform:form_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jotform', operation: 'trigger.jotform:form_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.jotform:form_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.jotform:form_submission': (_config) => `
function trigger_trigger_jotform_form_submission(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#jotform): Implement trigger.jotform:form_submission Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'jotform', operation: 'trigger.jotform:form_submission' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.jotform:form_submission. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.klaviyo:profile_created': (_config) => `
function trigger_trigger_klaviyo_profile_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#klaviyo): Implement trigger.klaviyo:profile_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'klaviyo', operation: 'trigger.klaviyo:profile_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.klaviyo:profile_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.klaviyo:profile_subscribed': (_config) => `
function trigger_trigger_klaviyo_profile_subscribed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#klaviyo): Implement trigger.klaviyo:profile_subscribed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'klaviyo', operation: 'trigger.klaviyo:profile_subscribed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.klaviyo:profile_subscribed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.klaviyo:profile_unsubscribed': (_config) => `
function trigger_trigger_klaviyo_profile_unsubscribed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#klaviyo): Implement trigger.klaviyo:profile_unsubscribed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'klaviyo', operation: 'trigger.klaviyo:profile_unsubscribed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.klaviyo:profile_unsubscribed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.kubernetes:deployment_updated': (_config) => `
function trigger_trigger_kubernetes_deployment_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#kubernetes): Implement trigger.kubernetes:deployment_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'kubernetes', operation: 'trigger.kubernetes:deployment_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.kubernetes:deployment_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.kubernetes:pod_created': (_config) => `
function trigger_trigger_kubernetes_pod_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#kubernetes): Implement trigger.kubernetes:pod_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'kubernetes', operation: 'trigger.kubernetes:pod_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.kubernetes:pod_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.kustomer:conversation_created': (_config) => `
function trigger_trigger_kustomer_conversation_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#kustomer): Implement trigger.kustomer:conversation_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'kustomer', operation: 'trigger.kustomer:conversation_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.kustomer:conversation_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.kustomer:conversation_updated': (_config) => `
function trigger_trigger_kustomer_conversation_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#kustomer): Implement trigger.kustomer:conversation_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'kustomer', operation: 'trigger.kustomer:conversation_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.kustomer:conversation_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.kustomer:customer_created': (_config) => `
function trigger_trigger_kustomer_customer_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#kustomer): Implement trigger.kustomer:customer_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'kustomer', operation: 'trigger.kustomer:customer_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.kustomer:customer_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.kustomer:message_created': (_config) => `
function trigger_trigger_kustomer_message_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#kustomer): Implement trigger.kustomer:message_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'kustomer', operation: 'trigger.kustomer:message_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.kustomer:message_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.lever:opportunity_archived': (_config) => `
function trigger_trigger_lever_opportunity_archived(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#lever): Implement trigger.lever:opportunity_archived Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'lever', operation: 'trigger.lever:opportunity_archived' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.lever:opportunity_archived. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.lever:opportunity_created': (_config) => `
function trigger_trigger_lever_opportunity_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#lever): Implement trigger.lever:opportunity_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'lever', operation: 'trigger.lever:opportunity_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.lever:opportunity_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.lever:opportunity_stage_changed': (_config) => `
function trigger_trigger_lever_opportunity_stage_changed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#lever): Implement trigger.lever:opportunity_stage_changed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'lever', operation: 'trigger.lever:opportunity_stage_changed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.lever:opportunity_stage_changed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.linear:issue_completed': (_config) => `
function trigger_trigger_linear_issue_completed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#linear): Implement trigger.linear:issue_completed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'linear', operation: 'trigger.linear:issue_completed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.linear:issue_completed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.linear:issue_created': (_config) => `
function trigger_trigger_linear_issue_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#linear): Implement trigger.linear:issue_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'linear', operation: 'trigger.linear:issue_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.linear:issue_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.linear:issue_updated': (_config) => `
function trigger_trigger_linear_issue_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#linear): Implement trigger.linear:issue_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'linear', operation: 'trigger.linear:issue_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.linear:issue_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.llm:text_generated': (_config) => `
function trigger_trigger_llm_text_generated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#llm): Implement trigger.llm:text_generated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'llm', operation: 'trigger.llm:text_generated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.llm:text_generated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.looker:alert_triggered': (_config) => `
function trigger_trigger_looker_alert_triggered(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#looker): Implement trigger.looker:alert_triggered Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'looker', operation: 'trigger.looker:alert_triggered' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.looker:alert_triggered. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.looker:scheduled_plan_run': (_config) => `
function trigger_trigger_looker_scheduled_plan_run(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#looker): Implement trigger.looker:scheduled_plan_run Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'looker', operation: 'trigger.looker:scheduled_plan_run' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.looker:scheduled_plan_run. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.luma:event_created': (_config) => `
function trigger_trigger_luma_event_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#luma): Implement trigger.luma:event_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'luma', operation: 'trigger.luma:event_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.luma:event_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.luma:event_started': (_config) => `
function trigger_trigger_luma_event_started(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#luma): Implement trigger.luma:event_started Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'luma', operation: 'trigger.luma:event_started' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.luma:event_started. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.luma:registration_cancelled': (_config) => `
function trigger_trigger_luma_registration_cancelled(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#luma): Implement trigger.luma:registration_cancelled Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'luma', operation: 'trigger.luma:registration_cancelled' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.luma:registration_cancelled. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.luma:registration_created': (_config) => `
function trigger_trigger_luma_registration_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#luma): Implement trigger.luma:registration_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'luma', operation: 'trigger.luma:registration_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.luma:registration_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.magento:order_created': (_config) => `
function trigger_trigger_magento_order_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#magento): Implement trigger.magento:order_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'magento', operation: 'trigger.magento:order_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.magento:order_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.magento:product_created': (_config) => `
function trigger_trigger_magento_product_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#magento): Implement trigger.magento:product_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'magento', operation: 'trigger.magento:product_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.magento:product_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.mailchimp-enhanced:campaign_sent': (_config) => `
function trigger_trigger_mailchimp_enhanced_campaign_sent(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailchimp-enhanced): Implement trigger.mailchimp-enhanced:campaign_sent Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailchimp-enhanced', operation: 'trigger.mailchimp-enhanced:campaign_sent' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.mailchimp-enhanced:campaign_sent. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.mailchimp-enhanced:subscriber_added': (_config) => `
function trigger_trigger_mailchimp_enhanced_subscriber_added(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailchimp-enhanced): Implement trigger.mailchimp-enhanced:subscriber_added Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailchimp-enhanced', operation: 'trigger.mailchimp-enhanced:subscriber_added' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.mailchimp-enhanced:subscriber_added. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.mailchimp-enhanced:subscriber_updated': (_config) => `
function trigger_trigger_mailchimp_enhanced_subscriber_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailchimp-enhanced): Implement trigger.mailchimp-enhanced:subscriber_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailchimp-enhanced', operation: 'trigger.mailchimp-enhanced:subscriber_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.mailchimp-enhanced:subscriber_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.mailchimp:campaign_sent': (_config) => `
function trigger_trigger_mailchimp_campaign_sent(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailchimp): Implement trigger.mailchimp:campaign_sent Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailchimp', operation: 'trigger.mailchimp:campaign_sent' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.mailchimp:campaign_sent. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.mailchimp:subscriber_added': (_config) => `
function trigger_trigger_mailchimp_subscriber_added(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailchimp): Implement trigger.mailchimp:subscriber_added Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailchimp', operation: 'trigger.mailchimp:subscriber_added' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.mailchimp:subscriber_added. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.mailchimp:subscriber_unsubscribed': (_config) => `
function trigger_trigger_mailchimp_subscriber_unsubscribed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailchimp): Implement trigger.mailchimp:subscriber_unsubscribed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailchimp', operation: 'trigger.mailchimp:subscriber_unsubscribed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.mailchimp:subscriber_unsubscribed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.mailchimp:subscriber_updated': (_config) => `
function trigger_trigger_mailchimp_subscriber_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailchimp): Implement trigger.mailchimp:subscriber_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailchimp', operation: 'trigger.mailchimp:subscriber_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.mailchimp:subscriber_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.mailgun:email_bounced': (_config) => `
function trigger_trigger_mailgun_email_bounced(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailgun): Implement trigger.mailgun:email_bounced Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailgun', operation: 'trigger.mailgun:email_bounced' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.mailgun:email_bounced. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.mailgun:email_clicked': (_config) => `
function trigger_trigger_mailgun_email_clicked(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailgun): Implement trigger.mailgun:email_clicked Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailgun', operation: 'trigger.mailgun:email_clicked' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.mailgun:email_clicked. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.mailgun:email_complained': (_config) => `
function trigger_trigger_mailgun_email_complained(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailgun): Implement trigger.mailgun:email_complained Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailgun', operation: 'trigger.mailgun:email_complained' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.mailgun:email_complained. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.mailgun:email_delivered': (_config) => `
function trigger_trigger_mailgun_email_delivered(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailgun): Implement trigger.mailgun:email_delivered Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailgun', operation: 'trigger.mailgun:email_delivered' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.mailgun:email_delivered. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.mailgun:email_opened': (_config) => `
function trigger_trigger_mailgun_email_opened(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailgun): Implement trigger.mailgun:email_opened Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailgun', operation: 'trigger.mailgun:email_opened' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.mailgun:email_opened. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.mailgun:email_unsubscribed': (_config) => `
function trigger_trigger_mailgun_email_unsubscribed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mailgun): Implement trigger.mailgun:email_unsubscribed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mailgun', operation: 'trigger.mailgun:email_unsubscribed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.mailgun:email_unsubscribed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.marketo:email_delivered': (_config) => `
function trigger_trigger_marketo_email_delivered(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#marketo): Implement trigger.marketo:email_delivered Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'marketo', operation: 'trigger.marketo:email_delivered' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.marketo:email_delivered. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.marketo:email_opened': (_config) => `
function trigger_trigger_marketo_email_opened(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#marketo): Implement trigger.marketo:email_opened Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'marketo', operation: 'trigger.marketo:email_opened' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.marketo:email_opened. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.marketo:lead_activity': (_config) => `
function trigger_trigger_marketo_lead_activity(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#marketo): Implement trigger.marketo:lead_activity Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'marketo', operation: 'trigger.marketo:lead_activity' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.marketo:lead_activity. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.marketo:lead_created': (_config) => `
function trigger_trigger_marketo_lead_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#marketo): Implement trigger.marketo:lead_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'marketo', operation: 'trigger.marketo:lead_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.marketo:lead_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.marketo:lead_updated': (_config) => `
function trigger_trigger_marketo_lead_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#marketo): Implement trigger.marketo:lead_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'marketo', operation: 'trigger.marketo:lead_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.marketo:lead_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.microsoft-teams:member_added': (_config) => `
function trigger_trigger_microsoft_teams_member_added(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#microsoft-teams): Implement trigger.microsoft-teams:member_added Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'microsoft-teams', operation: 'trigger.microsoft-teams:member_added' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.microsoft-teams:member_added. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.microsoft-teams:message_posted': (_config) => `
function trigger_trigger_microsoft_teams_message_posted(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#microsoft-teams): Implement trigger.microsoft-teams:message_posted Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'microsoft-teams', operation: 'trigger.microsoft-teams:message_posted' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.microsoft-teams:message_posted. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.microsoft-teams:team_created': (_config) => `
function trigger_trigger_microsoft_teams_team_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#microsoft-teams): Implement trigger.microsoft-teams:team_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'microsoft-teams', operation: 'trigger.microsoft-teams:team_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.microsoft-teams:team_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.microsoft-todo:task_completed': (_config) => `
function trigger_trigger_microsoft_todo_task_completed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#microsoft-todo): Implement trigger.microsoft-todo:task_completed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'microsoft-todo', operation: 'trigger.microsoft-todo:task_completed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.microsoft-todo:task_completed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.microsoft-todo:task_created': (_config) => `
function trigger_trigger_microsoft_todo_task_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#microsoft-todo): Implement trigger.microsoft-todo:task_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'microsoft-todo', operation: 'trigger.microsoft-todo:task_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.microsoft-todo:task_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.miro:board_created': (_config) => `
function trigger_trigger_miro_board_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#miro): Implement trigger.miro:board_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'miro', operation: 'trigger.miro:board_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.miro:board_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.miro:board_updated': (_config) => `
function trigger_trigger_miro_board_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#miro): Implement trigger.miro:board_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'miro', operation: 'trigger.miro:board_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.miro:board_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.miro:item_created': (_config) => `
function trigger_trigger_miro_item_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#miro): Implement trigger.miro:item_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'miro', operation: 'trigger.miro:item_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.miro:item_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.miro:item_updated': (_config) => `
function trigger_trigger_miro_item_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#miro): Implement trigger.miro:item_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'miro', operation: 'trigger.miro:item_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.miro:item_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.mixpanel:cohort_entered': (_config) => `
function trigger_trigger_mixpanel_cohort_entered(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mixpanel): Implement trigger.mixpanel:cohort_entered Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mixpanel', operation: 'trigger.mixpanel:cohort_entered' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.mixpanel:cohort_entered. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.mixpanel:event_tracked': (_config) => `
function trigger_trigger_mixpanel_event_tracked(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mixpanel): Implement trigger.mixpanel:event_tracked Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mixpanel', operation: 'trigger.mixpanel:event_tracked' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.mixpanel:event_tracked. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.mixpanel:funnel_completed': (_config) => `
function trigger_trigger_mixpanel_funnel_completed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mixpanel): Implement trigger.mixpanel:funnel_completed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mixpanel', operation: 'trigger.mixpanel:funnel_completed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.mixpanel:funnel_completed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.mixpanel:profile_updated': (_config) => `
function trigger_trigger_mixpanel_profile_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#mixpanel): Implement trigger.mixpanel:profile_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'mixpanel', operation: 'trigger.mixpanel:profile_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.mixpanel:profile_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.monday-enhanced:column_value_changed': (_config) => `
function trigger_trigger_monday_enhanced_column_value_changed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#monday-enhanced): Implement trigger.monday-enhanced:column_value_changed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'monday-enhanced', operation: 'trigger.monday-enhanced:column_value_changed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.monday-enhanced:column_value_changed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.monday-enhanced:item_created': (_config) => `
function trigger_trigger_monday_enhanced_item_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#monday-enhanced): Implement trigger.monday-enhanced:item_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'monday-enhanced', operation: 'trigger.monday-enhanced:item_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.monday-enhanced:item_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.monday:column_value_changed': (_config) => `
function trigger_trigger_monday_column_value_changed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#monday): Implement trigger.monday:column_value_changed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'monday', operation: 'trigger.monday:column_value_changed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.monday:column_value_changed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.monday:item_created': (_config) => `
function trigger_trigger_monday_item_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#monday): Implement trigger.monday:item_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'monday', operation: 'trigger.monday:item_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.monday:item_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.monday:item_deleted': (_config) => `
function trigger_trigger_monday_item_deleted(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#monday): Implement trigger.monday:item_deleted Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'monday', operation: 'trigger.monday:item_deleted' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.monday:item_deleted. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.monday:item_updated': (_config) => `
function trigger_trigger_monday_item_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#monday): Implement trigger.monday:item_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'monday', operation: 'trigger.monday:item_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.monday:item_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.navan:expense_submitted': (_config) => `
function trigger_trigger_navan_expense_submitted(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#navan): Implement trigger.navan:expense_submitted Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'navan', operation: 'trigger.navan:expense_submitted' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.navan:expense_submitted. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.netsuite:customer_created': (_config) => `
function trigger_trigger_netsuite_customer_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#netsuite): Implement trigger.netsuite:customer_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'netsuite', operation: 'trigger.netsuite:customer_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.netsuite:customer_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.newrelic:alert_triggered': (_config) => `
function trigger_trigger_newrelic_alert_triggered(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#newrelic): Implement trigger.newrelic:alert_triggered Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'newrelic', operation: 'trigger.newrelic:alert_triggered' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.newrelic:alert_triggered. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.nexus:component_uploaded': (_config) => `
function trigger_trigger_nexus_component_uploaded(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#nexus): Implement trigger.nexus:component_uploaded Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'nexus', operation: 'trigger.nexus:component_uploaded' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.nexus:component_uploaded. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.nexus:security_vulnerability': (_config) => `
function trigger_trigger_nexus_security_vulnerability(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#nexus): Implement trigger.nexus:security_vulnerability Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'nexus', operation: 'trigger.nexus:security_vulnerability' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.nexus:security_vulnerability. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.notion-enhanced:database_created': (_config) => `
function trigger_trigger_notion_enhanced_database_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion-enhanced): Implement trigger.notion-enhanced:database_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion-enhanced', operation: 'trigger.notion-enhanced:database_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.notion-enhanced:database_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.notion-enhanced:database_updated': (_config) => `
function trigger_trigger_notion_enhanced_database_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion-enhanced): Implement trigger.notion-enhanced:database_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion-enhanced', operation: 'trigger.notion-enhanced:database_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.notion-enhanced:database_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.notion-enhanced:page_created': (_config) => `
function trigger_trigger_notion_enhanced_page_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion-enhanced): Implement trigger.notion-enhanced:page_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion-enhanced', operation: 'trigger.notion-enhanced:page_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.notion-enhanced:page_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.notion-enhanced:page_updated': (_config) => `
function trigger_trigger_notion_enhanced_page_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion-enhanced): Implement trigger.notion-enhanced:page_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion-enhanced', operation: 'trigger.notion-enhanced:page_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.notion-enhanced:page_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.notion:database_entry_created': (_config) => `
function trigger_trigger_notion_database_entry_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion): Implement trigger.notion:database_entry_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion', operation: 'trigger.notion:database_entry_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.notion:database_entry_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.notion:page_created': (_config) => `
function trigger_trigger_notion_page_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion): Implement trigger.notion:page_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion', operation: 'trigger.notion:page_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.notion:page_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.notion:page_updated': (_config) => `
function trigger_trigger_notion_page_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#notion): Implement trigger.notion:page_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'notion', operation: 'trigger.notion:page_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.notion:page_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.okta:user_activated': (_config) => `
function trigger_trigger_okta_user_activated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#okta): Implement trigger.okta:user_activated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'okta', operation: 'trigger.okta:user_activated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.okta:user_activated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.okta:user_created': (_config) => `
function trigger_trigger_okta_user_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#okta): Implement trigger.okta:user_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'okta', operation: 'trigger.okta:user_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.okta:user_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.okta:user_deactivated': (_config) => `
function trigger_trigger_okta_user_deactivated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#okta): Implement trigger.okta:user_deactivated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'okta', operation: 'trigger.okta:user_deactivated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.okta:user_deactivated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.onedrive:file_uploaded': (_config) => `
function trigger_trigger_onedrive_file_uploaded(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#onedrive): Implement trigger.onedrive:file_uploaded Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'onedrive', operation: 'trigger.onedrive:file_uploaded' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.onedrive:file_uploaded. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.opsgenie:alert_acknowledged': (_config) => `
function trigger_trigger_opsgenie_alert_acknowledged(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#opsgenie): Implement trigger.opsgenie:alert_acknowledged Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'opsgenie', operation: 'trigger.opsgenie:alert_acknowledged' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.opsgenie:alert_acknowledged. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.opsgenie:alert_closed': (_config) => `
function trigger_trigger_opsgenie_alert_closed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#opsgenie): Implement trigger.opsgenie:alert_closed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'opsgenie', operation: 'trigger.opsgenie:alert_closed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.opsgenie:alert_closed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.opsgenie:alert_created': (_config) => `
function trigger_trigger_opsgenie_alert_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#opsgenie): Implement trigger.opsgenie:alert_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'opsgenie', operation: 'trigger.opsgenie:alert_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.opsgenie:alert_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.outlook:calendar_event_created': (_config) => `
function trigger_trigger_outlook_calendar_event_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#outlook): Implement trigger.outlook:calendar_event_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'outlook', operation: 'trigger.outlook:calendar_event_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.outlook:calendar_event_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.outlook:new_email': (_config) => `
function trigger_trigger_outlook_new_email(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#outlook): Implement trigger.outlook:new_email Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'outlook', operation: 'trigger.outlook:new_email' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.outlook:new_email. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.pagerduty:incident_acknowledged': (_config) => `
function trigger_trigger_pagerduty_incident_acknowledged(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pagerduty): Implement trigger.pagerduty:incident_acknowledged Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pagerduty', operation: 'trigger.pagerduty:incident_acknowledged' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.pagerduty:incident_acknowledged. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.pagerduty:incident_resolved': (_config) => `
function trigger_trigger_pagerduty_incident_resolved(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pagerduty): Implement trigger.pagerduty:incident_resolved Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pagerduty', operation: 'trigger.pagerduty:incident_resolved' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.pagerduty:incident_resolved. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.pagerduty:incident_triggered': (_config) => `
function trigger_trigger_pagerduty_incident_triggered(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pagerduty): Implement trigger.pagerduty:incident_triggered Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pagerduty', operation: 'trigger.pagerduty:incident_triggered' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.pagerduty:incident_triggered. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.pardot:prospect_created': (_config) => `
function trigger_trigger_pardot_prospect_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pardot): Implement trigger.pardot:prospect_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pardot', operation: 'trigger.pardot:prospect_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.pardot:prospect_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.paypal:checkout_order_approved': (_config) => `
function trigger_trigger_paypal_checkout_order_approved(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#paypal): Implement trigger.paypal:checkout_order_approved Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'paypal', operation: 'trigger.paypal:checkout_order_approved' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.paypal:checkout_order_approved. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.paypal:payment_order_created': (_config) => `
function trigger_trigger_paypal_payment_order_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#paypal): Implement trigger.paypal:payment_order_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'paypal', operation: 'trigger.paypal:payment_order_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.paypal:payment_order_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.paypal:payment_sale_completed': (_config) => `
function trigger_trigger_paypal_payment_sale_completed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#paypal): Implement trigger.paypal:payment_sale_completed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'paypal', operation: 'trigger.paypal:payment_sale_completed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.paypal:payment_sale_completed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.paypal:payment_sale_refunded': (_config) => `
function trigger_trigger_paypal_payment_sale_refunded(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#paypal): Implement trigger.paypal:payment_sale_refunded Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'paypal', operation: 'trigger.paypal:payment_sale_refunded' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.paypal:payment_sale_refunded. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.pipedrive:deal_created': (_config) => `
function trigger_trigger_pipedrive_deal_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pipedrive): Implement trigger.pipedrive:deal_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pipedrive', operation: 'trigger.pipedrive:deal_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.pipedrive:deal_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.pipedrive:deal_updated': (_config) => `
function trigger_trigger_pipedrive_deal_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#pipedrive): Implement trigger.pipedrive:deal_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'pipedrive', operation: 'trigger.pipedrive:deal_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.pipedrive:deal_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.powerbi-enhanced:dataflow_refreshed': (_config) => `
function trigger_trigger_powerbi_enhanced_dataflow_refreshed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#powerbi-enhanced): Implement trigger.powerbi-enhanced:dataflow_refreshed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'powerbi-enhanced', operation: 'trigger.powerbi-enhanced:dataflow_refreshed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.powerbi-enhanced:dataflow_refreshed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.powerbi-enhanced:dataset_refreshed': (_config) => `
function trigger_trigger_powerbi_enhanced_dataset_refreshed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#powerbi-enhanced): Implement trigger.powerbi-enhanced:dataset_refreshed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'powerbi-enhanced', operation: 'trigger.powerbi-enhanced:dataset_refreshed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.powerbi-enhanced:dataset_refreshed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.powerbi-enhanced:report_created': (_config) => `
function trigger_trigger_powerbi_enhanced_report_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#powerbi-enhanced): Implement trigger.powerbi-enhanced:report_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'powerbi-enhanced', operation: 'trigger.powerbi-enhanced:report_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.powerbi-enhanced:report_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.powerbi:dataset_refresh_completed': (_config) => `
function trigger_trigger_powerbi_dataset_refresh_completed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#powerbi): Implement trigger.powerbi:dataset_refresh_completed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'powerbi', operation: 'trigger.powerbi:dataset_refresh_completed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.powerbi:dataset_refresh_completed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.prometheus:alert_fired': (_config) => `
function trigger_trigger_prometheus_alert_fired(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#prometheus): Implement trigger.prometheus:alert_fired Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'prometheus', operation: 'trigger.prometheus:alert_fired' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.prometheus:alert_fired. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.prometheus:target_down': (_config) => `
function trigger_trigger_prometheus_target_down(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#prometheus): Implement trigger.prometheus:target_down Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'prometheus', operation: 'trigger.prometheus:target_down' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.prometheus:target_down. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.qualtrics:response_created': (_config) => `
function trigger_trigger_qualtrics_response_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#qualtrics): Implement trigger.qualtrics:response_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'qualtrics', operation: 'trigger.qualtrics:response_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.qualtrics:response_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.quickbooks:customer_created': (_config) => `
function trigger_trigger_quickbooks_customer_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#quickbooks): Implement trigger.quickbooks:customer_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'quickbooks', operation: 'trigger.quickbooks:customer_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.quickbooks:customer_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.quickbooks:invoice_created': (_config) => `
function trigger_trigger_quickbooks_invoice_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#quickbooks): Implement trigger.quickbooks:invoice_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'quickbooks', operation: 'trigger.quickbooks:invoice_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.quickbooks:invoice_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.quickbooks:payment_received': (_config) => `
function trigger_trigger_quickbooks_payment_received(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#quickbooks): Implement trigger.quickbooks:payment_received Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'quickbooks', operation: 'trigger.quickbooks:payment_received' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.quickbooks:payment_received. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.ramp:transaction_created': (_config) => `
function trigger_trigger_ramp_transaction_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#ramp): Implement trigger.ramp:transaction_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'ramp', operation: 'trigger.ramp:transaction_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.ramp:transaction_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.razorpay:payment_captured': (_config) => `
function trigger_trigger_razorpay_payment_captured(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#razorpay): Implement trigger.razorpay:payment_captured Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'razorpay', operation: 'trigger.razorpay:payment_captured' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.razorpay:payment_captured. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.razorpay:payment_failed': (_config) => `
function trigger_trigger_razorpay_payment_failed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#razorpay): Implement trigger.razorpay:payment_failed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'razorpay', operation: 'trigger.razorpay:payment_failed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.razorpay:payment_failed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.ringcentral:call_started': (_config) => `
function trigger_trigger_ringcentral_call_started(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#ringcentral): Implement trigger.ringcentral:call_started Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'ringcentral', operation: 'trigger.ringcentral:call_started' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.ringcentral:call_started. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.ringcentral:message_received': (_config) => `
function trigger_trigger_ringcentral_message_received(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#ringcentral): Implement trigger.ringcentral:message_received Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'ringcentral', operation: 'trigger.ringcentral:message_received' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.ringcentral:message_received. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.sageintacct:invoice_created': (_config) => `
function trigger_trigger_sageintacct_invoice_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sageintacct): Implement trigger.sageintacct:invoice_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sageintacct', operation: 'trigger.sageintacct:invoice_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.sageintacct:invoice_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.salesforce-enhanced:record_created': (_config) => `
function trigger_trigger_salesforce_enhanced_record_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#salesforce-enhanced): Implement trigger.salesforce-enhanced:record_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'salesforce-enhanced', operation: 'trigger.salesforce-enhanced:record_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.salesforce-enhanced:record_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.salesforce-enhanced:record_updated': (_config) => `
function trigger_trigger_salesforce_enhanced_record_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#salesforce-enhanced): Implement trigger.salesforce-enhanced:record_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'salesforce-enhanced', operation: 'trigger.salesforce-enhanced:record_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.salesforce-enhanced:record_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.salesforce:record_created': (_config) => `
function trigger_trigger_salesforce_record_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#salesforce): Implement trigger.salesforce:record_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'salesforce', operation: 'trigger.salesforce:record_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.salesforce:record_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.sap-ariba:contract_approved': (_config) => `
function trigger_trigger_sap_ariba_contract_approved(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sap-ariba): Implement trigger.sap-ariba:contract_approved Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sap-ariba', operation: 'trigger.sap-ariba:contract_approved' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.sap-ariba:contract_approved. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.sap-ariba:invoice_received': (_config) => `
function trigger_trigger_sap_ariba_invoice_received(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sap-ariba): Implement trigger.sap-ariba:invoice_received Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sap-ariba', operation: 'trigger.sap-ariba:invoice_received' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.sap-ariba:invoice_received. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.sap-ariba:purchase_order_created': (_config) => `
function trigger_trigger_sap_ariba_purchase_order_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sap-ariba): Implement trigger.sap-ariba:purchase_order_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sap-ariba', operation: 'trigger.sap-ariba:purchase_order_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.sap-ariba:purchase_order_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.sendgrid:email_clicked': (_config) => `
function trigger_trigger_sendgrid_email_clicked(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sendgrid): Implement trigger.sendgrid:email_clicked Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sendgrid', operation: 'trigger.sendgrid:email_clicked' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.sendgrid:email_clicked. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.sendgrid:email_delivered': (_config) => `
function trigger_trigger_sendgrid_email_delivered(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sendgrid): Implement trigger.sendgrid:email_delivered Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sendgrid', operation: 'trigger.sendgrid:email_delivered' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.sendgrid:email_delivered. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.sendgrid:email_opened': (_config) => `
function trigger_trigger_sendgrid_email_opened(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sendgrid): Implement trigger.sendgrid:email_opened Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sendgrid', operation: 'trigger.sendgrid:email_opened' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.sendgrid:email_opened. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.sentry:error_event': (_config) => `
function trigger_trigger_sentry_error_event(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sentry): Implement trigger.sentry:error_event Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sentry', operation: 'trigger.sentry:error_event' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.sentry:error_event. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.sentry:issue_created': (_config) => `
function trigger_trigger_sentry_issue_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sentry): Implement trigger.sentry:issue_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sentry', operation: 'trigger.sentry:issue_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.sentry:issue_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.sentry:issue_resolved': (_config) => `
function trigger_trigger_sentry_issue_resolved(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sentry): Implement trigger.sentry:issue_resolved Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sentry', operation: 'trigger.sentry:issue_resolved' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.sentry:issue_resolved. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.sentry:release_deployed': (_config) => `
function trigger_trigger_sentry_release_deployed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sentry): Implement trigger.sentry:release_deployed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sentry', operation: 'trigger.sentry:release_deployed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.sentry:release_deployed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.servicenow:incident_created': (_config) => `
function trigger_trigger_servicenow_incident_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#servicenow): Implement trigger.servicenow:incident_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'servicenow', operation: 'trigger.servicenow:incident_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.servicenow:incident_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.servicenow:incident_updated': (_config) => `
function trigger_trigger_servicenow_incident_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#servicenow): Implement trigger.servicenow:incident_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'servicenow', operation: 'trigger.servicenow:incident_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.servicenow:incident_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.sharepoint:file_added': (_config) => `
function trigger_trigger_sharepoint_file_added(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sharepoint): Implement trigger.sharepoint:file_added Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sharepoint', operation: 'trigger.sharepoint:file_added' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.sharepoint:file_added. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.sharepoint:file_updated': (_config) => `
function trigger_trigger_sharepoint_file_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sharepoint): Implement trigger.sharepoint:file_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sharepoint', operation: 'trigger.sharepoint:file_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.sharepoint:file_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.sharepoint:list_item_added': (_config) => `
function trigger_trigger_sharepoint_list_item_added(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sharepoint): Implement trigger.sharepoint:list_item_added Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sharepoint', operation: 'trigger.sharepoint:list_item_added' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.sharepoint:list_item_added. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.sharepoint:list_item_updated': (_config) => `
function trigger_trigger_sharepoint_list_item_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sharepoint): Implement trigger.sharepoint:list_item_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sharepoint', operation: 'trigger.sharepoint:list_item_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.sharepoint:list_item_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.shopify-enhanced:customer_created': (_config) => `
function trigger_trigger_shopify_enhanced_customer_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#shopify-enhanced): Implement trigger.shopify-enhanced:customer_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'shopify-enhanced', operation: 'trigger.shopify-enhanced:customer_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.shopify-enhanced:customer_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.shopify-enhanced:order_created': (_config) => `
function trigger_trigger_shopify_enhanced_order_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#shopify-enhanced): Implement trigger.shopify-enhanced:order_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'shopify-enhanced', operation: 'trigger.shopify-enhanced:order_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.shopify-enhanced:order_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.shopify-enhanced:product_created': (_config) => `
function trigger_trigger_shopify_enhanced_product_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#shopify-enhanced): Implement trigger.shopify-enhanced:product_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'shopify-enhanced', operation: 'trigger.shopify-enhanced:product_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.shopify-enhanced:product_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.shopify:customer_created': (_config) => `
function trigger_trigger_shopify_customer_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#shopify): Implement trigger.shopify:customer_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'shopify', operation: 'trigger.shopify:customer_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.shopify:customer_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.shopify:order_created': (_config) => `
function trigger_trigger_shopify_order_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#shopify): Implement trigger.shopify:order_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'shopify', operation: 'trigger.shopify:order_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.shopify:order_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.shopify:order_paid': (_config) => `
function trigger_trigger_shopify_order_paid(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#shopify): Implement trigger.shopify:order_paid Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'shopify', operation: 'trigger.shopify:order_paid' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.shopify:order_paid. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.shopify:order_updated': (_config) => `
function trigger_trigger_shopify_order_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#shopify): Implement trigger.shopify:order_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'shopify', operation: 'trigger.shopify:order_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.shopify:order_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.shopify:product_created': (_config) => `
function trigger_trigger_shopify_product_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#shopify): Implement trigger.shopify:product_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'shopify', operation: 'trigger.shopify:product_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.shopify:product_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.slab:post_created': (_config) => `
function trigger_trigger_slab_post_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slab): Implement trigger.slab:post_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slab', operation: 'trigger.slab:post_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.slab:post_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.slab:post_updated': (_config) => `
function trigger_trigger_slab_post_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slab): Implement trigger.slab:post_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slab', operation: 'trigger.slab:post_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.slab:post_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.slack-enhanced:new_channel': (_config) => `
function trigger_trigger_slack_enhanced_new_channel(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack-enhanced): Implement trigger.slack-enhanced:new_channel Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack-enhanced', operation: 'trigger.slack-enhanced:new_channel' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.slack-enhanced:new_channel. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.slack-enhanced:new_file': (_config) => `
function trigger_trigger_slack_enhanced_new_file(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack-enhanced): Implement trigger.slack-enhanced:new_file Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack-enhanced', operation: 'trigger.slack-enhanced:new_file' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.slack-enhanced:new_file. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.slack-enhanced:new_message': (_config) => `
function trigger_trigger_slack_enhanced_new_message(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack-enhanced): Implement trigger.slack-enhanced:new_message Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack-enhanced', operation: 'trigger.slack-enhanced:new_message' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.slack-enhanced:new_message. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.slack-enhanced:reaction_added': (_config) => `
function trigger_trigger_slack_enhanced_reaction_added(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack-enhanced): Implement trigger.slack-enhanced:reaction_added Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack-enhanced', operation: 'trigger.slack-enhanced:reaction_added' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.slack-enhanced:reaction_added. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.slack:message_received': (_config) => `
function trigger_trigger_slack_message_received(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack): Implement trigger.slack:message_received Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack', operation: 'trigger.slack:message_received' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.slack:message_received. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.slack:reaction_added': (_config) => `
function trigger_trigger_slack_reaction_added(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack): Implement trigger.slack:reaction_added Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack', operation: 'trigger.slack:reaction_added' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.slack:reaction_added. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.slack:user_joined_channel': (_config) => `
function trigger_trigger_slack_user_joined_channel(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#slack): Implement trigger.slack:user_joined_channel Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'slack', operation: 'trigger.slack:user_joined_channel' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.slack:user_joined_channel. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.smartsheet:row_added': (_config) => `
function trigger_trigger_smartsheet_row_added(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#smartsheet): Implement trigger.smartsheet:row_added Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'smartsheet', operation: 'trigger.smartsheet:row_added' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.smartsheet:row_added. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.smartsheet:row_updated': (_config) => `
function trigger_trigger_smartsheet_row_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#smartsheet): Implement trigger.smartsheet:row_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'smartsheet', operation: 'trigger.smartsheet:row_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.smartsheet:row_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.smartsheet:sheet_created': (_config) => `
function trigger_trigger_smartsheet_sheet_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#smartsheet): Implement trigger.smartsheet:sheet_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'smartsheet', operation: 'trigger.smartsheet:sheet_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.smartsheet:sheet_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.snowflake:data_loaded': (_config) => `
function trigger_trigger_snowflake_data_loaded(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#snowflake): Implement trigger.snowflake:data_loaded Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'snowflake', operation: 'trigger.snowflake:data_loaded' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.snowflake:data_loaded. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.snowflake:query_completed': (_config) => `
function trigger_trigger_snowflake_query_completed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#snowflake): Implement trigger.snowflake:query_completed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'snowflake', operation: 'trigger.snowflake:query_completed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.snowflake:query_completed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.sonarqube:analysis_completed': (_config) => `
function trigger_trigger_sonarqube_analysis_completed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sonarqube): Implement trigger.sonarqube:analysis_completed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sonarqube', operation: 'trigger.sonarqube:analysis_completed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.sonarqube:analysis_completed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.sonarqube:quality_gate_changed': (_config) => `
function trigger_trigger_sonarqube_quality_gate_changed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#sonarqube): Implement trigger.sonarqube:quality_gate_changed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'sonarqube', operation: 'trigger.sonarqube:quality_gate_changed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.sonarqube:quality_gate_changed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.square:order_created': (_config) => `
function trigger_trigger_square_order_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#square): Implement trigger.square:order_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'square', operation: 'trigger.square:order_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.square:order_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.square:payment_created': (_config) => `
function trigger_trigger_square_payment_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#square): Implement trigger.square:payment_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'square', operation: 'trigger.square:payment_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.square:payment_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.stripe-enhanced:customer_created': (_config) => `
function trigger_trigger_stripe_enhanced_customer_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#stripe-enhanced): Implement trigger.stripe-enhanced:customer_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'stripe-enhanced', operation: 'trigger.stripe-enhanced:customer_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.stripe-enhanced:customer_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.stripe-enhanced:payment_intent_succeeded': (_config) => `
function trigger_trigger_stripe_enhanced_payment_intent_succeeded(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#stripe-enhanced): Implement trigger.stripe-enhanced:payment_intent_succeeded Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'stripe-enhanced', operation: 'trigger.stripe-enhanced:payment_intent_succeeded' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.stripe-enhanced:payment_intent_succeeded. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.stripe:invoice_payment_succeeded': (_config) => `
function trigger_trigger_stripe_invoice_payment_succeeded(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#stripe): Implement trigger.stripe:invoice_payment_succeeded Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'stripe', operation: 'trigger.stripe:invoice_payment_succeeded' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.stripe:invoice_payment_succeeded. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.stripe:payment_failed': (_config) => `
function trigger_trigger_stripe_payment_failed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#stripe): Implement trigger.stripe:payment_failed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'stripe', operation: 'trigger.stripe:payment_failed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.stripe:payment_failed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.stripe:payment_succeeded': (_config) => `
function trigger_trigger_stripe_payment_succeeded(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#stripe): Implement trigger.stripe:payment_succeeded Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'stripe', operation: 'trigger.stripe:payment_succeeded' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.stripe:payment_succeeded. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.stripe:subscription_created': (_config) => `
function trigger_trigger_stripe_subscription_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#stripe): Implement trigger.stripe:subscription_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'stripe', operation: 'trigger.stripe:subscription_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.stripe:subscription_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.successfactors:employee_created': (_config) => `
function trigger_trigger_successfactors_employee_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#successfactors): Implement trigger.successfactors:employee_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'successfactors', operation: 'trigger.successfactors:employee_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.successfactors:employee_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.successfactors:employee_updated': (_config) => `
function trigger_trigger_successfactors_employee_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#successfactors): Implement trigger.successfactors:employee_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'successfactors', operation: 'trigger.successfactors:employee_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.successfactors:employee_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.surveymonkey:collector_created': (_config) => `
function trigger_trigger_surveymonkey_collector_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#surveymonkey): Implement trigger.surveymonkey:collector_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'surveymonkey', operation: 'trigger.surveymonkey:collector_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.surveymonkey:collector_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.surveymonkey:survey_created': (_config) => `
function trigger_trigger_surveymonkey_survey_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#surveymonkey): Implement trigger.surveymonkey:survey_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'surveymonkey', operation: 'trigger.surveymonkey:survey_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.surveymonkey:survey_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.surveymonkey:survey_response_completed': (_config) => `
function trigger_trigger_surveymonkey_survey_response_completed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#surveymonkey): Implement trigger.surveymonkey:survey_response_completed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'surveymonkey', operation: 'trigger.surveymonkey:survey_response_completed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.surveymonkey:survey_response_completed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.tableau:extract_refreshed': (_config) => `
function trigger_trigger_tableau_extract_refreshed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#tableau): Implement trigger.tableau:extract_refreshed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'tableau', operation: 'trigger.tableau:extract_refreshed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.tableau:extract_refreshed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.tableau:workbook_published': (_config) => `
function trigger_trigger_tableau_workbook_published(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#tableau): Implement trigger.tableau:workbook_published Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'tableau', operation: 'trigger.tableau:workbook_published' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.tableau:workbook_published. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.talkdesk:call_ended': (_config) => `
function trigger_trigger_talkdesk_call_ended(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#talkdesk): Implement trigger.talkdesk:call_ended Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'talkdesk', operation: 'trigger.talkdesk:call_ended' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.talkdesk:call_ended. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.talkdesk:ticket_created': (_config) => `
function trigger_trigger_talkdesk_ticket_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#talkdesk): Implement trigger.talkdesk:ticket_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'talkdesk', operation: 'trigger.talkdesk:ticket_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.talkdesk:ticket_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.talkdesk:ticket_status_changed': (_config) => `
function trigger_trigger_talkdesk_ticket_status_changed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#talkdesk): Implement trigger.talkdesk:ticket_status_changed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'talkdesk', operation: 'trigger.talkdesk:ticket_status_changed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.talkdesk:ticket_status_changed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.teamwork:project_created': (_config) => `
function trigger_trigger_teamwork_project_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#teamwork): Implement trigger.teamwork:project_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'teamwork', operation: 'trigger.teamwork:project_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.teamwork:project_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.teamwork:task_completed': (_config) => `
function trigger_trigger_teamwork_task_completed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#teamwork): Implement trigger.teamwork:task_completed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'teamwork', operation: 'trigger.teamwork:task_completed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.teamwork:task_completed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.teamwork:task_created': (_config) => `
function trigger_trigger_teamwork_task_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#teamwork): Implement trigger.teamwork:task_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'teamwork', operation: 'trigger.teamwork:task_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.teamwork:task_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.teamwork:time_entry_created': (_config) => `
function trigger_trigger_teamwork_time_entry_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#teamwork): Implement trigger.teamwork:time_entry_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'teamwork', operation: 'trigger.teamwork:time_entry_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.teamwork:time_entry_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.terraform-cloud:run_completed': (_config) => `
function trigger_trigger_terraform_cloud_run_completed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#terraform-cloud): Implement trigger.terraform-cloud:run_completed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'terraform-cloud', operation: 'trigger.terraform-cloud:run_completed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.terraform-cloud:run_completed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.terraform-cloud:workspace_created': (_config) => `
function trigger_trigger_terraform_cloud_workspace_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#terraform-cloud): Implement trigger.terraform-cloud:workspace_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'terraform-cloud', operation: 'trigger.terraform-cloud:workspace_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.terraform-cloud:workspace_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.toggl:project_created': (_config) => `
function trigger_trigger_toggl_project_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#toggl): Implement trigger.toggl:project_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'toggl', operation: 'trigger.toggl:project_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.toggl:project_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.toggl:time_entry_created': (_config) => `
function trigger_trigger_toggl_time_entry_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#toggl): Implement trigger.toggl:time_entry_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'toggl', operation: 'trigger.toggl:time_entry_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.toggl:time_entry_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.toggl:time_entry_deleted': (_config) => `
function trigger_trigger_toggl_time_entry_deleted(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#toggl): Implement trigger.toggl:time_entry_deleted Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'toggl', operation: 'trigger.toggl:time_entry_deleted' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.toggl:time_entry_deleted. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.toggl:time_entry_updated': (_config) => `
function trigger_trigger_toggl_time_entry_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#toggl): Implement trigger.toggl:time_entry_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'toggl', operation: 'trigger.toggl:time_entry_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.toggl:time_entry_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.trello-enhanced:card_created': (_config) => `
function trigger_trigger_trello_enhanced_card_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#trello-enhanced): Implement trigger.trello-enhanced:card_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'trello-enhanced', operation: 'trigger.trello-enhanced:card_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.trello-enhanced:card_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.trello-enhanced:card_moved': (_config) => `
function trigger_trigger_trello_enhanced_card_moved(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#trello-enhanced): Implement trigger.trello-enhanced:card_moved Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'trello-enhanced', operation: 'trigger.trello-enhanced:card_moved' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.trello-enhanced:card_moved. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.trello-enhanced:checklist_item_completed': (_config) => `
function trigger_trigger_trello_enhanced_checklist_item_completed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#trello-enhanced): Implement trigger.trello-enhanced:checklist_item_completed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'trello-enhanced', operation: 'trigger.trello-enhanced:checklist_item_completed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.trello-enhanced:checklist_item_completed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.trello:card_created': (_config) => `
function trigger_trigger_trello_card_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#trello): Implement trigger.trello:card_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'trello', operation: 'trigger.trello:card_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.trello:card_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.trello:card_moved': (_config) => `
function trigger_trigger_trello_card_moved(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#trello): Implement trigger.trello:card_moved Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'trello', operation: 'trigger.trello:card_moved' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.trello:card_moved. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.trello:card_updated': (_config) => `
function trigger_trigger_trello_card_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#trello): Implement trigger.trello:card_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'trello', operation: 'trigger.trello:card_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.trello:card_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.trello:list_created': (_config) => `
function trigger_trigger_trello_list_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#trello): Implement trigger.trello:list_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'trello', operation: 'trigger.trello:list_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.trello:list_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.twilio:call_status_changed': (_config) => `
function trigger_trigger_twilio_call_status_changed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#twilio): Implement trigger.twilio:call_status_changed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'twilio', operation: 'trigger.twilio:call_status_changed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.twilio:call_status_changed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.twilio:incoming_call': (_config) => `
function trigger_trigger_twilio_incoming_call(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#twilio): Implement trigger.twilio:incoming_call Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'twilio', operation: 'trigger.twilio:incoming_call' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.twilio:incoming_call. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.twilio:incoming_sms': (_config) => `
function trigger_trigger_twilio_incoming_sms(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#twilio): Implement trigger.twilio:incoming_sms Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'twilio', operation: 'trigger.twilio:incoming_sms' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.twilio:incoming_sms. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.twilio:message_status_changed': (_config) => `
function trigger_trigger_twilio_message_status_changed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#twilio): Implement trigger.twilio:message_status_changed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'twilio', operation: 'trigger.twilio:message_status_changed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.twilio:message_status_changed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.typeform:form_created': (_config) => `
function trigger_trigger_typeform_form_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#typeform): Implement trigger.typeform:form_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'typeform', operation: 'trigger.typeform:form_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.typeform:form_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.typeform:form_response': (_config) => `
function trigger_trigger_typeform_form_response(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#typeform): Implement trigger.typeform:form_response Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'typeform', operation: 'trigger.typeform:form_response' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.typeform:form_response. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.victorops:incident_acked': (_config) => `
function trigger_trigger_victorops_incident_acked(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#victorops): Implement trigger.victorops:incident_acked Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'victorops', operation: 'trigger.victorops:incident_acked' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.victorops:incident_acked. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.victorops:incident_resolved': (_config) => `
function trigger_trigger_victorops_incident_resolved(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#victorops): Implement trigger.victorops:incident_resolved Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'victorops', operation: 'trigger.victorops:incident_resolved' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.victorops:incident_resolved. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.victorops:incident_triggered': (_config) => `
function trigger_trigger_victorops_incident_triggered(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#victorops): Implement trigger.victorops:incident_triggered Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'victorops', operation: 'trigger.victorops:incident_triggered' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.victorops:incident_triggered. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.webex:meeting_started': (_config) => `
function trigger_trigger_webex_meeting_started(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#webex): Implement trigger.webex:meeting_started Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'webex', operation: 'trigger.webex:meeting_started' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.webex:meeting_started. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.webex:message_created': (_config) => `
function trigger_trigger_webex_message_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#webex): Implement trigger.webex:message_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'webex', operation: 'trigger.webex:message_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.webex:message_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.webex:room_created': (_config) => `
function trigger_trigger_webex_room_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#webex): Implement trigger.webex:room_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'webex', operation: 'trigger.webex:room_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.webex:room_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.webflow:collection_item_changed': (_config) => `
function trigger_trigger_webflow_collection_item_changed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#webflow): Implement trigger.webflow:collection_item_changed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'webflow', operation: 'trigger.webflow:collection_item_changed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.webflow:collection_item_changed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.webflow:collection_item_created': (_config) => `
function trigger_trigger_webflow_collection_item_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#webflow): Implement trigger.webflow:collection_item_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'webflow', operation: 'trigger.webflow:collection_item_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.webflow:collection_item_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.webflow:form_submission': (_config) => `
function trigger_trigger_webflow_form_submission(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#webflow): Implement trigger.webflow:form_submission Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'webflow', operation: 'trigger.webflow:form_submission' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.webflow:form_submission. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.webflow:site_published': (_config) => `
function trigger_trigger_webflow_site_published(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#webflow): Implement trigger.webflow:site_published Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'webflow', operation: 'trigger.webflow:site_published' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.webflow:site_published. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.woocommerce:order_created': (_config) => `
function trigger_trigger_woocommerce_order_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#woocommerce): Implement trigger.woocommerce:order_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'woocommerce', operation: 'trigger.woocommerce:order_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.woocommerce:order_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.woocommerce:product_created': (_config) => `
function trigger_trigger_woocommerce_product_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#woocommerce): Implement trigger.woocommerce:product_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'woocommerce', operation: 'trigger.woocommerce:product_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.woocommerce:product_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.workday:compensation_changed': (_config) => `
function trigger_trigger_workday_compensation_changed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workday): Implement trigger.workday:compensation_changed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workday', operation: 'trigger.workday:compensation_changed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.workday:compensation_changed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.workday:time_off_requested': (_config) => `
function trigger_trigger_workday_time_off_requested(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workday): Implement trigger.workday:time_off_requested Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workday', operation: 'trigger.workday:time_off_requested' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.workday:time_off_requested. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.workday:worker_hired': (_config) => `
function trigger_trigger_workday_worker_hired(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workday): Implement trigger.workday:worker_hired Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workday', operation: 'trigger.workday:worker_hired' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.workday:worker_hired. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.workday:worker_terminated': (_config) => `
function trigger_trigger_workday_worker_terminated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workday): Implement trigger.workday:worker_terminated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workday', operation: 'trigger.workday:worker_terminated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.workday:worker_terminated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.workfront:project_created': (_config) => `
function trigger_trigger_workfront_project_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workfront): Implement trigger.workfront:project_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workfront', operation: 'trigger.workfront:project_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.workfront:project_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.workfront:task_completed': (_config) => `
function trigger_trigger_workfront_task_completed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workfront): Implement trigger.workfront:task_completed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workfront', operation: 'trigger.workfront:task_completed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.workfront:task_completed. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.workfront:task_created': (_config) => `
function trigger_trigger_workfront_task_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#workfront): Implement trigger.workfront:task_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'workfront', operation: 'trigger.workfront:task_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.workfront:task_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.xero:contact_created': (_config) => `
function trigger_trigger_xero_contact_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#xero): Implement trigger.xero:contact_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'xero', operation: 'trigger.xero:contact_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.xero:contact_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.xero:invoice_created': (_config) => `
function trigger_trigger_xero_invoice_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#xero): Implement trigger.xero:invoice_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'xero', operation: 'trigger.xero:invoice_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.xero:invoice_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.xero:payment_created': (_config) => `
function trigger_trigger_xero_payment_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#xero): Implement trigger.xero:payment_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'xero', operation: 'trigger.xero:payment_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.xero:payment_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.zendesk:ticket_created': (_config) => `
function trigger_trigger_zendesk_ticket_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zendesk): Implement trigger.zendesk:ticket_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zendesk', operation: 'trigger.zendesk:ticket_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.zendesk:ticket_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.zendesk:ticket_updated': (_config) => `
function trigger_trigger_zendesk_ticket_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zendesk): Implement trigger.zendesk:ticket_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zendesk', operation: 'trigger.zendesk:ticket_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.zendesk:ticket_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.zendesk:user_created': (_config) => `
function trigger_trigger_zendesk_user_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zendesk): Implement trigger.zendesk:user_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zendesk', operation: 'trigger.zendesk:user_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.zendesk:user_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.zoho-books:expense_created': (_config) => `
function trigger_trigger_zoho_books_expense_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoho-books): Implement trigger.zoho-books:expense_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoho-books', operation: 'trigger.zoho-books:expense_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.zoho-books:expense_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.zoho-books:invoice_created': (_config) => `
function trigger_trigger_zoho_books_invoice_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoho-books): Implement trigger.zoho-books:invoice_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoho-books', operation: 'trigger.zoho-books:invoice_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.zoho-books:invoice_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.zoho-books:payment_received': (_config) => `
function trigger_trigger_zoho_books_payment_received(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoho-books): Implement trigger.zoho-books:payment_received Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoho-books', operation: 'trigger.zoho-books:payment_received' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.zoho-books:payment_received. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.zoho-crm:lead_converted': (_config) => `
function trigger_trigger_zoho_crm_lead_converted(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoho-crm): Implement trigger.zoho-crm:lead_converted Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoho-crm', operation: 'trigger.zoho-crm:lead_converted' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.zoho-crm:lead_converted. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.zoho-crm:record_created': (_config) => `
function trigger_trigger_zoho_crm_record_created(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoho-crm): Implement trigger.zoho-crm:record_created Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoho-crm', operation: 'trigger.zoho-crm:record_created' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.zoho-crm:record_created. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.zoho-crm:record_updated': (_config) => `
function trigger_trigger_zoho_crm_record_updated(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoho-crm): Implement trigger.zoho-crm:record_updated Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoho-crm', operation: 'trigger.zoho-crm:record_updated' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.zoho-crm:record_updated. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.zoom-enhanced:meeting_ended': (_config) => `
function trigger_trigger_zoom_enhanced_meeting_ended(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoom-enhanced): Implement trigger.zoom-enhanced:meeting_ended Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoom-enhanced', operation: 'trigger.zoom-enhanced:meeting_ended' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.zoom-enhanced:meeting_ended. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.zoom-enhanced:meeting_started': (_config) => `
function trigger_trigger_zoom_enhanced_meeting_started(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoom-enhanced): Implement trigger.zoom-enhanced:meeting_started Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoom-enhanced', operation: 'trigger.zoom-enhanced:meeting_started' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.zoom-enhanced:meeting_started. See docs/apps-script-rollout/backlog.md.');
}
`,

  'trigger.zoom-enhanced:recording_completed': (_config) => `
function trigger_trigger_zoom_enhanced_recording_completed(ctx) {
  // TODO(APPS_SCRIPT_BACKLOG#zoom-enhanced): Implement trigger.zoom-enhanced:recording_completed Apps Script handler.
  logWarn('apps_script_builder_todo', { connector: 'zoom-enhanced', operation: 'trigger.zoom-enhanced:recording_completed' });
  throw new Error('TODO[apps-script-backlog]: Implement trigger.zoom-enhanced:recording_completed. See docs/apps-script-rollout/backlog.md.');
}
`
};
